apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appname }}
  namespace: ars
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.appname }}
  template:
    metadata:
      labels:
        app: {{ .Values.appname }}
      annotations:
        checksum/config: {{ tpl (.Files.Glob "configs/settings.py").AsConfig .  | sha256sum }}
    spec:
      containers:
        - name: arsserver
          image: "{{ .Values.arsserver.image.repository }}:{{ .Values.arsserver.image.tag }}"
          imagePullPolicy: {{ .Values.arsserver.image.PullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "/bin/bash /ars/config/startup.sh && python tr_sys/manage.py runserver 0.0.0.0:8000 --noreload"]
          ports:
            - containerPort: {{ .Values.arsserver.containerPort }}
          volumeMounts:
            - name: config-vol
              mountPath: /ars/tr_sys/tr_sys/settings.py
              subPath: settings.py
            - name: config-cnf-vol
              mountPath: /etc/mysql/my.cnf
              subPath: mysql.cnf
          env:
            - name: TR_ENV
              value: {{ .Values.arsserver.env.TR_ENV }}
            - name: TR_APPRAISE
              value: {{ .Values.arsserver.env.TR_APPRAISE }}
            - name: TR_NORMALIZER
              value: {{ .Values.arsserver.env.TR_NORMALIZER }}
            - name: TR_ANNOTATOR
              value: {{ .Values.arsserver.env.TR_ANNOTATOR }}
            - name: JAEGER_HOST
              value: {{ .Values.arsserver.env.JAEGER_HOST }}
          {{- with .Values.arsserver.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: celeryworker
          image: "{{ .Values.celeryworker.image.repository }}:{{ .Values.celeryworker.image.tag }}"
          imagePullPolicy: {{ .Values.celeryworker.image.PullPolicy }}
          command: ["/bin/sh"]
          args: ["-c", "wait-for localhost:5672 -t 30 && wait-for localhost:8000 -t 60 -- /bin/bash /ars/config/start_celery.sh"]
          volumeMounts:
            - name: config-vol
              mountPath: /ars/tr_sys/tr_sys/settings.py
              subPath: settings.py
          env:
            - name: TR_APPRAISE
              value: {{ .Values.celeryworker.env.TR_APPRAISE }}
            - name: TR_NORMALIZER
              value: {{ .Values.celeryworker.env.TR_NORMALIZER }}
            - name: TR_ANNOTATOR
              value: {{ .Values.celeryworker.env.TR_ANNOTATOR }}
            - name: JAEGER_HOST
              value: {{ .Values.celeryworker.env.JAEGER_HOST }}
          {{- with .Values.celeryworker.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: rabbitmq
          image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
          imagePullPolicy: {{ .Values.rabbitmq.image.PullPolicy }}
          ports:
            - containerPort: {{ .Values.rabbitmq.containerPort }}
          {{- with .Values.rabbitmq.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.PullPolicy }}
          ports:
            - containerPort: {{ .Values.redis.containerPort }}
          {{- with .Values.redis.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config-vol
          configMap:
            name: {{ .Values.appname }}-config
            items:
              - key: settings.py
                path: settings.py
        - name: config-cnf-vol
          configMap:
            name: {{ .Values.appname }}-cnf-config
            items:
              - key: mysql.cnf
                path: mysql.cnf
      restartPolicy: Always
      
