{"took": 123, "total": 134, "max_score": 5.1635957, "hits": [{"_id": "602edb304409ded55faecf0364a70a7d", "_meta": {"date_created": "2021-05-06T06:59:30.336125+00:00", "last_updated": "2021-05-14T07:00:35.718878+00:00", "url": "https://arax.ncats.io/api/arax/v1.1/openapi.json", "username": "edeutsch"}, "_score": 5.1635957, "_status": {"refresh_status": 299, "refresh_ts": "2021-05-14T07:00:35+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:05:52.520393"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "example": "DEBUG", "type": "string"}, "MeshNgdResponse": {"example": {"message": "Term 1 'malria' not found in MeSH", "result_code": "TermNotFound", "value": 0.714}, "properties": {"message": {"description": "Extended message denoting the success or mode of failure for request", "example": "Term 1 'malria' not found in MeSH", "type": "string"}, "result_code": {"description": "Set to OK for success, or some other short string to indicate and error (e.g., TermNotFound, etc.)", "example": "TermNotFound", "type": "string"}, "value": {"description": "Calculated Normalized Google Distance for the two supplied terms", "example": 0.714, "format": "float", "type": "number"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:physically_interacts_with"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:ChemicalSubstance"], "ids": ["CHEMBL.COMPOUND:CHEMBL112"]}, "n01": {"categories": ["biolink:Protein"]}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "example": {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, "properties": {"object": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "predicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}}, "required": ["object", "predicate", "subject"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "example": {"edges": [{"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}], "nodes": {"key": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}}}, "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "example": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}, "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["id"], "type": "object"}, "OperationBind": {"additionalProperties": false, "properties": {"id": {"enum": ["bind"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationCompleteResults": {"additionalProperties": false, "properties": {"id": {"enum": ["complete_results"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationFill": {"additionalProperties": false, "properties": {"id": {"enum": ["fill"], "type": "string"}, "parameters": {"oneOf": [{"additionalProperties": false, "properties": {"allowlist": {"description": "List of knowledge providers/sources that may be used to provide knowledge.", "example": ["icees"], "items": {"type": "string"}, "minLength": 1, "type": "array"}}, "type": "object"}, {"additionalProperties": false, "properties": {"denylist": {"description": "List of knowledge providers/sources that may NOT be used to provide knowledge.", "example": ["ctd"], "items": {"type": "string"}, "minLength": 1, "type": "array"}}, "type": "object"}], "type": "object"}}, "required": ["id"], "type": "object"}, "OperationFilterKgraph": {"additionalProperties": false, "properties": {"id": {"enum": ["filter_kgraph"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationFilterKgraphOrphans": {"additionalProperties": false, "properties": {"id": {"enum": ["filter_kgraph_orphans"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationFilterResults": {"additionalProperties": false, "properties": {"id": {"enum": ["filter_results"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationFilterResultsTopN": {"additionalProperties": false, "properties": {"id": {"enum": ["filter_results_top_n"], "type": "string"}, "parameters": {"$ref": "#/components/schemas/OperationFilterResultsTopN_parameters"}}, "required": ["id", "parameters"], "type": "object"}, "OperationFilterResultsTopN_parameters": {"properties": {"max_results": {"description": "The maximum number of results to return.", "example": 50, "minimum": 0, "type": "integer"}}, "required": ["max_results"], "type": "object"}, "OperationOverlay": {"additionalProperties": false, "properties": {"id": {"enum": ["overlay"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "OperationOverlayComputeNgd": {"additionalProperties": false, "properties": {"id": {"enum": ["overlay_compute_ngd"], "type": "string"}, "parameters": {"$ref": "#/components/schemas/OperationOverlayComputeNgd_parameters"}}, "required": ["id", "parameters"], "type": "object"}, "OperationOverlayComputeNgd_parameters": {"properties": {"qnode_keys": {"description": "A list of qnode keys to overlay pairwise edges onto. Must be be a list of at least 2 valid qnodes.", "example": ["n00", "n01"], "items": {"type": "string"}, "type": "array"}, "virtual_relation_label": {"description": "An label to help identify the virtual edge in the relation field", "example": "NGD1", "type": "string"}}, "required": ["qnode_keys", "virtual_relation_label"], "type": "object"}, "OperationRestate": {"additionalProperties": false, "properties": {"id": {"enum": ["restate"], "type": "string"}, "parameters": {}}, "required": ["id"], "type": "object"}, "Operations": {"additionalProperties": true, "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "nullable": true, "properties": {"actions": {"description": "List of order-dependent operations to execute", "example": ["add_qnode(name=acetaminophen, key=n00)", "add_qnode(category=biolink:Protein, key=n01)", "add_qedge(subject=n01, object=n00, key=e00)", "expand(edge_key=e00)", "resultify()", "filter_results(action=limit_number_of_results, max_results=10)"], "items": {"type": "string"}, "type": "array"}, "message_uris": {"description": "List of URIs for Message or Response objects to fetch and process", "example": ["https://arax.ncats.io/api/arax/v1.0/response/38"], "items": {"type": "string"}, "type": "array"}, "messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "options": {"additionalProperties": true, "description": "Map of order independent options that apply during processing", "example": {"halt_on_warning": false}, "type": "object"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "exclude": {"description": "If set to true, then all subgraphs containing this edge are excluded from the final results. (optional)", "type": "boolean"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"bypass_cache": false, "enforce_edge_directionality": false, "log_level": "DEBUG", "max_results": 100, "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:physically_interacts_with"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:ChemicalSubstance"], "ids": ["CHEMBL.COMPOUND:CHEMBL112"]}, "n01": {"categories": ["biolink:Protein"]}}}}, "operations": null, "page_number": 1, "page_size": 100, "return_minimal_metadata": false, "stream_progress": false, "workflow": null}, "properties": {"bypass_cache": {"default": false, "description": "Set to true in order to bypass any possible cached response and try to answer the query from scratch", "type": "boolean"}, "enforce_edge_directionality": {"default": false, "description": "Set to true in order to enforce edge directionality during queries. By default, edge directionality can be reversed without penalty.", "type": "boolean"}, "log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "max_results": {"default": 100, "description": "Maximum number of individual results to return", "example": 100, "type": "integer"}, "message": {"$ref": "#/components/schemas/Message"}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "nullable": true}, "page_number": {"default": 1, "description": "Page number of results when the number of results exceeds the page_size, with page 1 as the first page", "example": 1, "type": "integer"}, "page_size": {"default": 100, "description": "Split the results into pages with this number of results each", "example": 100, "type": "integer"}, "return_minimal_metadata": {"default": false, "description": "Set to true in order to return only the most minimal metadata. By default, rich metadata for nodes and edges are supplied, which may cause a very large and slower Response.", "type": "boolean"}, "stream_progress": {"default": false, "description": "Set to true in order to receive a stream of LogEntry objects as the query is progressing", "type": "boolean"}, "workflow": {"description": "A list of operations to be applied", "items": {"oneOf": [{"$ref": "#/components/schemas/OperationOverlay"}, {"$ref": "#/components/schemas/OperationBind"}, {"$ref": "#/components/schemas/OperationOverlayComputeNgd"}, {"$ref": "#/components/schemas/OperationFill"}, {"$ref": "#/components/schemas/OperationFilterResults"}, {"$ref": "#/components/schemas/OperationFilterKgraph"}, {"$ref": "#/components/schemas/OperationRestate"}, {"$ref": "#/components/schemas/OperationCompleteResults"}, {"$ref": "#/components/schemas/OperationFilterResultsTopN"}, {"$ref": "#/components/schemas/OperationFilterKgraphOrphans"}]}, "nullable": true, "type": "array"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Question": {"additionalProperties": true, "properties": {"language": {"description": "Human language in which the question is posed", "enum": ["English"], "example": "English", "type": "string"}, "text": {"description": "Free text question", "example": "what genetic conditions offer protection against malaria", "type": "string"}}, "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"context": "https://rtx.ncats.io/ns/translator.jsonld", "datetime": "2021-01-09T12:34:45Z", "description": "Success. 42 results found.", "id": "https://arax.ncats.io/api/rtx/v1.0/response/123", "logs": [{"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:physically_interacts_with"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:ChemicalSubstance"], "ids": ["CHEMBL.COMPOUND:CHEMBL112"]}, "n01": {"categories": ["biolink:Protein"]}}}}, "operations": "", "original_question": "what proteins are affected by sickle cell anemia", "query_options": {"coalesce": true, "threshold": 0.9}, "reasoner_id": "ARAX", "restated_question": "Which proteins are affected by sickle cell anemia?", "schema_version": "1.0.0", "status": "Success", "table_column_names": ["chemical_substance.name", "chemical_substance.id"], "tool_version": "ARAX 0.8.0", "type": "TranslatorAPIResponse", "workflow": ["", ""]}, "properties": {"context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this response was generated", "example": "2021-01-09T12:34:45Z", "type": "string"}, "description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "id": {"description": "URI for this response", "example": "https://arax.ncats.io/api/rtx/v1.0/response/123", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with the processing plan and options for how those messages were processed and returned"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this response (one of ARAX, Robokop, etc.)", "example": "ARAX", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "schema_version": {"description": "Version label of this TRAPI schema", "example": "1.0.0", "type": "string"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "tool_version": {"description": "Version label of the tool that generated this response", "example": "ARAX 0.8.0", "type": "string"}, "type": {"description": "Entity type of this response", "example": "TranslatorAPIResponse", "type": "string"}, "workflow": {"description": "A list of operations that were applied", "items": {"oneOf": [{"$ref": "#/components/schemas/OperationOverlay"}, {"$ref": "#/components/schemas/OperationBind"}, {"$ref": "#/components/schemas/OperationOverlayComputeNgd"}, {"$ref": "#/components/schemas/OperationFill"}, {"$ref": "#/components/schemas/OperationFilterResults"}, {"$ref": "#/components/schemas/OperationFilterKgraph"}, {"$ref": "#/components/schemas/OperationRestate"}, {"$ref": "#/components/schemas/OperationCompleteResults"}, {"$ref": "#/components/schemas/OperationFilterResultsTopN"}, {"$ref": "#/components/schemas/OperationFilterKgraphOrphans"}]}, "type": "array"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive)\n 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "nullable": true, "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "nullable": true, "type": "string"}, "edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "nullable": true, "type": "string"}, "essence_category": {"description": "A Translator BioLink bioentity category of the essence", "example": "biolink:ChemicalSubstance", "nullable": true, "type": "string"}, "id": {"description": "URI for this result", "example": "result:234", "nullable": true, "type": "string"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., ARAX, Robokop, etc.)", "example": "ARAX", "nullable": true, "type": "string"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "nullable": true, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "nullable": true, "type": "number"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants simplified tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "items": {"oneOf": [{"type": "string"}, {"type": "number"}]}, "nullable": true, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "nullable": true, "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "nullable": true, "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "nullable": true, "type": "string"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "edeutsch@systemsbiology.org"}, "description": "TRAPI 1.1 endpoint for the NCATS Biomedical Translator Reasoner called ARAX", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/RTXteam/RTX/blob/master/LICENSE", "title": "ARAX Translator Reasoner", "version": "1.1.0", "x-translator": {"biolink-version": "1.7.0", "component": "ARA", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Expander Agent"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "operations": ["filter_results_top_n", "overlay_compute_ngd", "bind", "fill", "filter_kgraph_orphans"], "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/PubmedMeshNgd/{term1}/{term2}": {"get": {"operationId": "pubmed_mesh_ngd", "parameters": [{"description": "First of two terms. Order not important.", "explode": false, "in": "path", "name": "term1", "required": true, "schema": {"type": "string"}, "style": "simple"}, {"description": "Second of two terms. Order not important.", "explode": false, "in": "path", "name": "term2", "required": true, "schema": {"type": "string"}, "style": "simple"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MeshNgdResponse"}}}, "description": "successful operation"}, "400": {"description": "Invalid terms"}}, "summary": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurrence in all PubMed article annotations", "tags": ["PubmedMeshNgd"], "x-openapi-router-controller": "openapi_server.controllers.pubmed_mesh_ngd_controller"}}, "/entity": {"get": {"operationId": "get_entity", "parameters": [{"description": "A string to search by (name, abbreviation, CURIE, etc.). The parameter may be repeated for multiple search strings.", "explode": true, "in": "query", "name": "q", "required": true, "schema": {"example": ["MESH:D014867", "NCIT:C34373"], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "successful operation"}, "404": {"description": "Entity not found"}}, "summary": "Obtain CURIE and synonym information about a search term", "tags": ["entity"], "x-openapi-router-controller": "openapi_server.controllers.entity_controller"}}, "/exampleQuestions": {"get": {"operationId": "example_questions", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "object"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Request a list of example questions that ARAX can answer", "tags": ["exampleQuestions"], "x-openapi-router-controller": "openapi_server.controllers.example_questions_controller"}}, "/meta_knowledge_graph": {"get": {"operationId": "meta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"], "x-openapi-router-controller": "openapi_server.controllers.meta_knowledge_graph_controller"}}, "/predicates": {"get": {"deprecated": true, "operationId": "predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "openapi_server.controllers.query_controller"}}, "/response/{response_id}": {"get": {"operationId": "get_response", "parameters": [{"description": "Integer identifier of the response to return", "explode": false, "in": "path", "name": "response_id", "required": true, "schema": {"type": "string"}, "style": "simple"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "successful operation"}, "404": {"description": "response_id not found"}}, "summary": "Request a previously stored response from the server", "tags": ["response"], "x-openapi-router-controller": "openapi_server.controllers.response_controller"}}, "/translate": {"post": {"operationId": "translate", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Question"}}}, "description": "Question information to be translated", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Query"}, "type": "array"}}}, "description": "successful operation"}, "400": {"description": "Invalid status value"}}, "summary": "Translate natural language question into a standardized query", "tags": ["translate"], "x-openapi-router-controller": "openapi_server.controllers.translate_controller"}}}, "servers": [{"url": "https://arax.ncats.io/api/arax/v1.1"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Get supported relationships", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "meta_knowledge_graph"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://arax.ncats.io/overview.html#query"}, "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}, {"description": "Request a previously stored response from the server", "externalDocs": {"description": "Documentation for the reasoner response function", "url": "https://arax.ncats.io/overview.html#response"}, "name": "response"}, {"description": "Translate natural language question into a standardized query", "externalDocs": {"description": "Documentation for the reasoner translate function", "url": "https://arax.ncats.io/overview.html#translate"}, "name": "translate"}, {"description": "Return identifier and type of some entity in the knowledge graph", "externalDocs": {"description": "Documentation for the reasoner entity function", "url": "https://arax.ncats.io/overview.html#entity"}, "name": "entity"}, {"description": "Return a list of example questions that the reasoner can answer", "externalDocs": {"description": "Documentation for the reasoner exampleQuestions function", "url": "https://arax.ncats.io/overview.html#exampleQuestions"}, "name": "exampleQuestions"}, {"description": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurance in all PubMed article annotations", "externalDocs": {"description": "Documentation for the reasoner PubmedMeshNgd function", "url": "https://arax.ncats.io/overview.html#PubmedMeshNgd"}, "name": "PubmedMeshNgd"}]}, {"_id": "fd006b0be2774dde2dca18dd9d1005cd", "_meta": {"date_created": "2021-02-11T00:00:33.392925+00:00", "last_updated": "2021-05-14T07:01:07.068380+00:00", "url": "https://arax.ncats.io/api/arax/v1.0/openapi.json", "username": "edeutsch"}, "_score": 5.1635957, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:06+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:13.176883"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "nullable": true, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "MeshNgdResponse": {"example": {"message": "Term 1 'malria' not found in MeSH", "result_code": "TermNotFound", "value": 0.714}, "properties": {"message": {"description": "Extended message denoting the success or mode of failure for request", "example": "Term 1 'malria' not found in MeSH", "type": "string"}, "result_code": {"description": "Set to OK for success, or some other short string to indicate and error (e.g., TermNotFound, etc.)", "example": "TermNotFound", "type": "string"}, "value": {"description": "Calculated Normalized Google Distance for the two supplied terms", "example": 0.714, "format": "float", "type": "number"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "Operations": {"additionalProperties": true, "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "properties": {"actions": {"description": "List of order-dependent operations to execute", "example": ["add_qnode(name=acetaminophen, key=n00)", "add_qnode(category=biolink:Protein, key=n01)", "add_qedge(subject=n01, object=n00, key=e00)", "expand(edge_key=e00)", "resultify()", "filter_results(action=limit_number_of_results, max_results=10)"], "items": {"type": "string"}, "type": "array"}, "message_uris": {"description": "List of URIs for Message or Response objects to fetch and process", "example": ["https://arax.ncats.io/api/arax/v1.0/response/38"], "items": {"type": "string"}, "type": "array"}, "messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "options": {"additionalProperties": true, "description": "Map of order independent options that apply during processing", "example": {"halt_on_warning": false}, "type": "object"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"exclude": {"description": "If set to true, then all subgraphs containing this edge are excluded from the final results. (optional)", "type": "boolean"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"asynchronous": "false", "bypass_cache": "true", "max_results": 100, "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "page_number": 1, "page_size": 50}, "properties": {"asynchronous": {"description": "Set to true in order to receive an incomplete message_id if the query will take a while. Client can then periodically request that message_id for a status update and eventual complete message", "example": "false", "type": "string"}, "bypass_cache": {"description": "Set to true in order to bypass any possible cached message and try to answer the query over again", "example": "true", "type": "string"}, "max_results": {"description": "Maximum number of individual results to return", "example": 100, "type": "integer"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned"}, "page_number": {"description": "Page number of results when the number of results exceeds the page_size", "example": 1, "type": "integer"}, "page_size": {"description": "Split the results into pages with this number of results each", "example": 20, "type": "integer"}, "reasoner_ids": {"description": "List of reasoners to consult for the query. By default it is assumed to be the current reasoner being queried, but this mechanism could be used to proxy queries to other reasoners.", "items": {"type": "string"}, "type": "array"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Question": {"additionalProperties": true, "properties": {"language": {"description": "Human language in which the question is posed", "enum": ["English"], "example": "English", "type": "string"}, "text": {"description": "Free text question", "example": "what genetic conditions offer protection against malaria", "type": "string"}}, "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"context": "https://rtx.ncats.io/ns/translator.jsonld", "datetime": "2021-01-09T12:34:45Z", "description": "Success. 42 results found.", "id": "https://arax.ncats.io/api/rtx/v1.0/response/123", "logs": [{"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": "", "operations": "", "original_question": "what proteins are affected by sickle cell anemia", "query_options": {"coalesce": true, "threshold": 0.9}, "query_type_id": "Q2", "reasoner_id": "ARAX", "restated_question": "Which proteins are affected by sickle cell anemia?", "schema_version": "1.0.0", "status": "Success", "table_column_names": ["chemical_substance.name", "chemical_substance.id"], "terms": {"key": "{}"}, "tool_version": "ARAX 0.7.0", "type": "TranslatorAPIResponse"}, "properties": {"context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this response was generated", "example": "2021-01-09T12:34:45Z", "type": "string"}, "description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "id": {"description": "URI for this response", "example": "https://arax.ncats.io/api/rtx/v1.0/response/123", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with the processing plan and options for how those messages were processed and returned"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "query_type_id": {"description": "The query type id if one is known for the query/message (as defined in a shared manner)", "example": "Q2", "type": "string"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this response (one of ARAX, Robokop, etc.)", "example": "ARAX", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "schema_version": {"description": "Version label of this TRAPI schema", "example": "1.0.0", "type": "string"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "terms": {"additionalProperties": true, "description": "Dict of terms needed by the specific query type", "properties": {"anatomical_entity": {"example": "liver", "type": "string"}, "chemical_substance": {"example": "ibuprofen", "type": "string"}, "disease": {"example": "malaria", "type": "string"}, "metabolite": {"example": "ibuprofen", "type": "string"}, "protein": {"example": "P12345", "type": "string"}}, "type": "object"}, "tool_version": {"description": "Version label of the tool that generated this response", "example": "ARAX 0.7.0", "type": "string"}, "type": {"description": "Entity type of this response", "example": "TranslatorAPIResponse", "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive)\n 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "nullable": true, "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "nullable": true, "type": "string"}, "edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "nullable": true, "type": "string"}, "essence_category": {"description": "A Translator BioLink bioentity category of the essence", "example": "biolink:ChemicalSubstance", "nullable": true, "type": "string"}, "id": {"description": "URI for this result", "example": "result:234", "nullable": true, "type": "string"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., ARAX, Robokop, etc.)", "example": "ARAX", "nullable": true, "type": "string"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "nullable": true, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "nullable": true, "type": "number"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants simplified tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "nullable": true, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "nullable": true, "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "nullable": true, "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "nullable": true, "type": "string"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "edeutsch@systemsbiology.org"}, "description": "TRAPI 1.0 endpoint for the NCATS Biomedical Translator Reasoner called ARAX", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/RTXteam/RTX/blob/master/LICENSE", "title": "ARAX Translator Reasoner", "version": "1.0.0", "x-translator": {"component": "ARA", "team": ["Expander Agent"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/PubmedMeshNgd/{term1}/{term2}": {"get": {"operationId": "pubmed_mesh_ngd", "parameters": [{"description": "First of two terms. Order not important.", "explode": false, "in": "path", "name": "term1", "required": true, "schema": {"type": "string"}, "style": "simple"}, {"description": "Second of two terms. Order not important.", "explode": false, "in": "path", "name": "term2", "required": true, "schema": {"type": "string"}, "style": "simple"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MeshNgdResponse"}}}, "description": "successful operation"}, "400": {"description": "Invalid terms"}}, "summary": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurrence in all PubMed article annotations", "tags": ["PubmedMeshNgd"], "x-openapi-router-controller": "openapi_server.controllers.pubmed_mesh_ngd_controller"}}, "/entity": {"get": {"operationId": "get_entity", "parameters": [{"description": "A string to search by (name, abbreviation, CURIE, etc.). The parameter may be repeated for multiple search strings.", "explode": true, "in": "query", "name": "q", "required": true, "schema": {"example": ["MESH:D014867", "NCIT:C34373"], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "successful operation"}, "404": {"description": "Entity not found"}}, "summary": "Obtain CURIE and synonym information about a search term", "tags": ["entity"], "x-openapi-router-controller": "openapi_server.controllers.entity_controller"}}, "/exampleQuestions": {"get": {"operationId": "example_questions", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "object"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Request a list of example questions that ARAX can answer", "tags": ["exampleQuestions"], "x-openapi-router-controller": "openapi_server.controllers.example_questions_controller"}}, "/predicates": {"get": {"operationId": "predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query", "parameters": [{"description": "Set to true in order to bypass any possible cached response and try to answer the query over again\n", "explode": true, "in": "query", "name": "bypass_cache", "required": false, "schema": {"default": false, "type": "boolean"}, "style": "form"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "openapi_server.controllers.query_controller"}}, "/response/{response_id}": {"get": {"operationId": "get_response", "parameters": [{"description": "Integer identifier of the response to return", "explode": false, "in": "path", "name": "response_id", "required": true, "schema": {"type": "string"}, "style": "simple"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "successful operation"}, "404": {"description": "response_id not found"}}, "summary": "Request a previously stored response from the server", "tags": ["response"], "x-openapi-router-controller": "openapi_server.controllers.response_controller"}}, "/translate": {"post": {"operationId": "translate", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Question"}}}, "description": "Question information to be translated", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Query"}, "type": "array"}}}, "description": "successful operation"}, "400": {"description": "Invalid status value"}}, "summary": "Translate natural language question into a standardized query", "tags": ["translate"], "x-openapi-router-controller": "openapi_server.controllers.translate_controller"}}}, "servers": [{"url": "https://arax.ncats.io/api/arax/v1.0"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://arax.ncats.io/overview.html#query"}, "name": "query"}, {"name": "translator"}, {"name": "reasoner"}, {"name": "trapi"}, {"description": "Request a previously stored response from the server", "externalDocs": {"description": "Documentation for the reasoner response function", "url": "https://arax.ncats.io/overview.html#response"}, "name": "response"}, {"description": "Translate natural language question into a standardized query", "externalDocs": {"description": "Documentation for the reasoner translate function", "url": "https://arax.ncats.io/overview.html#translate"}, "name": "translate"}, {"description": "Return identifier and type of some entity in the knowledge graph", "externalDocs": {"description": "Documentation for the reasoner entity function", "url": "https://arax.ncats.io/overview.html#entity"}, "name": "entity"}, {"description": "Return a list of example questions that the reasoner can answer", "externalDocs": {"description": "Documentation for the reasoner exampleQuestions function", "url": "https://arax.ncats.io/overview.html#exampleQuestions"}, "name": "exampleQuestions"}, {"description": "Query to get the Normalized Google Distance between two MeSH terms based on co-occurance in all PubMed article annotations", "externalDocs": {"description": "Documentation for the reasoner PubmedMeshNgd function", "url": "https://arax.ncats.io/overview.html#PubmedMeshNgd"}, "name": "PubmedMeshNgd"}]}, {"_id": "89590198e93fb9377ab547eb903c5532", "_meta": {"date_created": "2019-10-22T04:28:40.627585+00:00", "last_updated": "2021-05-14T07:00:31.641199+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/broad-pgm/openapi.yml", "username": "newgene"}, "_score": 5.061766, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:31+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:05:53.952718"}, "components": {"schemas": {}}, "info": {"contact": {"email": "translator@broadinstitute.org", "name": "Broad PGM translator", "url": "https://translator.ncats.io/broad-pgm-translator/", "x-id": "https://github.com/broadinstitute/broad-translator", "x-role": "responsible organization"}, "termsOfService": "https://translator.ncats.io/broad-pgm-translator", "title": "Broad probabilistic graphical models translator", "version": "0.1.0"}, "openapi": "3.0.0", "paths": {"/modelList": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"properties": {"modelID": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}}}, "description": "Successful response"}}, "summary": "List available models"}}, "/{modelID}/modelSignature": {"get": {"parameters": [{"description": "Model identifier", "in": "path", "name": "modelID", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"modelID": {"type": "string"}, "variableGroup": {"items": {"properties": {"asInput": {"type": "boolean"}, "asOutput": {"type": "boolean"}, "authorityURL": {"type": "string"}, "groupDistribution": {"enum": ["discrete", "empirical", "Gaussian", "Poisson"]}, "groupType": {"enum": ["Bollean", "Number", "String"], "type": "string"}, "groupValue": {"items": {"type": "string"}, "type": "array"}, "modelVariable": {"items": {"properties": {"authorityURI": {"type": "string"}, "groupDistribution": {"enum": ["discrete", "empirical", "Gaussian", "Poisson"]}, "variableID": {"type": "string"}, "variableType": {"enum": ["Bollean", "Number", "String"], "type": "string"}, "variableValue": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}, "type": "array"}, "variableGroupID": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "Successful response"}}, "summary": "Get model signature"}}, "/evaluateModel": {"post": {"requestBody": {"content": {"application/json": {"schema": {"properties": {"modelID": {"type": "string"}, "modelInput": {"items": {"properties": {"modelVariable": {"items": {"properties": {"priorDistribution": {"properties": {"GaussianDistribution": {"properties": {"distributionMean": {"type": "number"}, "distributionStDev": {"type": "number"}}, "type": "object"}, "PoissonDistribution": {"properties": {"lambdaParameter": {"type": "number"}}, "type": "object"}, "discreteDistribution": {"items": {"properties": {"priorProbability": {"type": "number"}, "variableValue": {"type": "string"}}, "type": "object"}, "type": "array"}, "empiricalDistribution": {"properties": {"distributionMean": {"type": "number"}, "distributionPercentile": {"items": {"type": "number"}, "type": "array"}, "distributionStDev": {"type": "number"}}, "type": "object"}}, "type": "object"}, "variableID": {"type": "string"}}, "type": "object"}, "type": "array"}, "variableGroupID": {"type": "string"}}, "type": "object"}, "type": "array"}, "modelOutput": {"items": {"properties": {"rawOutput": {"type": "boolean"}, "variableGroupID": {"type": "string"}, "variableID": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"posteriorProbabilities": {"items": {"properties": {"modelVariable": {"items": {"properties": {"posteriorDistribution": {"properties": {"GaussianDistribution": {"properties": {"distributionMean": {"type": "number"}, "distributionStDev": {"type": "number"}}, "type": "object"}, "PoissonDistribution": {"properties": {"lambdaParameter": {"type": "number"}}, "type": "object"}, "discreteDistribution": {"items": {"properties": {"posteriorProbability": {"type": "number"}, "variableValue": {"type": "string"}}, "type": "object"}, "type": "array"}, "empiricalDistribution": {"properties": {"distributionMean": {"type": "number"}, "distributionPercentile": {"items": {"type": "number"}, "type": "array"}, "distributionStDev": {"type": "number"}}, "type": "object"}, "rawDistribution": {"items": {"type": "number"}, "type": "array"}}, "type": "object"}, "variableID": {"type": "string"}}, "type": "object"}, "type": "array"}, "variableGroupID": {"type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "Successful response"}}, "summary": "evaluate model"}}}, "servers": [{"url": "https://translator.ncats.io/broad-pgm-translator"}]}, {"_id": "89054eff6ee6d91641d278d9ffdb3993", "_meta": {"date_created": "2021-01-20T00:00:12.144499+00:00", "last_updated": "2021-05-14T07:03:54.025054+00:00", "url": "https://api.collaboratory.semanticscience.org/openapi.json", "username": "vemonet"}, "_score": 4.6121287, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:03:53+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:48.485792"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicates": ["biolink:treats"], "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Drug", "biolink:ChemicalSubstance"], "ids": ["DRUGBANK:DB00394", "CHEBI:75725"]}, "n1": {"categories": ["biolink:Disease"]}}}}, "query_options": {"n_results": 2}}, "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "QueryOptions": {"description": "Additional query options that apply to OpenPredict", "properties": {"n_results": {"description": "The maximum number of results to be returned.", "example": 2, "type": "integer"}}}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "vincent.emonet@maastrichtuniversity.nl"}, "description": "Translator Reasoner API for the Knowledge Collaboratory, hosted on the [Nanopublications network](http://nanopub.org/wordpress/), for annotated drug indications or any other BioLink-compliant claims. \n\n This Open API supports [Translator Reasoner API](https://github.com/NCATSTranslator/ReasonerAPI) queries and the [`KGX`](https://github.com/biolink/kgx) format \n\nSee the API GitHub repository: [github.com/MaastrichtU-IDS/knowledge-collaboratory-api](https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api) \n\n[![Test production API](https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api/actions/workflows/run-tests-prod.yml/badge.svg)](https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api/actions/workflows/run-tests-prod.yml) \n\nThis service is supported by the [NCATS Translator project](https://ncats.nih.gov/translator/about)", "license": {"name": "MIT license", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "https://raw.githubusercontent.com/MaastrichtU-IDS/knowledge-collaboratory-api/master/LICENSE", "title": "Translator Knowledge Collaboratory API", "version": "1.0.0", "x-translator": {"biolink-version": "1.8.2", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/production/x-translator/"}, "team": ["Clinical Data Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/kgx": {"get": {"operationId": "api.get_kgx", "responses": {"200": {"content": {"application/zip": {"schema": {"format": "binary", "type": "string"}}}, "description": "Zip file with nodes and edges files in KGX TSV format"}}, "summary": "Experimental: get the Knowledge Collaboratory drug indications in KGX TSV format (TSV files in a .zip)", "tags": ["translator"]}}, "/meta_knowledge_graph": {"get": {"operationId": "api.get_meta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/predicates": {"get": {"deprecated": true, "operationId": "api.get_predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/query": {"post": {"description": "", "operationId": "api.post_reasoner_query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"]}}}, "servers": [{"url": "https://api.collaboratory.semanticscience.org"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api#predicates-operation"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "https://github.com/MaastrichtU-IDS/knowledge-collaboratory-api#query-operation"}, "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}]}, {"_id": "bfe51132e3f325e9f74a7fa40dc81583", "_meta": {"date_created": "2019-06-10T17:56:55.297135+00:00", "last_updated": "2021-02-17T07:42:21.884706+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/indigo/openapi.yml", "username": "vdancik"}, "_score": 4.019501, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:00:56+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:13.280964"}, "components": {"schemas": {"Credentials": {"additionalProperties": true, "description": "Credentials needed for programmatic access to the remote knowledge graph", "properties": {"password": {"description": "Password needed for programmatic access to the remote knowledge graph", "type": "string"}, "username": {"description": "Username needed for programmatic access to the remote knowledge graph", "type": "string"}}, "required": ["username", "password"], "type": "object"}, "Edge": {"additionalProperties": true, "description": "An edge in the thought subgraph linking two nodes", "properties": {"confidence": {"description": "Confidence metric for this edge, a value between (inclusive) 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.99, "format": "float", "type": "number"}, "defined_datetime": {"description": "Datetime at which the KG builder/updater pulled the information from the original source. Used as a freshness indicator.", "example": "2018-11-03 15:34:23", "type": "string"}, "edge_attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/EdgeAttribute"}, "type": "array"}, "evidence_type": {"description": "A CURIE/URI for class of evidence supporting the statement made in an edge - typically a class from the ECO ontology", "example": "ECO:0000220", "type": "string"}, "id": {"description": "Local identifier for this node which is unique within this KnowledgeGraph, and perhaps within the source reasoner's knowledge graph", "example": "553903", "type": "string"}, "is_defined_by": {"description": "A CURIE/URI for the translator group that made the KG", "example": "reasoner", "type": "string"}, "negated": {"description": "Boolean that if set to true, indicates the edge statement is negated i.e. is not true", "example": true, "type": "boolean"}, "provided_by": {"description": "A CURIE/URI for the knowledge source that defined this edge", "example": "OMIM", "type": "string"}, "publications": {"description": "List of CURIEs for publications associated with this edge", "example": ["PMID:12345562"], "items": {"type": "string"}, "type": "array"}, "qualifiers": {"description": "Terms representing qualifiers that modify or qualify the meaning of the statement made in an edge", "example": "ECO:0000220", "type": "string"}, "relation": {"description": "Lower-level relationship type of this edge", "example": "upregulates", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "type": {"description": "Higher-level relationship type of this edge", "example": "affects", "type": "string"}, "weight": {"description": "Weight metric for this edge, with no upper bound. Perhaps useful when formal confidence metrics are not available", "example": 0.99, "format": "float", "type": "number"}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "EdgeAttribute": {"additionalProperties": true, "description": "A generic additional attribute for an edge", "properties": {"name": {"description": "Formal name of the attribute", "example": "Cell type limitation", "type": "string"}, "type": {"description": "Entity type of this attribute", "example": "localization", "type": "string"}, "url": {"description": "A URL corresponding to this attribute", "example": "https://www.ncbi.nlm.nih.gov/pubmed/29309293", "type": "string"}, "value": {"description": "Value of the attribute. While all attributes should have a name, many will not have a value", "example": "MFC cells", "type": "string"}}, "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included.", "properties": {"edges": {"description": "List of edges in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/Edge"}, "type": "array"}, "nodes": {"description": "List of nodes in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/Node"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "Message": {"additionalProperties": true, "properties": {"code_description": {"description": "Extended description denoting the success or mode of failure in the generation of the message", "example": "9 results found", "type": "string"}, "context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this message was generated", "example": "2018-01-09 12:34:45", "type": "string"}, "id": {"description": "URI for this message", "example": "https://rtx.ncats.io/api/rtx/v1/message/123", "type": "string"}, "knowledge_graph": {"description": "KnowledgeGraph object that contains all the nodes and edges referenced in any of the possible answers to the query OR connection information for a remote knowledge graph", "oneOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}, {"$ref": "#/components/schemas/RemoteKnowledgeGraph"}], "type": "object"}, "message_code": {"description": "Set to OK for success, or some other short string to indicate and error (e.g., KGUnavailable, TermNotFound, etc.)", "example": "OK", "type": "string"}, "n_results": {"description": "Total number of results from the query (which may be less than what is returned if limits were placed on the number of results to return)", "example": 42, "type": "integer"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "type": "object"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "query_type_id": {"description": "The query type id if one is known for the query/message (as defined in https://docs.google.com/spreadsheets/d/18zW81wteUfOn3rFRVG0z8mW-ecNhdsfD_6s73ETJnUw/edit#gid=1742835901 )", "example": "Q2", "type": "string"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this message (one of RTX, Robokop, Indigo, Integrator, etc.)", "example": "reasoner", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "results": {"description": "List of all returned potential answers for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "type": "array"}, "schema_version": {"description": "Version label of this JSON-LD schema", "example": "0.9.0", "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "terms": {"additionalProperties": true, "description": "Dict of terms needed by the specific query type", "properties": {"anatomical_entity": {"example": "liver", "type": "string"}, "cell": {"example": "CL:0000738", "type": "string"}, "chemical_substance": {"example": "ibuprofen", "type": "string"}, "disease": {"example": "malaria", "type": "string"}, "drug": {"example": "ibuprofen", "type": "string"}, "gene": {"example": "HGNC:3535", "type": "string"}, "metabolite": {"example": "ibuprofen", "type": "string"}, "pathway": {"example": "GO:0004888", "type": "string"}, "protein": {"example": "P12345", "type": "string"}, "symptom": {"example": "UMLS:C0000737", "type": "string"}}, "type": "object"}, "tool_version": {"description": "Version label of the tool that generated this message", "example": "RTX 0.5.0", "type": "string"}, "type": {"description": "Entity type of this message", "example": "translator_reasoner_message", "type": "string"}}, "type": "object"}, "Node": {"additionalProperties": true, "description": "A node in the thought subgraph", "properties": {"description": {"description": "One to three sentences of description/definition of this entity", "example": "Haptoglobin captures, and combines with free plasma hemoglobin...", "type": "string"}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "type": "string"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "type": "string"}, "node_attributes": {"description": "A list of arbitrary attributes for the node", "items": {"$ref": "#/components/schemas/NodeAttribute"}, "type": "array"}, "symbol": {"description": "Short abbreviation or symbol for this entity", "example": "HP", "type": "string"}, "type": {"description": "Entity type of this node (e.g., protein, disease, etc.)", "example": ["protein"], "items": {"type": "string"}, "type": "array"}, "uri": {"description": "URI identifier for this node\"", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}}, "required": ["id"], "type": "object"}, "NodeAttribute": {"additionalProperties": true, "description": "A generic attribute for a node", "properties": {"name": {"description": "Formal name of the attribute", "example": "Wikipedia article", "type": "string"}, "type": {"description": "Entity type of this attribute", "example": "article", "type": "string"}, "url": {"description": "A URL corresponding to this attribute", "example": "https://en.wikipedia.org/wiki/Malaria", "type": "string"}, "value": {"description": "Value of the attribute", "example": "7.23e-12", "type": "string"}}, "type": "object"}, "PreviousMessageProcessingPlan": {"additionalProperties": true, "properties": {"options": {"additionalProperties": true, "description": "Dict of options that apply during processing in an order independent fashion", "example": {"topNMostFrequent": 1}, "type": "object"}, "previous_message_uris": {"description": "List of URIs for Message objects to fetch and process", "example": ["https://rtx.ncats.io/api/rtx/v1/message/300"], "items": {"type": "string"}, "type": "array"}, "previous_messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "processing_actions": {"description": "List of order-dependent actions to guide what happens with the Message object(s)", "example": ["mod45filter", "redirect2RTX"], "items": {"type": "string"}, "type": "array"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph", "properties": {"edge_id": {"description": "QueryGraph internal identifier for this QEdge. Recommended form: e00, e01, e02, etc.", "example": "e00", "type": "string"}, "negated": {"description": "Boolean that if set to true, indicates the edge statement is negated i.e. is not true", "example": true, "type": "boolean"}, "relation": {"description": "Lower-level relationship type of this edge", "example": "upregulates", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "type": {"description": "Higher-level relationship type of this edge", "example": "affects", "type": "string"}}, "required": ["source_id", "target_id"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph", "properties": {"curie": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "type": "string"}, "node_id": {"description": "QueryGraph internal identifier for this QNode. Recommended form: n00, n01, n02, etc.", "example": "n00", "type": "string"}, "type": {"description": "Entity type of this node (e.g., protein, disease, etc.)", "example": "disease", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "properties": {"asynchronous": {"description": "Set to true in order to receive an incomplete message_id if the query will take a while. Client can then periodically request that message_id for a status update and eventual complete message", "example": "false", "type": "string"}, "bypass_cache": {"description": "Set to true in order to bypass any possible cached message and try to answer the query over again", "example": "true", "type": "string"}, "max_results": {"description": "Maximum number of individual results to return", "example": 100, "type": "integer"}, "page_number": {"description": "Page number of results when the number of results exceeds the page_size", "example": 1, "type": "integer"}, "page_size": {"description": "Split the results into pages with this number of results each", "example": 20, "type": "integer"}, "previous_message_processing_plan": {"description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan for how those messages should be processed and returned", "items": {"$ref": "#/components/schemas/PreviousMessageProcessingPlan"}, "type": "object"}, "query_message": {"description": "Message object that represents the query to be answered", "items": {"$ref": "#/components/schemas/Message"}, "type": "object"}, "reasoner_ids": {"description": "List of reasoners to consult for the query", "example": ["RTX", "Robokop"], "items": {"type": "string"}, "type": "array"}}, "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph intended to be the thought path to be followed by a reasoner to answer the question. This graph is a representation of a question.", "properties": {"edges": {"description": "List of edges in the QueryGraph", "items": {"$ref": "#/components/schemas/QEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the QueryGraph", "items": {"$ref": "#/components/schemas/QNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "RemoteKnowledgeGraph": {"additionalProperties": true, "description": "A thought graph associated with this result that is not repeated here, but stored elsewhere in a way that can be remotely accessed by the reader of this Message", "properties": {"credentials": {"description": "Credentials needed for programmatic access to the remote knowledge graph", "items": {"$ref": "#/components/schemas/Credentials"}, "type": "object"}, "url": {"description": "URL that provides programmatic access to the remote knowledge graph", "example": "http://robokop.renci.org/api/kg", "type": "string"}}, "type": "object"}, "Result": {"description": "One of potentially several results or answers for a query", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive) 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "type": "string"}, "edge_bindings": {"additionalProperties": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "description": "Lookup dict that maps QEdge identifiers in the QueryGraph to Edge identifiers in the KnowledgeGraph", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "type": "string"}, "essence_type": {"description": "A Translator bioentity type of the essence", "example": "drug", "type": "string"}, "id": {"description": "URI for this message", "example": "https://rtx.ncats.io/api/rtx/v1/result/234", "type": "string"}, "node_bindings": {"additionalProperties": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "description": "Lookup dict that maps QNode identifiers in the QueryGraph to Node identifiers in the KnowledgeGraph", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., RTX, Robokop, Indigo, Integrator)", "example": "RTX", "type": "string"}, "result_graph": {"$ref": "#/components/schemas/KnowledgeGraph", "description": "A graph that describes the thought pattern of this result (i.e. answer to the query)", "type": "object"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "type": "number"}, "result_type": {"description": "One of several possible result types: 'individual query answer', 'neighborhood graph', 'type summary graph'", "example": "individual query answer", "type": "string"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "items": {"type": "string"}, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "type": "string"}}, "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI"}, "info": {"contact": {"email": "translator@broadinstitute.org", "name": "Broad NCATS translator"}, "description": "OpenAPI for indigo NCATS Biomedical Translator Reasoner", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "{{url}}", "title": "OpenAPI for indigo NCATS Biomedical Translator Reasoner", "version": "0.9.1.1", "x-reasoner_standard_version": "0.9.1"}, "openapi": "3.0.1", "paths": {"/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"example": {"query_message": {"query_graph": {"edges": [{"edge_id": "e00", "source_id": "n00", "target_id": "n01", "type": "targets"}], "nodes": [{"curie": "CHEMBL:CHEMBL521", "node_id": "n00", "type": "chemical_substance"}, {"node_id": "n01", "type": "protein"}]}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "successful operation"}, "400": {"description": "Invalid status value"}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "servers": [{"url": "https://indigo.ncats.io/reasoner/api/v1/"}], "tags": [{"description": "Query reasoner using a predefined question type", "name": "query"}, {"name": "translator"}, {"name": "reasoner"}]}, {"_id": "912372f46127b79fb387cd2397203709", "_meta": {"date_created": "2021-01-30T00:03:58.007471+00:00", "last_updated": "2021-05-14T07:00:56.914125+00:00", "slug": "molecular_kp", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/molecular_data_provider/smartapi.yaml", "username": "kevinxin90"}, "_score": 4.019501, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:56+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:13.344178"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"$ref": "#/components/schemas/CURIE", "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:affects", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "PUBCHEM.COMPOUND:2244"}, "n01": {"category": "biolink:Gene"}}}}}, "properties": {"message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "translator@broadinstitute.org", "name": "Molecular Data Provider", "x-role": "responsible organization"}, "description": "Molecular Data Provider for NCATS Biomedical Translator Reasoners", "license": {"name": "MIT License", "url": "https://github.com/broadinstitute/molecular-data-provider/blob/master/LICENSE"}, "termsOfService": "https://github.com/broadinstitute/molecular-data-provider/blob/master/terms_of_service.md", "title": "Molecular Data Provider for NCATS Biomedical Translator Reasoners", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Molecular Data Provider"]}, "x-trapi": {"version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "servers": [{"url": "https://translator.broadinstitute.org/molepro/trapi/v1.0"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "name": "query"}, {"name": "translator"}, {"name": "trapi"}]}, {"_id": "7788ca4829811c1b9e3229faa6f21856", "_meta": {"date_created": "2021-05-07T22:56:16.828945+00:00", "last_updated": "2021-05-14T07:05:03.349811+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/molecular_data_provider/MolePro-TRAPI-1.1.yaml", "username": "vdancik"}, "_score": 4.019501, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:03+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:31.937182"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:affects", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "PUBCHEM.COMPOUND:2244"}, "n01": {"category": "biolink:Gene"}}}}}, "properties": {"message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "translator@broadinstitute.org", "name": "Molecular Data Provider", "x-role": "responsible organization"}, "description": "Molecular Data Provider for NCATS Biomedical Translator Reasoners", "license": {"name": "MIT License", "url": "https://github.com/broadinstitute/molecular-data-provider/blob/master/LICENSE"}, "termsOfService": "https://github.com/broadinstitute/molecular-data-provider/blob/master/terms_of_service.md", "title": "Molecular Data Provider for NCATS Biomedical Translator Reasoners", "version": "1.1.0.0", "x-translator": {"biolink-version": "1.8.0", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Molecular Data Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"deprecated": true, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/meta_knowledge_graph": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/query": {"post": {"description": "", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"]}}}, "servers": [{"description": "TRAPI producetion service for MolePro", "url": "https://translator.broadinstitute.org/molepro/trapi/v1.1"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}]}, {"_id": "a37a3502ce5210b06dc2f830ac2663ad", "_meta": {"date_created": "2021-03-23T18:53:20.187390+00:00", "last_updated": "2021-05-14T07:00:37.508902+00:00", "url": "https://raw.githubusercontent.com/jeffhhk/mediKanren/tweak2-openapi/medikanren/open-api/TranslatorReasonersAPI.yaml", "username": "jeffhhk"}, "_score": 3.8003764, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:37+00:00", "uptime_status": "incompatible", "uptime_ts": "2021-05-14T07:05:53.135879"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"$ref": "#/components/schemas/CURIE", "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"$ref": "#/components/schemas/KnowledgeGraph", "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true, "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true, "type": "object"}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services.", "url": "https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI"}, "info": {"contact": {"email": "webyrd@gmail.com", "name": "William E. Byrd", "url": "https://github.com/webyrd"}, "description": "OpenAPI for NCATS Biomedical Translator Reasoners", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "INSERT-URL-HERE", "title": "OpenAPI for NCATS Biomedical Translator Reasoners", "version": "1.0.0-beta", "x-translator": {"component": "ARA", "team": ["Unsecret Agent"]}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://unsecret.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://unsecret.ncats.io/overview.html#query"}, "name": "query"}, {"name": "translator"}, {"name": "reasoner"}]}, {"_id": "b0ead2b28cfe5794e24845661ba45897", "_meta": {"date_created": "2021-03-17T22:53:48.733473+00:00", "last_updated": "2021-03-23T19:27:00.319896+00:00", "url": "https://raw.githubusercontent.com/jeffhhk/mediKanren/tweak-openapi/biolink/open-api/TranslatorReasonersAPI.yaml", "username": "jeffhhk"}, "_score": 3.8003764, "_status": {"refresh_status": 404, "refresh_ts": "2021-05-14T07:05:08+00:00", "uptime_status": "incompatible", "uptime_ts": "2021-05-14T07:11:31.778562"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"$ref": "#/components/schemas/CURIE", "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"$ref": "#/components/schemas/KnowledgeGraph", "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true, "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true, "type": "object"}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATS-Tangerine/NCATS-ReasonerStdAPI"}, "info": {"contact": {"email": "edeutsch@systemsbiology.org"}, "description": "OpenAPI for NCATS Biomedical Translator Reasoners", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "INSERT-URL-HERE", "title": "OpenAPI for NCATS Biomedical Translator Reasoners", "version": "1.0.0-beta", "x-translator": {"component": "ARA", "team": ["Unsecret Agent"]}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://unsecret.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://unsecret.ncats.io/overview.html#query"}, "name": "query"}, {"name": "translator"}, {"name": "reasoner"}]}, {"_id": "5029cad7d8a22f0ef5380c1b9be5c10d", "_meta": {"date_created": "2021-05-14T00:07:31.861181+00:00", "last_updated": "2021-05-14T07:05:41.844871+00:00", "url": "https://raw.githubusercontent.com/webyrd/mediKanren/smartapi-trapi-11-part2/medikanren2/open-api/TranslatorReasonersAPI.yaml", "username": "jeffhhk"}, "_score": 3.8003764, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:41+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:40.751196"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "webyrd@gmail.com", "name": "William E. Byrd", "url": "https://github.com/webyrd"}, "description": "OpenAPI for NCATS Biomedical Translator Reasoners", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "title": "OpenAPI for NCATS Biomedical Translator Reasoners", "version": "1.0.0-beta", "x-translator": {"biolink-version": "1.4.0", "component": "ARA", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Unsecret Agent"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"deprecated": true, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/meta_knowledge_graph": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/query": {"post": {"description": "", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"]}}}, "servers": [{"description": "Service endpoint for TRAPI 1.1", "url": "https://unsecret.ncats.io/v2"}], "tags": [{"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}]}, {"_id": "e9f69b81e755e163fdf6c41a2b5e07c0", "_meta": {"date_created": "2021-01-29T00:00:15.735608+00:00", "last_updated": "2021-05-14T07:03:52.834468+00:00", "url": "https://openpredict.semanticscience.org/openapi.json", "username": "vemonet"}, "_score": 3.5353513, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:03:52+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:41.438475"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicates": ["biolink:treated_by"], "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Disease"], "ids": ["OMIM:246300", "MONDO:0007190"]}, "n1": {"categories": ["biolink:Drug"]}}}}, "query_options": {"max_score": 1, "min_score": 0.5}}, "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "QueryOptions": {"description": "Additional query options that apply to OpenPredict", "properties": {"max_score": {"description": "The minimum score of predictions to be returned", "example": 0.99, "type": "number"}, "min_score": {"description": "The minimum score of predictions to be returned", "example": 0.99, "type": "number"}, "model_id": {"description": "The OpenPredict model to query", "example": 3, "type": "integer"}, "n_results": {"description": "The maximum number of results to be returned.", "example": 2, "type": "integer"}}}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "vincent.emonet@maastrichtuniversity.nl"}, "description": "Get predicted targets for a given entity: the **potential drugs treating a given disease**, or the **potential diseases a given drug could treat**. \n\n* Use the `/predict` operation to easily retrieve predictions for a given entity (operation annotated for the [BioThings Explorer](https://x-bte-extension.readthedocs.io/en/latest/x-bte-kgs-operations.html)). \n\n* Predictions are currently produced using the [PREDICT method](https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3159979/) from the [fair-workflows/openpredict](https://github.com/fair-workflows/openpredict) project. \n\n* You can also install the [OpenPredict Python package](https://pypi.org/project/openpredict/) to train and serve a new model yourself. \n\n* More documentation available at [github.com/MaastrichtU-IDS/translator-openpredict](https://github.com/MaastrichtU-IDS/translator-openpredict) \n\n[![Test production API](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/run-tests-prod.yml/badge.svg)](https://github.com/MaastrichtU-IDS/translator-openpredict/actions/workflows/run-tests-prod.yml) \n\nService supported by the [NCATS Translator project](https://ncats.nih.gov/translator/about)", "license": {"name": "MIT license", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "https://raw.githubusercontent.com/MaastrichtU-IDS/translator-openpredict/master/LICENSE", "title": "OpenPredict API", "version": "1.0.0", "x-translator": {"biolink-version": "1.8.2", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/production/x-translator/"}, "team": ["Clinical Data Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/embedding": {"post": {"description": "Upload your embedding file:  select which types do you have in the embeddings, Drugs, Diseases or Both. \n1. provided embeddings will be added to the model\n2. the model will be retrained\n3. the model evaluation will be stored in a triplestore", "operationId": "openpredict.openpredict_api.post_embedding", "parameters": [{"description": "Types of the entities in the embedding", "in": "query", "name": "types", "required": true, "schema": {"default": "Both", "enum": ["Drugs", "Diseases", "Both"], "type": "string"}}, {"description": "Name of embedding (eg. TransE_DrugBank_Drug)", "in": "query", "name": "emb_name", "required": true, "schema": {"type": "string"}}, {"description": "Describe how the embeddings was obtained (eg. rdf2vec on drugbank/omim data)", "in": "query", "name": "description", "required": true, "schema": {"type": "string"}}, {"description": "Provide the ID of the run output you want to use as base model to add the embeddings", "example": "openpredict-baseline-omim-drugbank", "in": "query", "name": "model_id", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"multipart/form-data": {"schema": {"properties": {"embedding_file": {"description": "The embedding file to be uploaded", "format": "binary", "type": "string"}}, "type": "object"}}}}, "responses": {"200": {"description": "OK"}}, "summary": "Upload your embedding for drugs or diseases", "tags": ["openpredict"]}}, "/features": {"get": {"description": "Return the features trained in the model, for Drugs, Diseases or Both ", "operationId": "openpredict.openpredict_api.get_features", "parameters": [{"description": "Type of the entities in the features", "in": "query", "name": "type", "required": true, "schema": {"default": "All", "enum": ["All", "Drugs", "Diseases", "Both"], "type": "string"}}], "responses": {"200": {"content": {"application/json": {}}, "description": "OK"}}, "summary": "Return the features trained in the models", "tags": ["openpredict"]}}, "/meta_knowledge_graph": {"get": {"operationId": "openpredict.openpredict_api.get_meta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/models": {"get": {"description": "Return the models with their training features and scores", "operationId": "openpredict.openpredict_api.get_models", "responses": {"200": {"content": {"application/json": {}}, "description": "OK"}}, "summary": "Return the models with their training features and scores", "tags": ["openpredict"]}}, "/predicates": {"get": {"deprecated": true, "operationId": "openpredict.openpredict_api.get_predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/predict": {"get": {"description": "Return the predicted targets for a given entity: drug (DrugBank ID) or disease (OMIM ID), with confidence scores. Only a drug_id or a disease_id can be provided, the disease_id will be ignored if drug_id is provided This operation is annotated with x-bte-kgs-operations, and follow the BioThings API recommendations.", "operationId": "openpredict.openpredict_api.get_predict", "parameters": [{"description": "CURIE of the drug to get prediction of diseases it could treat (e.g. DRUGBANK:DB00394)", "example": "DRUGBANK:DB00394", "in": "query", "name": "drug_id", "required": false, "schema": {"type": "string"}}, {"description": "CURIE of the disease to get prediction of drugs it could be treated with (e.g. OMIM:246300). Ignored if drug_id provided.", "in": "query", "name": "disease_id", "required": false, "schema": {"type": "string"}}, {"description": "Provide the ID of the run output you want to use as model to use to predict associations", "example": "openpredict-baseline-omim-drugbank", "in": "query", "name": "model_id", "required": false, "schema": {"type": "string"}}, {"description": "Minimum score of predictions to return (0 to 1)", "in": "query", "name": "min_score", "required": false, "schema": {"format": "double", "maximum": 1, "minimum": 0, "type": "number"}}, {"description": "Maximum score of predictions to return (0 to 1)", "in": "query", "name": "max_score", "required": false, "schema": {"format": "double", "maximum": 1, "minimum": 0, "type": "number"}}, {"description": "Maximum number of results to return, ordered from best score (e.g. 42)", "in": "query", "name": "n_results", "required": false, "schema": {"format": "int32", "minimum": 0, "type": "integer"}}], "responses": {"200": {"content": {"application/json": {}}, "description": "Successful Operation"}}, "summary": "Get predicted targets for a given entity", "tags": ["biothings"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:DRUGBANK", "semantic": "biolink:ChemicalSubstance"}], "outputs": [{"id": "biolink:OMIM", "semantic": "biolink:Disease"}], "parameters": {"drug_id": "{inputs[0]}"}, "predicate": "biolink:treats", "responseMapping": {"OMIM": "hits.id"}, "supportBatch": false}, {"inputs": [{"id": "biolink:OMIM", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:DRUGBANK", "semantic": "biolink:ChemicalSubstance"}], "parameters": {"disease_id": "{inputs[0]}"}, "predicate": "biolink:treated_by", "responseMapping": {"DRUGBANK": "hits.id"}, "supportBatch": false}]}}, "/query": {"post": {"description": "", "operationId": "openpredict.openpredict_api.post_reasoner_predict", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"]}}}, "servers": [{"url": "https://openpredict.semanticscience.org"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "https://github.com/MaastrichtU-IDS/translator-openpredict#predicates-operation"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "https://github.com/MaastrichtU-IDS/translator-openpredict#query-operation"}, "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}]}, {"_id": "b9ba5e7ead2b07d7c132b1ce9ff30cce", "_meta": {"date_created": "2021-02-23T19:08:10.676980+00:00", "last_updated": "2021-05-14T07:02:53.468002+00:00", "slug": "strider", "url": "https://strider.renci.org/openapi.json", "username": "patrickkwang"}, "_score": 3.258298, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:53+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:31.438529"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "title": "Level", "type": "string"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "LogLevelEnum": {"description": "Python logging module log level constants represented as an ``enum.Enum``.", "enum": ["NOTSET", "DEBUG", "INFO", "WARNING", "ERROR", "CRITICAL"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "Translator Autonomous Relay Agent", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Strider&provider_long=the%20Renaissance%20Computing%20Institute&provider_short=RENCI", "title": "Strider", "version": "1.0.0", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/aquery": {"post": {"description": "Start query processing.", "operationId": "async_query_aquery_post", "parameters": [{"in": "query", "name": "log_level", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogLevelEnum"}], "default": "ERROR"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicate": "biolink:has_phenotype", "subject": "n0"}}, "nodes": {"n0": {"category": "biolink:Disease", "id": "MONDO:0005148"}, "n1": {"category": "biolink:PhenotypicFeature"}}}}}, "title": "Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Async Query"}}, "/query_result": {"post": {"description": "Get results for a running or finished query ", "operationId": "get_results_query_result_post", "parameters": [{"in": "query", "name": "qid", "required": true, "schema": {"title": "Qid", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Results"}}, "/query": {"post": {"description": "Handle synchronous query.", "operationId": "sync_query_query_post", "parameters": [{"in": "query", "name": "log_level", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/LogLevelEnum"}], "default": "ERROR"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicate": "biolink:has_phenotype", "subject": "n0"}}, "nodes": {"n0": {"category": "biolink:Disease", "id": "MONDO:0005148"}, "n1": {"category": "biolink:PhenotypicFeature"}}}}}, "title": "Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Sync Query", "tags": ["reasoner"]}}, "/ars": {"post": {"description": "Handle ARS message.", "operationId": "handle_ars_ars_post", "requestBody": {"content": {"application/json": {"schema": {"title": "Data", "type": "object"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Handle Ars"}}, "/plan": {"post": {"description": "Generate plans for traversing knowledge providers.", "operationId": "generate_traversal_plan_plan_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "object"}, "title": "Response Generate Traversal Plan Plan Post", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Generate Traversal Plan"}}, "/score": {"post": {"description": "Score results.", "operationId": "score_results_score_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Score Results"}}}, "servers": [{"url": "https://strider.renci.org"}], "tags": [{"name": "translator"}, {"name": "reasoner"}]}, {"_id": "99592dd5fc3a69d3ed27692f3f278e47", "_meta": {"date_created": "2021-02-05T18:12:55.364895+00:00", "last_updated": "2021-03-09T08:01:08.262488+00:00", "url": "https://raw.githubusercontent.com/broadinstitute/genetics-kp-dev/master/transaltorRegistry.yaml", "username": "marcdubybroad"}, "_score": 3.113933, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:50+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:19.088523"}, "components": {"schemas": {"BiolinkEntity": {"description": "A subclass of named_thing (snake_case)", "example": "disease", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "type": "string"}, "BiolinkRelation": {"description": "A relation, i.e. child of related_to (snake_case)", "example": "affects", "externalDocs": {"description": "Biolink model relations", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "type": "string"}, "Credentials": {"description": "Credentials needed for programmatic access to the remote knowledge graph", "properties": {"password": {"description": "Password needed for programmatic access to the remote knowledge graph", "type": "string"}, "username": {"description": "Username needed for programmatic access to the remote knowledge graph", "type": "string"}}, "required": ["username", "password"], "type": "object"}, "EdgeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "KEdge": {"description": "An edge in the thought subgraph linking two nodes", "properties": {"id": {"description": "Local identifier for this node which is unique within this KnowledgeGraph, and perhaps within the source reasoner's knowledge graph", "example": "553903", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "type": {"$ref": "#/components/schemas/BiolinkRelation"}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "KNode": {"description": "A node in the thought subgraph", "properties": {"id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "type": "string"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "type": "string"}, "type": {"description": "Entity type of this node (e.g., protein, disease, etc.)", "example": ["protein"], "items": {"type": "string"}, "type": "array"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"description": "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included.", "properties": {"edges": {"description": "List of edges in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "message": {"description": "A human-readable log message", "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "type": "string"}}, "type": "object"}, "Message": {"properties": {"knowledge_graph": {"description": "KnowledgeGraph object that contains all the nodes and edges referenced in any of the possible answers to the query OR connection information for a remote knowledge graph", "oneOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}, {"$ref": "#/components/schemas/RemoteKnowledgeGraph"}], "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "type": "object"}, "results": {"description": "List of all returned potential answers for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "type": "array"}}, "type": "object"}, "NodeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "QEdge": {"description": "An edge in the QueryGraph", "properties": {"id": {"description": "QueryGraph internal identifier for this QEdge. Recommended form: e00, e01, e02, etc.", "example": "e00", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkRelation"}, {"items": {"$ref": "#/components/schemas/BiolinkRelation"}, "type": "array"}]}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "QNode": {"description": "A node in the QueryGraph", "properties": {"curie": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "id": {"description": "QueryGraph internal identifier for this QNode. Recommended form: n00, n01, n02, etc.", "example": "n00", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"description": "Entity types of this node (e.g., protein, disease, etc.)", "example": ["disease", "genetic_condition"], "items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}}, "required": ["id"], "type": "object"}, "Query": {"properties": {"message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"description": "A graph intended to be the thought path to be followed by a reasoner to answer the question. This graph is a representation of a question.", "properties": {"edges": {"description": "List of edges in the QueryGraph", "items": {"$ref": "#/components/schemas/QEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the QueryGraph", "items": {"$ref": "#/components/schemas/QNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "RemoteKnowledgeGraph": {"description": "A thought graph associated with this result that is not repeated here, but stored elsewhere in a way that can be remotely accessed by the reader of this Message", "properties": {"credentials": {"$ref": "#/components/schemas/Credentials", "description": "Credentials needed for programmatic access to the remote knowledge graph", "type": "object"}, "url": {"description": "URL that provides programmatic access to the remote knowledge graph", "example": "http://robokop.renci.org/api/kg", "type": "string"}}, "required": ["url", "credentials"], "type": "object"}, "Response": {"description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"description": "One of potentially several results or answers for a query", "properties": {"edge_bindings": {"description": "List of QEdge-KEdge bindings.", "items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "node_bindings": {"description": "List of QNode-KNode bindings.", "items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "type": "number"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "mduby@broadinstitute.org", "name": "Marc Duby", "url": "https://github.com/broadinstitute/genetics-kp-dev"}, "description": "A Translator API for Genetic Disease Asociation", "termsOfService": "http://www.apache.org/licenses/LICENSE-2.0.html", "title": "Genetics Provider", "version": "1.0.0", "x-reasoner_standard_version": "1.0.0", "x-translator": {"component": "KP", "team": ["Genetics Provider"]}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:Gene": {"biolink:Disease": ["biolink:gene_associated_with_condition"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get Genetics Provider supported relationships by source and target", "tags": ["predicates", "1.0.0"]}}, "/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:gene_associated_with_condition", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Gene", "id": "NCBIGene:1803"}, "n01": {"category": "biolink:Disease"}}}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query Genetics Provider TRAPI API as KP", "tags": ["query", "1.0.0"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "servers": [{"url": "https://translator.broadinstitute.org/genetics_provider/trapi/v1.0"}], "tags": [{"name": "1.0.0"}, {"name": "translator"}, {"name": "x-translator"}, {"name": "reasoner"}, {"name": "metadata"}, {"name": "query"}]}, {"_id": "bd7e521be4c52d80b2c5cbd75a065a32", "_meta": {"date_created": "2021-05-10T03:59:21.552632+00:00", "last_updated": "2021-05-14T07:05:08.776806+00:00", "url": "https://raw.githubusercontent.com/NCATSTranslator/Explanatory-Agent/master/Agent/SmartAPI-TRAPI-1.1.0.yaml", "username": "tziomics"}, "_score": 3.068613, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:08+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:31.856570"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": ["biolink:correlated_with"], "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:ChemicalSubstance"], "ids": ["PUBCHEM.COMPOUND:2244"]}, "n1": {"categories": ["biolink:Gene"]}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "rw37@drexel.edu", "name": "Rosina Weber", "x-id": "RosinaWeber", "x-role": "responsible developer"}, "description": "A Translator Reasoner API for the Explanatory Agent", "license": {"name": "License To Be Determined", "url": "TBD"}, "termsOfService": "TBD", "title": "Explanatory Agent API", "version": "1.1", "x-translator": {"biolink-version": "1.8.0", "component": "ARA", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Explanatory Agent"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"deprecated": true, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/meta_knowledge_graph": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/query": {"post": {"description": "", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"]}}}, "servers": [{"description": "Production Server", "url": "https://explanatory-agent.azurewebsites.net/v1.1/"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}]}, {"_id": "20051e07e2e70ecba18e6bf8f2ca680b", "_meta": {"date_created": "2021-01-23T22:44:15.777639+00:00", "last_updated": "2021-05-14T07:05:14.439081+00:00", "url": "https://raw.githubusercontent.com/NCATSTranslator/Explanatory-Agent/master/Agent/smart-api.yaml", "username": "tziomics"}, "_score": 3.068613, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:14+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:32.186279"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"$ref": "#/components/schemas/CURIE"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e0": {"object": "n1", "predicate": "biolink:condition_associated_with_gene", "subject": "n0"}, "nodes": {"n0": {"category": "biolink:Disease", "id": "EFO:0000275"}, "n1": {"category": "biolink:Gene"}}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE"}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicate": "biolink:condition_associated_with_gene", "subject": "n0"}}, "nodes": {"n0": {"category": "biolink:Disease", "id": "EFO:0000275"}, "n1": {"category": "biolink:Gene"}}}}}, "properties": {"message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "rw37@drexel.edu", "name": "Rosina Weber", "x-id": "RosinaWeber", "x-role": "responsible developer"}, "description": "A Translator Reasoner API for the Explanatory Agent", "license": {"name": "To Be Determined", "url": "TBD"}, "termsOfService": "TBD", "title": "Explanatory Agent API", "version": "1.0", "x-reasoner_standard_version": "1.0.0", "x-translator": {"component": "ARA", "team": ["Explanatory Agent"]}}, "openapi": "3.0.1", "paths": {"/predicates/": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:Disease": {"biolink:Gene": ["biolink:condition_associated_with_gene"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["Predicates"], "x-accessRestriction": "none"}}, "/query/": {"post": {"externalDocs": {"url": "https://github.com/NCATSTranslator/Explanatory-Agent/tree/master/Agent"}, "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "A message with knowledge graph and answers."}, "400": {"description": "The request provided does not conform to the TRAPI standard."}, "500": {"description": "An internal server error has occurred."}}, "summary": "Get answers to a question", "tags": ["Query"], "x-accessRestriction": "none"}}}, "servers": [{"description": "Production Server", "url": "https://explanatory-agent.azurewebsites.net/v1.0/"}], "tags": [{"name": "explanatory"}, {"name": "translator"}, {"name": "1.0.0"}], "x-externalResources": [{"x-type": "website", "x-url": "https://github.com/NCATSTranslator/Explanatory-Agent/tree/master/Agent"}]}, {"_id": "1f90616a822ecd18fff70d6e518614a7", "_meta": {"date_created": "2021-05-10T14:58:34.223181+00:00", "last_updated": "2021-05-14T07:04:37.989264+00:00", "url": "https://raw.githubusercontent.com/suihuanglab/improving-agent/trapi-1.1/app/improving_agent/openapi/openapi.yaml", "username": "brettasmi"}, "_score": 3.024593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:37+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:23.473715"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "example": {"id": "id"}, "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"knowledge_graph": "", "query_graph": "", "results": [{"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}]}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "example": {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, "properties": {"object": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "predicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}}, "required": ["object", "predicate", "subject"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "example": {"edges": [{"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}], "nodes": {"key": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}}}, "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "example": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}, "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "example": {"id": "id"}, "properties": {"id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "max_results": {"default": 200, "description": "The maximum number of results to return. Currently, this is hardcoded to 200 in the imProving Agent internals, but you can request fewer results for testing. The maximum number internally will certainly increase going forward.", "type": "integer"}, "message": {"$ref": "#/components/schemas/Message"}, "psev_context": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "query_kps": {"default": false, "description": "A boolean value as to whether or not to attempt to query Translator Knowledge Providers for additional data that is not found in SPOKE. Note that choosing true may increase the processing time for your request significantly.", "type": "boolean"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"default": "==", "description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"description": "Success. 42 results found.", "logs": [{"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": {"knowledge_graph": "", "query_graph": "", "results": [{"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}]}, "status": "Success"}, "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "example": {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "score": {"description": "The 'imProving Agent Score' that is the sum of the various scores calculated from PSEVs, KP metadata, etc. Individual scores should be visible as attributes on Nodes and Edges", "example": 1.234, "format": "float", "type": "number"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "brett.smith@isbscience.org", "x-role": "responsible developer"}, "description": "imProving Agent - An NIH NCATS Translator Autonomous Reasoning Agent", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://spoke.rbvi.ucsf.edu/license.html", "title": "imProving Agent", "version": "1.1.0-beta", "x-translator": {"biolink-version": "1.8.0", "component": "ARA", "externalDocs": {"description": "Code repository and example notebook", "url": "https://github.com/suihuanglab/improving-agent"}, "team": ["imProving Agent"]}, "x-trapi": {"externalDocs": {"description": "NCATS Reasoner API Documentation", "url": "https://github.com/NCATSTranslator/ReasonerAPI/blob/master/docs/reference.md"}, "version": "1.1.0-beta"}}, "openapi": "3.0.1", "paths": {"/meta_knowledge_graph": {"get": {"operationId": "meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"], "x-openapi-router-controller": "improving_agent.controllers.meta_knowledge_graph_controller"}}, "/predicates": {"get": {"deprecated": true, "operationId": "predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "improving_agent.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "improving_agent.controllers.query_controller"}}}, "servers": [{"description": "dev", "url": "https://ia.healthdatascience.cloud/api/v1.1/"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "https://github.com/suihuanglab/improving-agent/tree/main/examples"}, "name": "query"}, {"description": "NCATS Translator Component", "name": "translator"}, {"description": "NCATS TRAPI 1.1.x Compliant", "name": "trapi"}]}, {"_id": "8f41b53f970063b76eedf839bf589962", "_meta": {"date_created": "2021-05-10T01:47:34.859806+00:00", "last_updated": "2021-05-14T07:04:39.593849+00:00", "url": "https://raw.githubusercontent.com/di2ag/chp_metadata/master/smartapi-1.0.yaml", "username": "veenhouse"}, "_score": 3.024593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:39+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:23.592930"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categorize": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categorize": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "luke.j.veenhuis@dartmouth.edu", "name": "Luke Veenhuis", "x-id": "LukeVeenhuis", "x-role": "responsible developer"}, "description": "A Translator Reasoner API for the Connections Hypothesis Provider", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/di2ag/chp_api/blob/master/terms%20of%20service", "title": "Connections Hypothesis Provider API", "version": "2.0", "x-reasoner_standard_version": "1.0.0", "x-translator": {"component": "KP", "team": ["Connections Hypothesis Provider"]}, "x-trapi": {"url": "https://github.com/di2ag/chp_client", "version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/v1.0/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:Disease": {"biolink:PhenotypicFeature": ["biolink:has_phenotype"]}, "biolink:Drug": {"biolink:Disease": ["biolink:treats"], "biolink:Gene": ["biolink:interacts_with"]}, "biolink:Gene": {"biolink:Disease": ["biolink:gene_associated_with_condition"], "biolink:Drug": ["biolink:interacts_with"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["Predicates"], "x-accessRestriction": "none"}}, "/v1.0/versions": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "object of service versions", "items": {"type": "string"}, "type": "object"}}, "example": {"chp": "1.1.0", "chp_client": "0.2.1", "chp_data": "0.1.1", "pybkb": "1.1.0"}, "type": "object"}}}, "description": "versions of our service"}}, "summary": "Get a list of versions of our service repositories", "tags": ["Versions"]}}, "/v1.0/query": {"post": {"externalDocs": {"url": "https://github.com/di2ag/chp_client"}, "requestBody": {"content": {"application/json": {"example": {"message": {"biolink_version": null, "knowledge_graph": {"edges": {}, "nodes": {}}, "max_results": 10, "query_graph": {"edges": {"e0": {"object": "n2", "predicate": "biolink:interacts_with", "predicate_proxy": {"id": "EFO:0000714", "operator": ">", "unit_id": null, "unit_name": null, "value": 926}, "relation": "None", "subject": "n0"}}, "nodes": {"n0": {"category": ["biolink:Gene"], "id": ["ENSEMBL:ENSG00000170820"]}, "n1": {"category": ["biolink:Drug"], "id": ["CHEMBL:CHEMBL428647"]}}}, "results": [], "trapi_version": 1.0}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question", "tags": ["Query"], "x-accessRestriction": "none"}}, "/v1.0/curies": {"get": {"externalDocs": {"url": "https://github.com/di2ag/chp_client"}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "object of supported curies", "items": {"type": "string"}, "type": "object"}}, "example": {"biolink:Disease": [{"id": "MONDO:0007254", "name": "breast_cancer"}], "biolink:Drug": [{"id": "CHEMBL:CHEMBL1201247", "name": "ZOLADEX"}], "biolink:Gene": [{"id": "ENSEMBL:ENSG00000106665", "name": "CLIP2"}], "biolink:PhenotypicFeature": [{"id": "EFO:0000714", "name": "survival_time"}]}, "type": "object"}}}, "description": "set of curies currently supported by our service"}}, "summary": "Get a set of curies currently supported by our service", "tags": ["Curies"], "x-accessRestriction": "none"}}}, "servers": [{"description": "Pan-Cancer Production Server", "url": "http://chp.thayer.dartmouth.edu/"}, {"description": "Breast Cancer Production Server", "url": "http://breast.chp.thayer.dartmouth.edu/"}, {"description": "Brain Cancer Production Server", "url": "http://brain.chp.thayer.dartmouth.edu/"}, {"description": "Lung Cancer Production Server", "url": "http://lung.chp.thayer.dartmouth.edu/"}], "tags": [{"name": "bayesian"}, {"name": "translator"}, {"name": "1.0.0"}, {"name": "trapi"}], "x-externalResources": [{"x-type": "website", "x-url": "https://github.com/di2ag/chp_client"}]}, {"_id": "855adaa128ce5aa58a091d99e520d396", "_meta": {"date_created": "2021-01-28T00:00:54.028991+00:00", "last_updated": "2021-05-14T07:04:40.016632+00:00", "url": "https://raw.githubusercontent.com/di2ag/chp_metadata/master/smartapi.yaml", "username": "veenhouse"}, "_score": 3.024593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:39+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:23.677480"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "luke.j.veenhuis@dartmouth.edu", "name": "Luke Veenhuis", "x-id": "LukeVeenhuis", "x-role": "responsible developer"}, "description": "A Translator Reasoner API for the Connections Hypothesis Provider", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/di2ag/chp_api/blob/master/terms%20of%20service", "title": "Connections Hypothesis Provider API", "version": "2.0", "x-reasoner_standard_version": "1.1.0", "x-translator": {"component": "KP", "team": ["Connections Hypothesis Provider"]}, "x-trapi": {"url": "https://github.com/di2ag/chp_client", "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:Disease": {"biolink:PhenotypicFeature": ["biolink:has_phenotype"]}, "biolink:Drug": {"biolink:Disease": ["biolink:treats"], "biolink:Gene": ["biolink:interacts_with"]}, "biolink:Gene": {"biolink:Disease": ["biolink:gene_associated_with_condition"], "biolink:Drug": ["biolink:interacts_with"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["Predicates"], "x-accessRestriction": "none"}}, "/versions": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "object of service versions", "items": {"type": "string"}, "type": "object"}}, "example": {"chp": "1.1.0", "chp_client": "0.2.1", "chp_data": "0.1.1", "pybkb": "1.1.0"}, "type": "object"}}}, "description": "versions of our service"}}, "summary": "Get a list of versions of our service repositories", "tags": ["Versions"]}}, "/query": {"post": {"externalDocs": {"url": "https://github.com/di2ag/chp_client"}, "requestBody": {"content": {"application/json": {"example": {"biolink_version": null, "max_results": 10, "message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e0": {"constraints": [{"id": "CHP:PredicateProxy", "name": "predicate_proxy", "not": false, "operator": "==", "unit_id": null, "unit_name": null, "value": ["EFO:0000714"]}, {"id": "EFO:0000714", "name": "EFO:0000714", "not": false, "operator": ">", "unit_id": null, "unit_name": null, "value": 887}], "object": "n1", "predicates": ["biolink:interacts_with"], "relation": "None", "subject": "n0"}}, "nodes": {"n0": {"categorize": ["biolink:Gene"], "constraint": [], "ids": ["ENSEMBL:ENSG00000158077"]}, "n1": {"categorize": ["biolink:Drug"], "constraint": [], "ids": ["CHEMBL:CHEMBL92"]}}}, "results": []}, "trapi_version": 1.1}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question", "tags": ["Query"], "x-accessRestriction": "none"}}, "/curies": {"get": {"externalDocs": {"url": "https://github.com/di2ag/chp_client"}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "object of supported curies", "items": {"type": "string"}, "type": "object"}}, "example": {"biolink:Disease": [{"id": "MONDO:0007254", "name": "breast_cancer"}], "biolink:Drug": [{"id": "CHEMBL:CHEMBL1201247", "name": "ZOLADEX"}], "biolink:Gene": [{"id": "ENSEMBL:ENSG00000106665", "name": "CLIP2"}], "biolink:PhenotypicFeature": [{"id": "EFO:0000714", "name": "survival_time"}]}, "type": "object"}}}, "description": "set of curies currently supported by our service"}}, "summary": "Get a set of curies currently supported by our service", "tags": ["Curies"], "x-accessRestriction": "none"}}}, "servers": [{"description": "Pan-Cancer Production Server", "url": "http://chp.thayer.dartmouth.edu/"}, {"description": "Breast Cancer Production Server", "url": "http://breast.chp.thayer.dartmouth.edu/"}, {"description": "Brain Cancer Production Server", "url": "http://brain.chp.thayer.dartmouth.edu/"}, {"description": "Lung Cancer Production Server", "url": "http://lung.chp.thayer.dartmouth.edu/"}], "tags": [{"name": "bayesian"}, {"name": "translator"}, {"name": "1.1.0"}, {"name": "trapi"}], "x-externalResources": [{"x-type": "website", "x-url": "https://github.com/di2ag/chp_client"}]}, {"_id": "7fbd598107535526d803ad575744f115", "_meta": {"date_created": "2021-05-07T15:20:22.005787+00:00", "last_updated": "2021-05-14T07:02:54.577813+00:00", "url": "https://raw.githubusercontent.com/broadinstitute/genetics-kp-dev/md_trapiVersion1.1/Registry/trapi1.1.0.json", "username": "marcdubybroad"}, "_score": 2.9402366, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:54+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:26.626613"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:gene_associated_with_condition"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:Gene"], "ids": ["ENSEMBL:ENSG00000133401"]}, "n01": {"categories": ["biolink:Disease"]}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "example": {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, "properties": {"object": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "predicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}}, "required": ["object", "predicate", "subject"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "example": {"edges": [{"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}], "nodes": {"key": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}}}, "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "example": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}, "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["id"], "type": "object"}, "Operations": {"additionalProperties": true, "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "properties": {"actions": {"description": "List of order-dependent operations to execute", "example": ["add_qnode(name=acetaminophen, key=n00)", "add_qnode(category=biolink:Protein, key=n01)", "add_qedge(subject=n01, object=n00, key=e00)", "expand(edge_key=e00)", "resultify()", "filter_results(action=limit_number_of_results, max_results=10)"], "items": {"type": "string"}, "type": "array"}, "message_uris": {"description": "List of URIs for Message or Response objects to fetch and process", "example": ["https://arax.ncats.io/api/arax/v1.0/response/38"], "items": {"type": "string"}, "type": "array"}, "messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "options": {"additionalProperties": true, "description": "Map of order independent options that apply during processing", "example": {"halt_on_warning": false}, "type": "object"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "exclude": {"description": "If set to true, then all subgraphs containing this edge are excluded from the final results. (optional)", "type": "boolean"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"context": "https://rtx.ncats.io/ns/translator.jsonld", "datetime": "2021-01-09T12:34:45Z", "description": "Success. 42 results found.", "id": "https://arax.ncats.io/api/rtx/v1.0/response/123", "logs": [{"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "operations": "", "original_question": "what proteins are affected by sickle cell anemia", "query_options": {"coalesce": true, "threshold": 0.9}, "reasoner_id": "ARAX", "restated_question": "Which proteins are affected by sickle cell anemia?", "schema_version": "1.0.0", "status": "Success", "table_column_names": ["chemical_substance.name", "chemical_substance.id"], "tool_version": "ARAX 0.8.0", "type": "TranslatorAPIResponse", "workflow": ["{}", "{}"]}, "properties": {"context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this response was generated", "example": "2021-01-09T12:34:45Z", "type": "string"}, "description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "id": {"description": "URI for this response", "example": "https://arax.ncats.io/api/rtx/v1.0/response/123", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with the processing plan and options for how those messages were processed and returned"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this response (one of ARAX, Robokop, etc.)", "example": "ARAX", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "schema_version": {"description": "Version label of this TRAPI schema", "example": "1.0.0", "type": "string"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "tool_version": {"description": "Version label of the tool that generated this response", "example": "ARAX 0.8.0", "type": "string"}, "type": {"description": "Entity type of this response", "example": "TranslatorAPIResponse", "type": "string"}, "workflow": {"description": "A list of operations that were applied", "items": {"type": "object"}, "type": "array"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive)\n 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "nullable": true, "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "nullable": true, "type": "string"}, "edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "nullable": true, "type": "string"}, "essence_category": {"description": "A Translator BioLink bioentity category of the essence", "example": "biolink:ChemicalSubstance", "nullable": true, "type": "string"}, "id": {"description": "URI for this result", "example": "result:234", "nullable": true, "type": "string"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., ARAX, Robokop, etc.)", "example": "ARAX", "nullable": true, "type": "string"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "nullable": true, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "nullable": true, "type": "number"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants simplified tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "items": {"oneOf": [{"type": "string"}, {"type": "number"}]}, "nullable": true, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "nullable": true, "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "nullable": true, "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "nullable": true, "type": "string"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "mduby@broadinstitute.org"}, "description": "TRAPI 1.1 endpoint for the NCATS Biomedical Translator Genetics Data KP", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/broadinstitute/genetics-kp-dev/blob/master/LICENSE", "title": "Genetics KP", "version": "1.1.0", "x-translator": {"biolink-version": "1.7.0", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Genetics Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/meta_knowledge_graph": {"get": {"operationId": "meta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"], "x-openapi-router-controller": "openapi_server.controllers.meta_knowledge_graph_controller"}}, "/predicates": {"get": {"deprecated": true, "operationId": "predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "openapi_server.controllers.query_controller"}}}, "servers": [{"url": "https://translator.broadinstitute.org/genetics_provider/trapi/v1.1"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Get supported relationships", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "meta_knowledge_graph"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://arax.ncats.io/overview.html#query"}, "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}, {"description": "Return identifier and type of some entity in the knowledge graph", "externalDocs": {"description": "Documentation for the reasoner entity function", "url": "https://arax.ncats.io/overview.html#entity"}, "name": "entity"}]}, {"_id": "51bfd7c5d323b100c77f7b96137eaac1", "_meta": {"date_created": "2021-05-06T06:54:47.669249+00:00", "last_updated": "2021-05-14T07:01:31.792898+00:00", "url": "https://arax.ncats.io/api/rtxkg2/v1.1/openapi.json", "username": "edeutsch"}, "_score": 2.8997984, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:31+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:53.491285"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "example": {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, "properties": {"object": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "predicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}}, "required": ["object", "predicate", "subject"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "example": {"edges": [{"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}], "nodes": {"key": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}}}, "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "example": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}, "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["id"], "type": "object"}, "Operations": {"additionalProperties": true, "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "properties": {"actions": {"description": "List of order-dependent operations to execute", "example": ["add_qnode(name=acetaminophen, key=n00)", "add_qnode(category=biolink:Protein, key=n01)", "add_qedge(subject=n01, object=n00, key=e00)", "expand(edge_key=e00)", "resultify()", "filter_results(action=limit_number_of_results, max_results=10)"], "items": {"type": "string"}, "type": "array"}, "message_uris": {"description": "List of URIs for Message or Response objects to fetch and process", "example": ["https://arax.ncats.io/api/arax/v1.0/response/38"], "items": {"type": "string"}, "type": "array"}, "messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "options": {"additionalProperties": true, "description": "Map of order independent options that apply during processing", "example": {"halt_on_warning": false}, "type": "object"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "exclude": {"description": "If set to true, then all subgraphs containing this edge are excluded from the final results. (optional)", "type": "boolean"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"bypass_cache": {"default": false, "description": "Set to true in order to bypass any possible cached response and try to answer the query from scratch", "type": "boolean"}, "enforce_edge_directionality": {"default": false, "description": "Set to true in order to enforce edge directionality during queries. By default, edge directionality can be reversed without penalty.", "type": "boolean"}, "log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "max_results": {"default": 100, "description": "Maximum number of individual results to return", "example": 100, "type": "integer"}, "message": {"$ref": "#/components/schemas/Message"}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned"}, "page_number": {"default": 1, "description": "Page number of results when the number of results exceeds the page_size, with page 1 as the first page", "example": 1, "type": "integer"}, "page_size": {"default": 100, "description": "Split the results into pages with this number of results each", "example": 100, "type": "integer"}, "return_minimal_metadata": {"default": false, "description": "Set to true in order to return only the most minimal metadata. By default, rich metadata for nodes and edges are supplied, which may cause a very large and slower Response.", "type": "boolean"}, "stream_progress": {"default": false, "description": "Set to true in order to receive a stream of LogEntry objects as the query is progressing", "type": "boolean"}, "workflow": {"description": "A list of operations to be applied", "items": {"type": "object"}, "type": "array"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"context": "https://rtx.ncats.io/ns/translator.jsonld", "datetime": "2021-01-09T12:34:45Z", "description": "Success. 42 results found.", "id": "https://arax.ncats.io/api/rtx/v1.0/response/123", "logs": [{"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "operations": "", "original_question": "what proteins are affected by sickle cell anemia", "query_options": {"coalesce": true, "threshold": 0.9}, "reasoner_id": "ARAX", "restated_question": "Which proteins are affected by sickle cell anemia?", "schema_version": "1.0.0", "status": "Success", "table_column_names": ["chemical_substance.name", "chemical_substance.id"], "tool_version": "ARAX 0.8.0", "type": "TranslatorAPIResponse", "workflow": ["{}", "{}"]}, "properties": {"context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this response was generated", "example": "2021-01-09T12:34:45Z", "type": "string"}, "description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "id": {"description": "URI for this response", "example": "https://arax.ncats.io/api/rtx/v1.0/response/123", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with the processing plan and options for how those messages were processed and returned"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this response (one of ARAX, Robokop, etc.)", "example": "ARAX", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "schema_version": {"description": "Version label of this TRAPI schema", "example": "1.0.0", "type": "string"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "tool_version": {"description": "Version label of the tool that generated this response", "example": "ARAX 0.8.0", "type": "string"}, "type": {"description": "Entity type of this response", "example": "TranslatorAPIResponse", "type": "string"}, "workflow": {"description": "A list of operations that were applied", "items": {"type": "object"}, "type": "array"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive)\n 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "nullable": true, "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "nullable": true, "type": "string"}, "edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "nullable": true, "type": "string"}, "essence_category": {"description": "A Translator BioLink bioentity category of the essence", "example": "biolink:ChemicalSubstance", "nullable": true, "type": "string"}, "id": {"description": "URI for this result", "example": "result:234", "nullable": true, "type": "string"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., ARAX, Robokop, etc.)", "example": "ARAX", "nullable": true, "type": "string"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "nullable": true, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "nullable": true, "type": "number"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants simplified tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "items": {"oneOf": [{"type": "string"}, {"type": "number"}]}, "nullable": true, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "nullable": true, "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "nullable": true, "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "nullable": true, "type": "string"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "edeutsch@systemsbiology.org"}, "description": "TRAPI 1.1 endpoint for the NCATS Biomedical Translator KP called RTX KG2", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/RTXteam/RTX/blob/master/LICENSE", "title": "RTX KG2", "version": "2.5.2", "x-translator": {"biolink-version": "1.7.0", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Expander Agent"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/entity": {"get": {"operationId": "get_entity", "parameters": [{"description": "A string to search by (name, abbreviation, CURIE, etc.). The parameter may be repeated for multiple search strings.", "explode": true, "in": "query", "name": "q", "required": true, "schema": {"example": ["MESH:D014867", "NCIT:C34373"], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "successful operation"}, "404": {"description": "Entity not found"}}, "summary": "Obtain CURIE and synonym information about a search term", "tags": ["entity"], "x-openapi-router-controller": "openapi_server.controllers.entity_controller"}}, "/meta_knowledge_graph": {"get": {"operationId": "meta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"], "x-openapi-router-controller": "openapi_server.controllers.meta_knowledge_graph_controller"}}, "/predicates": {"get": {"deprecated": true, "operationId": "predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "openapi_server.controllers.query_controller"}}}, "servers": [{"url": "https://arax.ncats.io/api/rtxkg2/v1.1"}], "tags": [{"description": "Get supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Get supported relationships", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "meta_knowledge_graph"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://arax.ncats.io/overview.html#query"}, "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}, {"description": "Return identifier and type of some entity in the knowledge graph", "externalDocs": {"description": "Documentation for the reasoner entity function", "url": "https://arax.ncats.io/overview.html#entity"}, "name": "entity"}]}, {"_id": "7b1b6a88cbf2913c4b614fabddcaabb4", "_meta": {"date_created": "2021-01-26T00:02:52.903243+00:00", "last_updated": "2021-05-06T07:01:47.245709+00:00", "url": "https://automat.renci.org/textminingkp/openapi.json", "username": "YaphetKG"}, "_score": 2.8997984, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:32+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:53.945167"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " A literature co-occurrence graph created by the Translator Text Mining KP.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Textmining KP&provider_long=RENCI", "title": "Automat Textmining KP", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/textminingkp"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "00bab7d59abe031098d5cb1597f7f1c4", "_meta": {"date_created": "2021-03-02T03:45:02.003694+00:00", "last_updated": "2021-05-14T07:05:06.224405+00:00", "url": "https://arax.ncats.io/kg2/api/rtxkg2/v1.0/openapi.json", "username": "edeutsch"}, "_score": 2.8997984, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:06+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:50.690322"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "nullable": true, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "Operations": {"additionalProperties": true, "description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "properties": {"actions": {"description": "List of order-dependent operations to execute", "example": ["add_qnode(name=acetaminophen, key=n00)", "add_qnode(category=biolink:Protein, key=n01)", "add_qedge(subject=n01, object=n00, key=e00)", "expand(edge_key=e00)", "resultify()", "filter_results(action=limit_number_of_results, max_results=10)"], "items": {"type": "string"}, "type": "array"}, "message_uris": {"description": "List of URIs for Message or Response objects to fetch and process", "example": ["https://arax.ncats.io/api/arax/v1.0/response/38"], "items": {"type": "string"}, "type": "array"}, "messages": {"description": "List of Message objects to process", "items": {"$ref": "#/components/schemas/Message"}, "type": "array"}, "options": {"additionalProperties": true, "description": "Map of order independent options that apply during processing", "example": {"halt_on_warning": false}, "type": "object"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"exclude": {"description": "If set to true, then all subgraphs containing this edge are excluded from the final results. (optional)", "type": "boolean"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}, "option_group_id": {"description": "Optional string acting as a label on a set of nodes and/or edges indicating that they belong to a group that are to be evaluated as a group. ", "type": "string"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "example": {"asynchronous": "false", "bypass_cache": "true", "max_results": 100, "message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:physically_interacts_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:ChemicalSubstance", "id": "CHEMBL.COMPOUND:CHEMBL112"}, "n01": {"category": "biolink:Protein"}}}}, "page_number": 1, "page_size": 50}, "properties": {"asynchronous": {"description": "Set to true in order to receive an incomplete message_id if the query will take a while. Client can then periodically request that message_id for a status update and eventual complete message", "example": "false", "type": "string"}, "bypass_cache": {"description": "Set to true in order to bypass any possible cached message and try to answer the query over again", "example": "true", "type": "string"}, "max_results": {"description": "Maximum number of individual results to return", "example": 100, "type": "integer"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}, "operations": {"description": "Container for one or more Message objects or identifiers for one or more Messages along with a processing plan and options for how those messages should be processed and returned", "type": "object"}, "page_number": {"description": "Page number of results when the number of results exceeds the page_size", "example": 1, "type": "integer"}, "page_size": {"description": "Split the results into pages with this number of results each", "example": 20, "type": "integer"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"context": "https://rtx.ncats.io/ns/translator.jsonld", "datetime": "2021-01-09T12:34:45Z", "description": "Success. 42 results found.", "id": "https://arax.ncats.io/api/rtx/v1.0/response/123", "logs": [{"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "ERROR", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": "", "operations": "", "original_question": "what proteins are affected by sickle cell anemia", "query_options": {"coalesce": true, "threshold": 0.9}, "query_type_id": "Q2", "reasoner_id": "ARAX", "restated_question": "Which proteins are affected by sickle cell anemia?", "schema_version": "1.0.0", "status": "Success", "table_column_names": ["chemical_substance.name", "chemical_substance.id"], "terms": {"key": "{}"}, "tool_version": "ARAX 0.7.0", "type": "TranslatorAPIResponse"}, "properties": {"context": {"description": "JSON-LD context URI", "example": "https://rtx.ncats.io/ns/translator.jsonld", "type": "string"}, "datetime": {"description": "Datetime string for the time that this response was generated", "example": "2021-01-09T12:34:45Z", "type": "string"}, "description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "id": {"description": "URI for this response", "example": "https://arax.ncats.io/api/rtx/v1.0/response/123", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "operations": {"allOf": [{"$ref": "#/components/schemas/Operations"}], "description": "Container for one or more Message objects or identifiers for one or more Messages along with the processing plan and options for how those messages were processed and returned"}, "original_question": {"description": "The original question text typed in by the user", "example": "what proteins are affected by sickle cell anemia", "type": "string"}, "query_options": {"description": "Dict of options that can be sent with the query. Options are tool specific and not stipulated here", "example": {"coalesce": true, "threshold": 0.9}, "type": "object"}, "query_type_id": {"description": "The query type id if one is known for the query/message (as defined in a shared manner)", "example": "Q2", "type": "string"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this response (one of ARAX, Robokop, etc.)", "example": "ARAX", "type": "string"}, "restated_question": {"description": "A precise restatement of the question, as understood by the Translator, for which the answer applies. The user should verify that the restated question matches the intent of their original question (it might not).", "example": "Which proteins are affected by sickle cell anemia?", "type": "string"}, "schema_version": {"description": "Version label of this TRAPI schema", "example": "1.0.0", "type": "string"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}, "table_column_names": {"description": "List of column names that corresponds to the row_data for each result", "example": ["chemical_substance.name", "chemical_substance.id"], "items": {"type": "string"}, "type": "array"}, "terms": {"additionalProperties": true, "description": "Dict of terms needed by the specific query type", "properties": {"anatomical_entity": {"example": "liver", "type": "string"}, "chemical_substance": {"example": "ibuprofen", "type": "string"}, "disease": {"example": "malaria", "type": "string"}, "metabolite": {"example": "ibuprofen", "type": "string"}, "protein": {"example": "P12345", "type": "string"}}, "type": "object"}, "tool_version": {"description": "Version label of the tool that generated this response", "example": "ARAX 0.7.0", "type": "string"}, "type": {"description": "Entity type of this response", "example": "TranslatorAPIResponse", "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"confidence": {"description": "Confidence metric for this result, a value between (inclusive)\n 0.0 (no confidence) and 1.0 (highest confidence)", "example": 0.9234, "format": "float", "nullable": true, "type": "number"}, "description": {"description": "A free text description of this result answer from the reasoner", "example": "The genetic condition sickle cell anemia may provide protection from cerebral malaria via genetic alterations of proteins HBB (P68871) and HMOX1 (P09601).", "nullable": true, "type": "string"}, "edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "essence": {"description": "A single string that is the terse essence of the result (useful for simple answers)", "example": "ibuprofen", "nullable": true, "type": "string"}, "essence_category": {"description": "A Translator BioLink bioentity category of the essence", "example": "biolink:ChemicalSubstance", "nullable": true, "type": "string"}, "id": {"description": "URI for this result", "example": "result:234", "nullable": true, "type": "string"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "reasoner_id": {"description": "Identifier string of the reasoner that provided this result (e.g., ARAX, Robokop, etc.)", "example": "ARAX", "nullable": true, "type": "string"}, "result_group": {"description": "An integer group number for results for use in cases where several results should be grouped together. Also useful to control sorting ascending.", "example": 1, "nullable": true, "type": "integer"}, "result_group_similarity_score": {"description": "A score that denotes the similarity of this result to other members of the result_group", "example": 0.95, "format": "float", "nullable": true, "type": "number"}, "row_data": {"description": "An arbitrary list of values that captures the essence of the result that can be turned into a tabular result across all answers (each result is a row) for a user that wants simplified tabular output", "example": ["ibuprofen", "CHEMBL:CHEMBL521"], "items": {"oneOf": [{"type": "string"}, {"type": "number"}]}, "nullable": true, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "nullable": true, "type": "number"}, "score_direction": {"description": "Sorting indicator for the score: one of higher_is_better or lower_is_better", "example": "lower_is_better", "nullable": true, "type": "string"}, "score_name": {"description": "Name for the score", "example": "Jaccard distance", "nullable": true, "type": "string"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "edeutsch@systemsbiology.org"}, "description": "TRAPI 1.0 endpoint for the NCATS Biomedical Translator KP called RTX KG2", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://github.com/RTXteam/RTX/blob/master/LICENSE", "title": "RTX KG2", "version": "2.5.2", "x-translator": {"component": "KP", "team": ["Expander Agent"]}, "x-trapi": {"version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/entity": {"get": {"operationId": "get_entity", "parameters": [{"description": "A string to search by (name, abbreviation, CURIE, etc.). The parameter may be repeated for multiple search strings.", "explode": true, "in": "query", "name": "q", "required": true, "schema": {"example": ["MESH:D014867", "NCIT:C34373"], "items": {"type": "string"}, "type": "array"}, "style": "form"}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "successful operation"}, "404": {"description": "Entity not found"}}, "summary": "Obtain CURIE and synonym information about a search term", "tags": ["entity"], "x-openapi-router-controller": "openapi_server.controllers.entity_controller"}}, "/predicates": {"get": {"operationId": "predicates", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "openapi_server.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query", "parameters": [{"description": "Set to true in order to bypass any possible cached response and try to answer the query over again\n", "explode": true, "in": "query", "name": "bypass_cache", "required": false, "schema": {"default": false, "type": "boolean"}, "style": "form"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "openapi_server.controllers.query_controller"}}}, "servers": [{"url": "https://arax.ncats.io/api/rtxkg2/v1.0"}], "tags": [{"description": "Get all supported relationships by source and target", "externalDocs": {"description": "Documentation for the reasoner predicates function", "url": "http://arax.ncats.io/overview.html#predicates"}, "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "http://arax.ncats.io/overview.html#query"}, "name": "query"}, {"name": "translator"}, {"name": "trapi"}, {"description": "Return extensive information about entities in the knowledge graph", "externalDocs": {"description": "Documentation for the reasoner entity function", "url": "https://arax.ncats.io/overview.html#entity"}, "name": "entity"}]}, {"_id": "7deb474184d551fdfa69c28a9bc46073", "_meta": {"date_created": "2021-05-08T16:49:36.021128+00:00", "last_updated": "2021-05-14T07:05:29.319432+00:00", "url": "https://automat.renci.org/textminingkp/1.1/openapi.json", "username": "YaphetKG"}, "_score": 2.8997984, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:29+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:35.024353"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " A literature co-occurrence graph created by the Translator Text Mining KP.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Textmining KP&provider_long=RENCI", "title": "Automat Textmining KP (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/textminingkp"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "1a41e3cd15f2b3bfa21c99900bfa1720", "_meta": {"date_created": "2021-04-07T14:48:12.706214+00:00", "last_updated": "2021-05-14T07:01:09.167632+00:00", "url": "https://trapi.monarchinitiative.org/openapi.json", "username": "kshefchek"}, "_score": 2.4038787, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:08+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:51.629628"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "shefchek@oregonstate.edu", "name": "Kent Shefchek", "x-id": "https://github.com/kshefchek", "x-role": "responsible developer"}, "description": "The SRI reference KG aims to aggregate knowledge sources across translator using KGX.  The initial graph contains data files provided by the Monarch Initiative and several ontologies.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Reference+KG+API&provider_long=the+Translator+Consortium", "title": "SRI Reference Knowledge Graph API", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://trapi.monarchinitiative.org"}], "tags": [{"name": "translator"}]}, {"_id": "55510544e95386a5a8ac3b88f9d00d21", "_meta": {"date_created": "2021-01-30T20:45:51.489336+00:00", "last_updated": "2021-05-14T07:01:56.256115+00:00", "url": "https://name-resolution-sri.renci.org/openapi.json", "username": "kshefchek"}, "_score": 2.3936896, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:56+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:18.428939"}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "Request": {"description": "Reverse-lookup request body.", "properties": {"curies": {"items": {"type": "string"}, "title": "Curies", "type": "array"}}, "required": ["curies"], "title": "Request", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "Name resolution service<p/>This service takes lexical strings and attempts to map them to identifiers (curies) from a vocabulary or ontology.  The lookup is not exact, but includes partial matches.<p/> Multiple results may be returned representing possible conceptual matches, but all of the identifiers have been correctly normalized using the <a href=\"https://nodenormalization-sri.renci.org>NodeNormalization service</a>.", "termsOfService": "robokop.renci.org:7055/tos?service_long=Name+Resolver&provider_long=the+Translator+Consortium", "title": "Name Resolver", "version": "1.0.0", "x-translator": {"component": "Utility", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/reverse_lookup": {"post": {"description": "Look up curies from name or fragment.", "operationId": "lookup_names_reverse_lookup_post", "requestBody": {"content": {"application/json": {"example": {"curies": ["MONDO:0005737", "MONDO:0009757"]}, "schema": {"$ref": "#/components/schemas/Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "title": "Response Lookup Names Reverse Lookup Post", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Lookup Names", "tags": ["lookup"]}}, "/lookup": {"post": {"description": "Look up curies from name or fragment.", "operationId": "lookup_curies_lookup_post", "parameters": [{"in": "query", "name": "string", "required": true, "schema": {"title": "String", "type": "string"}}, {"in": "query", "name": "offset", "required": false, "schema": {"default": 0, "title": "Offset", "type": "integer"}}, {"in": "query", "name": "limit", "required": false, "schema": {"default": 10, "maximum": 1000.0, "title": "Limit", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "title": "Response Lookup Curies Lookup Post", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Lookup Curies", "tags": ["lookup"]}}}, "servers": [{"description": "Default server", "url": "https://name-resolution-sri.renci.org/"}], "tags": [{"name": "translator"}]}, {"_id": "528c38e2218202a1095cc70c612af625", "_meta": {"date_created": "2021-01-30T18:33:25.822142+00:00", "last_updated": "2021-05-14T07:01:54.443128+00:00", "url": "https://edgenormalization-sri.renci.org/apidocs/openapi.yml", "username": "kshefchek"}, "_score": 2.2680697, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:54+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:14.985247"}, "info": {"contact": {"email": "bizon@renci.org", "name": "Chris Bizon", "x-id": "https://github.com/cbizon", "x-role": "responsible developer"}, "description": "The <a href=\"https://biolink.github.io/biolink-model/\">Biolink Model</a> defines allowed predicates in the Translator ecosystem.  Ingesting data from arbitrary sources requires mapping predicates in those sources to Translator predicates. <p/> The <a href=\"https://bl-lookup-sri.renci.org/apidocs\">Biolink Lookup Service</a> can find predicates if they have an exact mapping in the model.  The EdgeNormalization service takes this a step further, and attempts to find the best match to a Biolink predicate, even if there is not an explicit mapping. ", "license": {"name": "MIT", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Edge+Normalization&provider_long=the+Translator+Consortium", "title": "Edge Normalization Service", "version": "1.0.0", "x-translator": {"component": "Utility", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/resolve_predicate": {"get": {"description": "Get Biolink model compliant predicate(s) using the passed predicate(s).", "parameters": [{"in": "query", "name": "predicate", "schema": {"example": ["SEMMEDDB:CAUSES", "RO:0000052"], "items": {"type": "string"}, "type": "array"}}, {"in": "query", "name": "version", "schema": {"example": "latest", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"example": {"RO:0000052": {"identifier": "SEMMEDDB:AFFECTS", "label": "affects"}, "SEMMEDDB:CAUSES": {"identifier": "RO:0002410", "label": "causes"}}, "type": "object"}}}, "description": "Results"}}, "summary": "Resolve predicate CURIE(s) into Biolink model compliant counterpart(s), first checking the BioLink model for exact matches of a CURIE.  If the CURIE is from the Relation Ontology, the service will check its superproperties until an exact match is found.", "tags": ["redis"]}}}, "servers": [{"description": "Default server", "url": "https://edgenormalization-sri.renci.org/"}], "tags": [{"name": "translator"}]}, {"_id": "95b84739a360f89aff4ea1364c2ac242", "_meta": {"date_created": "2021-01-30T16:10:29.497585+00:00", "last_updated": "2021-05-14T07:04:00.246140+00:00", "url": "https://nodenormalization-sri.renci.org/openapi.json", "username": "kshefchek"}, "_score": 2.2680697, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:00+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:07.791734"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CurieList": {"description": "Curie list input model", "example": {"curies": ["MESH:D014867", "NCIT:C34373"]}, "properties": {"curies": {"items": {"type": "string"}, "title": "list of nodes formatted as curies", "type": "array"}}, "required": ["curies"], "title": "CurieList", "type": "object"}, "CuriePivot": {"properties": {"curie_prefix": {"additionalProperties": {"type": "string"}, "title": "Curie Prefix", "type": "object"}}, "required": ["curie_prefix"], "title": "CuriePivot", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "title": "Level", "type": "string"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SemanticTypes": {"example": {"semantic_types": {"types": ["cellular_component", "named_thing", "etc."]}}, "properties": {"semantic_types": {"additionalProperties": {"items": {}, "type": "array"}, "title": "Semantic Types", "type": "object"}}, "required": ["semantic_types"], "title": "SemanticTypes", "type": "object"}, "SemanticTypesInput": {"description": "Semantic type input model", "example": {"semantic_types": ["biolink:ChemicalSubstance", "biolink:AnatomicalEntity"]}, "properties": {"semantic_types": {"items": {"type": "string"}, "title": "list of semantic types", "type": "array"}}, "required": ["semantic_types"], "title": "SemanticTypesInput", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "bizon@renci.org", "name": "Chris Bizon", "x-id": "https://github.com/cbizon", "x-role": "responsible developer"}, "description": "Node normalization takes a CURIE, and returns: <ol> <li>The preferred CURIE for this entity <li>All other known equivalent identifiers for the entity <li>Semantic types for the entity as defined by the <a href=\"https://biolink.github.io/biolink-model/\">BioLink Model</a> </ol> The data served by Node Normalization is created by <a href=\"https://github.com/TranslatorIIPrototypes/Babel\">Babel</a>, which attempts to find identifier equivalences, and makes sure that CURIE prefixes are BioLink Model Compliant.  To determine whether Node Normalization is likely to be useful, check /get_semantic_types, which lists the BioLink semantic types for which normalization has been attempted, and /get_curie_prefixes, which lists the number of times each prefix is used for a semantic type.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Node+Normalization&provider_long=the+Translator+Consortium", "title": "Node Normalization", "version": "1.0.1", "x-translator": {"component": "Utility", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/response": {"post": {"description": "Returns the response object with a merged knowledge graph and query graph bindings", "operationId": "normalize_response_response_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Normalizes a TRAPI response object"}}, "/get_normalized_nodes": {"get": {"description": "Returns the equivalent identifiers and semantic types for the curie(s)", "operationId": "get_normalized_node_handler_get_normalized_nodes_get", "parameters": [{"example": ["MESH:D014867", "NCIT:C34373"], "in": "query", "name": "curie", "required": false, "schema": {"default": [], "items": {"type": "string"}, "title": "Curie", "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get the equivalent identifiers and semantic types for the curie(s) entered."}, "post": {"description": "Returns the equivalent identifiers and semantic types for the curie(s)", "operationId": "get_normalized_node_handler_get_normalized_nodes_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CurieList"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get the equivalent identifiers and semantic types for the curie(s) entered."}}, "/get_semantic_types": {"get": {"description": "Returns a distinct set of the semantic types discovered in the compendium data.", "operationId": "get_semantic_types_handler_get_semantic_types_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemanticTypes"}}}, "description": "Successful Response"}}, "summary": "Return a list of BioLink semantic types for which normalization has been attempted."}}, "/get_curie_prefixes": {"get": {"description": "Returns the curies and their hit count for a semantic type(s).", "operationId": "get_curie_prefixes_handler_get_curie_prefixes_get", "parameters": [{"description": "e.g. chemical_substance, anatomical_entity", "in": "query", "name": "semantic_type", "required": false, "schema": {"default": [], "description": "e.g. chemical_substance, anatomical_entity", "items": {"type": "string"}, "title": "Semantic Type", "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"$ref": "#/components/schemas/CuriePivot"}, "title": "Response Get Curie Prefixes Handler Get Curie Prefixes Get", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Return the number of times each CURIE prefix appears in an equivalent identifier for a semantic type"}, "post": {"description": "Returns the curies and their hit count for a semantic type(s).", "operationId": "get_curie_prefixes_handler_get_curie_prefixes_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemanticTypesInput"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"$ref": "#/components/schemas/CuriePivot"}, "title": "Response Get Curie Prefixes Handler Get Curie Prefixes Post", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Return the number of times each CURIE prefix appears in an equivalent identifier for a semantic type"}}}, "servers": [{"description": "Default server", "url": "https://nodenormalization-sri.renci.org/"}], "tags": [{"name": "translator"}, {"name": "Interfaces"}]}, {"_id": "1373b330886946ec5e9e9f306aa40c56", "_meta": {"date_created": "2021-05-08T18:43:12.882503+00:00", "last_updated": "2021-05-14T07:04:41.291268+00:00", "url": "https://nodenormalization-sri.renci.org/1.1/openapi.json", "username": "PhillipsOwen"}, "_score": 2.2680697, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:40+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:28.673387"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CurieList": {"description": "Curie list input model", "example": {"curies": ["MESH:D014867", "NCIT:C34373"]}, "properties": {"curies": {"items": {"type": "string"}, "title": "list of nodes formatted as curies", "type": "array"}}, "required": ["curies"], "title": "CurieList", "type": "object"}, "CuriePivot": {"properties": {"curie_prefix": {"additionalProperties": {"type": "string"}, "title": "Curie Prefix", "type": "object"}}, "required": ["curie_prefix"], "title": "CuriePivot", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "Level"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SemanticTypes": {"example": {"semantic_types": {"types": ["cellular_component", "named_thing", "etc."]}}, "properties": {"semantic_types": {"additionalProperties": {"items": {}, "type": "array"}, "title": "Semantic Types", "type": "object"}}, "required": ["semantic_types"], "title": "SemanticTypes", "type": "object"}, "SemanticTypesInput": {"description": "Semantic type input model", "example": {"semantic_types": ["biolink:ChemicalSubstance", "biolink:AnatomicalEntity"]}, "properties": {"semantic_types": {"items": {"type": "string"}, "title": "list of semantic types", "type": "array"}}, "required": ["semantic_types"], "title": "SemanticTypesInput", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "bizon@renci.org", "name": "Chris Bizon", "x-id": "https://github.com/cbizon", "x-role": "responsible developer"}, "description": "Node normalization takes a CURIE, and returns: <ol> <li>The preferred CURIE for this entity <li>All other known equivalent identifiers for the entity <li>Semantic types for the entity as defined by the <a href=\"https://biolink.github.io/biolink-model/\">BioLink Model</a> </ol> The data served by Node Normalization is created by <a href=\"https://github.com/TranslatorIIPrototypes/Babel\">Babel</a>, which attempts to find identifier equivalences, and makes sure that CURIE prefixes are BioLink Model Compliant.  To determine whether Node Normalization is likely to be useful, check /get_semantic_types, which lists the BioLink semantic types for which normalization has been attempted, and /get_curie_prefixes, which lists the number of times each prefix is used for a semantic type.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Node+Normalization&provider_long=the+Translator+Consortium", "title": "Node Normalization", "version": "1.0.1", "x-translator": {"component": "Utility", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/response": {"post": {"description": "Returns the response object with a merged knowledge graph and query graph bindings", "operationId": "normalize_response_response_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Normalizes a TRAPI response object"}}, "/get_normalized_nodes": {"get": {"description": "Returns the equivalent identifiers and semantic types for the curie(s)", "operationId": "get_normalized_node_handler_get_normalized_nodes_get", "parameters": [{"example": ["MESH:D014867", "NCIT:C34373"], "in": "query", "name": "curie", "required": false, "schema": {"default": [], "items": {"type": "string"}, "title": "Curie", "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get the equivalent identifiers and semantic types for the curie(s) entered."}, "post": {"description": "Returns the equivalent identifiers and semantic types for the curie(s)", "operationId": "get_normalized_node_handler_get_normalized_nodes_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CurieList"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get the equivalent identifiers and semantic types for the curie(s) entered."}}, "/get_semantic_types": {"get": {"description": "Returns a distinct set of the semantic types discovered in the compendium data.", "operationId": "get_semantic_types_handler_get_semantic_types_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemanticTypes"}}}, "description": "Successful Response"}}, "summary": "Return a list of BioLink semantic types for which normalization has been attempted."}}, "/get_curie_prefixes": {"get": {"description": "Returns the curies and their hit count for a semantic type(s).", "operationId": "get_curie_prefixes_handler_get_curie_prefixes_get", "parameters": [{"description": "e.g. chemical_substance, anatomical_entity", "in": "query", "name": "semantic_type", "required": false, "schema": {"default": [], "description": "e.g. chemical_substance, anatomical_entity", "items": {"type": "string"}, "title": "Semantic Type", "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"$ref": "#/components/schemas/CuriePivot"}, "title": "Response Get Curie Prefixes Handler Get Curie Prefixes Get", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Return the number of times each CURIE prefix appears in an equivalent identifier for a semantic type"}, "post": {"description": "Returns the curies and their hit count for a semantic type(s).", "operationId": "get_curie_prefixes_handler_get_curie_prefixes_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SemanticTypesInput"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"$ref": "#/components/schemas/CuriePivot"}, "title": "Response Get Curie Prefixes Handler Get Curie Prefixes Post", "type": "object"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Return the number of times each CURIE prefix appears in an equivalent identifier for a semantic type"}}}, "servers": [{"description": "Default server", "url": "https://nodenormalization-sri.renci.org/1.1"}], "tags": [{"name": "translator"}, {"name": "Interfaces"}]}, {"_id": "9df83f691d5fa0d8eb9c9f5f6b6ebb39", "_meta": {"date_created": "2021-01-30T21:31:39.801826+00:00", "last_updated": "2021-05-14T07:04:38.535329+00:00", "url": "https://bl-lookup-sri.renci.org/apidocs/openapi.yml", "username": "kshefchek"}, "_score": 2.1549773, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:38+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:39.282064"}, "info": {"contact": {"email": "bizon@renci.org", "name": "Chris Bizon", "x-id": "https://github.com/cbizon", "x-role": "responsible developer"}, "description": "The <a href=\"https://biolink.github.io/biolink-model/\">Biolink Model</a> defines a set of common concepts for use in Translator. These include semantic types for entities, as well as the relations between them. These concepts are organized into an inheritance hierarchy capturing different granularities of description. Furthermore, each concept contains metadata relating the concept to ontologies.\nThe Biolink Lookup Service provides a computational interface to the model, including access to previous versions. When the service is deployed, it queries the Biolink Github repository, and updates itself to access the latest version.", "license": {"name": "MIT", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Biolink+Model+Lookup&provider_long=the+Translator+Consortium", "title": "Biolink Model Lookup", "version": "1.0.0", "x-translator": {"component": "Utility", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.2", "paths": {"/bl/{concept}/ancestors": {"get": {"description": "", "parameters": [{"default": "chemical_substance", "in": "path", "name": "concept", "required": true}, {"default": "latest", "in": "query", "name": "version"}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Return all ancestors (superclasses or superproperties) of concept, based on the BioLink Model YAML.", "tags": ["lookup"]}}, "/bl/{concept}/descendants": {"get": {"description": "", "parameters": [{"default": "chemical_substance", "in": "path", "name": "concept", "required": true}, {"default": "latest", "in": "query", "name": "version"}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Return descendants (subclasses or subproperties) of concept, based on the BioLink Model YAML", "tags": ["lookup"]}}, "/bl/{concept}/lineage": {"get": {"description": "", "parameters": [{"default": "chemical_substance", "in": "path", "name": "concept", "required": true}, {"default": "latest", "in": "query", "name": "version"}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Return the ancestors and descendants of concept, based on the BioLink Model YAML", "tags": ["lookup"]}}, "/uri_lookup/{uri}": {"get": {"description": "", "parameters": [{"example": "RO:0002606", "in": "path", "name": "uri", "required": true}, {"default": "latest", "in": "query", "name": "version"}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Given the URI for a property, return the corresponding BioLink Model slot. Checks the Biolink Model YAML for both slot_uri and mappings.", "tags": ["lookup"]}}, "/bl/{concept}": {"get": {"description": "", "parameters": [{"default": "chemical_substance", "in": "path", "name": "concept", "required": true}, {"default": "latest", "in": "query", "name": "version"}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "successful operation"}}, "summary": "Get all properties for concept from the BioLink Model YAML.", "tags": ["lookup"]}}, "/versions": {"get": {"description": "", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array"}}}, "description": "successful operation"}}, "summary": "Get available BioLink Model versions. These values can be used to parameterize other function calls.", "tags": ["meta"]}}}, "servers": [{"description": "Default server", "url": "https://bl-lookup-sri.renci.org/"}], "tags": [{"name": "translator"}, {"name": "lookup"}, {"name": "meta"}]}, {"_id": "fc8245e92c970298449294fc04211869", "_meta": {"date_created": "2021-02-04T00:00:10.655676+00:00", "last_updated": "2021-05-14T07:05:13.958209+00:00", "slug": "cohdcovid", "url": "https://raw.githubusercontent.com/WengLab-InformaticsResearch/cohd_api/cohd_covid/cohd/cohd_oas3.yaml", "username": "CaseyTa"}, "_score": 2.1482296, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:13+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:11:19.267118"}, "components": {"callbacks": {}, "examples": {}, "headers": {}, "links": {}, "parameters": {}, "requestBodies": {}, "responses": {}, "schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node", "properties": {"name": {"description": "Human-readable name or label for the attribute. Should be the name of the semantic type term.", "example": "PubMed Identifier", "type": "string"}, "source": {"description": "Source of the attribute, as a CURIE prefix.", "example": "UniProtKB", "type": "string"}, "type": {"description": "CURIE of the semantic type of the attribute, from the EDAM ontology if possible. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187", "type": "string"}, "url": {"description": "Human-consumable URL to link out and read about the attribute (not the node).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkRelation": {"description": "CURIE for a Biolink slot, related_to or a child thereof (snake_case)", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model relations", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "CurieList": {"description": "list of CURIEs", "properties": {"curies": {"items": {"type": "string"}, "title": "list of CURIEs", "type": "array"}}, "type": "object"}, "Edge": {"additionalProperties": false, "description": "An edge in the knowledge graph linking two nodes", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object node of this edge", "example": "UniProtKB:P00738"}, "predicate": {"$ref": "#/components/schemas/BiolinkRelation"}, "relation": {"description": "Lower-level relationship type of this edge", "example": "upregulates", "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject node of this edge", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"properties": {"id": {"description": "A knowledge-graph edge id, i.e. the `id` of a KEdge", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "List of edges in the KnowledgeGraph", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "List of nodes in the KnowledgeGraph", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "message": {"description": "A human-readable log message", "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "properties": {"knowledge_graph": {"$ref": "#/components/schemas/KnowledgeGraph", "description": "KnowledgeGraph object that contains all the nodes and edges referenced in any of the possible answers to the query OR connection information for a remote knowledge graph", "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "type": "object"}, "results": {"description": "List of all returned potential answers for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the knowledge graph", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "type": "array"}, "category": {"oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "type": "string"}}, "type": "object"}, "NodeBinding": {"properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "A knowledge-graph node id, i.e. the `id` of a KNode"}}, "required": ["id"], "type": "object"}, "OmopList": {"description": "list of OMOP IDs", "properties": {"curies": {"items": {"type": "integer"}, "title": "list of OMOP IDs", "type": "array"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph", "properties": {"object": {"description": "Corresponds to the id of object node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"oneOf": [{"$ref": "#/components/schemas/BiolinkRelation"}, {"items": {"$ref": "#/components/schemas/BiolinkRelation"}, "type": "array"}]}, "relation": {"description": "Lower-level relationship type of this edge", "example": "upregulates", "type": "string"}, "subject": {"description": "Corresponds to the id of subject node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph", "properties": {"category": {"oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph intended to be the thought path to be followed by a reasoner to answer the question. This graph is a representation of a question.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "List of edges in the QueryGraph", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "List of nodes in the QueryGraph", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "QueryOptions": {"description": "Additional query options that apply to COHD", "properties": {"biolink_only": {"description": "Whether to only include nodes in the knowledge graph and results that are Biolink compliant (as defined by ontology_targets). Default: true", "example": true, "type": "boolean"}, "confidence_interval": {"description": "Criteria that the results are significant to the specified criteria level. This only applies when the method is 'obsExpRatio'. Default: not required.", "example": 0.99, "type": "number"}, "dataset_id": {"description": "The COHD dataset to query", "example": 3, "type": "integer"}, "local_oxo": {"description": "Whether to use the local implementation of OxO or the real implementation of OxO. Note, the local OxO implementation may contain outdated definitions and xrefs but runs faster. The real OxO has the most updated definitions and xrefs, but is slower (~1-2 seconds/concept). Default: true", "example": false, "type": "boolean"}, "max_results": {"description": "The maximum number of results to be returned.", "example": 10, "type": "integer"}, "method": {"description": "Type of association method to perform: 'obsExpRatio' (default), 'relativeFrequency', or 'chiSquare'", "example": "obsExpRatio", "type": "string"}, "min_cooccurrence": {"description": "Criteria that the results have a minimum co-occurrence count. Default: not required.", "example": 50, "type": "integer"}, "ontology_targets": {"description": "DEPRECATED: COHD is now attempting to map based on the Biolink Model yaml and SRI Node Normalizer.\nCOHD can attempt to map from OMOP concepts to a target ontology. You can identify target ontologies for each Biolink node type. The keys should be Biolink node types (e.g., 'biolink:Disease'). The values should be lists of target ontology prefixes, e.g., ['ICD9', 'UMLS', 'DOID']. An emtpy list indicates not to perform mapping for the specified type. Use the key '_DEFAULT' to indicate a default list of target ontologies for any unspecified types. If a domain is specified, it will override the '_DEFAULT' list. Target ontology prefixes should match the Biolink yaml but may include prefixes outside of Biolink.\n\nIf ontology_targets is not provided, COHD API will attempt mappings based on the prefixes defined in the Biolink yaml.\n", "example": {"_DEFAULT": [], "biolink:Disease": ["ICD9", "SNOMEDCT", "DOID"], "biolink:Drug": ["RxNorm"], "biolink:Procedure": ["ICD10PCS", "SNOMEDCT"]}, "type": "object"}, "threshold": {"description": "Criteria threshold to apply to the association metric. chiSquare: p-value < threshold. obsExpRatio: abs(ln_ratio) >= threshold. relativeFrequency: relative_frequency >= threshold.", "example": 0.5, "type": "number"}}, "type": "object"}, "Response": {"description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "List of QEdge-KEdge bindings.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "List of QNode-KNode bindings.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}, "securitySchemes": {}, "x-bte-kgs-response-mappings": {"chi_square": {"biolink:OMOP": "results.concept_id_2", "biolink:chi_squared_statistic": "results.chi_square", "biolink:has_count": "results.n_c1_c2", "biolink:name": "results.concept_2_name", "biolink:p_value": "results.adj_p-value"}, "obs_exp_ratio": {"biolink:OMOP": "results.concept_id_2", "biolink:has_count": "results.observed_count", "biolink:name": "results.concept_2_name"}, "relative_frequency": {"biolink:OMOP": "results.concept_id_2", "biolink:has_count": "results.concept_pair_count", "biolink:has_quotient": "results.relative_frequency", "biolink:has_total": "results.concept_2_count", "biolink:name": "results.concept_2_name"}}}, "info": {"contact": {"email": "ct2865@cumc.columbia.edu", "name": "Casey Ta", "url": "http://chunhualab.org/", "x-role": "responsible developer"}, "description": "The Columbia Open Health Data (COHD) for COVID-19 Research API provides access to counts and frequencies (i.e., EHR visit prevalence) of conditions, procedures, drug exposures, and the co-occurrence frequencies between them for a cohort of hospitalized COVID-19 patients and two comparator cohorts of hospitalized influenza patients and hospitalized patients. Count and frequency data were derived from the [Columbia University Medical Center's](http://www.cumc.columbia.edu/) [OHDSI](https://www.ohdsi.org/) database including inpatient. Counts are the number of inpatient visits associated with the concept, e.g., diagnosed with a condition, exposed to a drug, or a procedure was performed. Frequencies are the number of unique visits associated with the concept divided by the total number of visits in the dataset, i.e., prevalence in the electronic health records. To protect patient privacy, all concepts and pairs of concepts where the count <= 10 were excluded, and counts were randomized by the Poisson distribution.         \n\nDatasets from three primary cohorts are available: \n1) COVID-19: Hospitalized patients aged 18 or older with a COVID-19 related condition diagnosis and/or a confirmed positive COVID-19 test during their hospitalization period or within the prior 21 days. Date range: March 1, 2020 to September 1, 2020. This cohort is also further stratified by sex (male and female) and age (adult: 18-64, senior: 65+).\n2) General inpatient: All hospitalized patients aged 18 or older. Date range: January 1, 2014 to December 31, 2019.\n3) Influenza: Hospitalized patients aged 18 or older who had at least one occurrence of influenza conditions or pre-coordinated positive measurements or positive influenza testing in the prior 21 days or during their hospitalization period. Date range: January 1, 2014 to December 31, 2019.\n\nBoth hierarchical and non-hierarchical datasets are available for each cohort. In the hierarchical datasets, the counts for each concept include the visits from all descendant concepts. For example, the count for ibuprofen (ID 1177480) includes visits with Ibuprofen 600 MG Oral Tablet (ID 19019073), Ibuprofen 400 MG Oral Tablet (ID 19019072), Ibuprofen 20 MG/ML Oral Suspension (ID 19019050), etc. \n\nClinical concepts (e.g., conditions, procedures, drugs) are coded by their standard concept ID in the [OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki). API methods are provided to map to/from other vocabularies supported in OMOP and other ontologies using the EMBL-EBI Ontology Xref Service (OxO). \n\n\nThe following resources are available through this API: \n\n\n1. Metadata: Metadata on the COHD database, including dataset descriptions, number of concepts, etc. \n\n\n2. OMOP: Access to the common vocabulary for name and concept identifier mapping\n\n\n3. Clinical Frequencies: Access to the counts and frequencies of conditions, procedures, and drug exposures, and the associations between them. Frequency was determined as the number of visits with the code(s) / total number of visits. \n\n\n4. Concept Associations: Inferred associations between concepts using chi-square analysis, ratio between observed to expected frequency, and relative frequency. \n\n\nA [Python notebook](https://github.com/WengLab-InformaticsResearch/cohd_api/blob/master/notebooks/COHD_API_Example.ipynb) demonstrates simple examples of how to use the COHD API.\n\n\nCOHD was developed at the [Columbia University Department of Biomedical Informatics](https://www.dbmi.columbia.edu/) as a collaboration between the [Weng Lab](http://people.dbmi.columbia.edu/~chw7007/), [Tatonetti Lab](http://tatonettilab.org/), and the [NCATS Biomedical Data Translator](https://ncats.nih.gov/translator) program (TReK Team). This work was supported in part by grants: NCATS 1OT2TR003434, NLM R01LM012895, NCATS OT3TR002027, NLM R01LM009886-08A1, and NIGMS R01GM107145.\n\nThe following external resources may be useful:  \n[OHDSI](https://www.ohdsi.org/)  \n[OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki)  \n[Athena](http://athena.ohdsi.org) (OMOP vocabularies, search, concept relationships, concept hierarchy)  \n[Atlas](http://www.ohdsi.org/web/atlas/) (OMOP vocabularies, search, concept relationships, concept hierarchy, concept sets)   \n[NCATS Biomedical Data Translator](https://sites.google.com/ncats.nih.gov/translator-io/home)   \n", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "http://cohd.io/terms/", "title": "Columbia Open Health Data (COHD) for COVID-19 Research", "version": "3.0.0", "x-accessRestriction": "none", "x-implementationLanguage": "Python", "x-translator": {"component": "KP", "team": ["Clinical Data Provider"]}, "x-trapi": {"version": "1.0.0"}}, "openapi": "3.0.0", "paths": {"/metadata/datasets": {"get": {"description": "Returns a list of datasets, including dataset ID, name, and description.", "operationId": "datasets", "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"dataset_description": {"example": "Hospitalized patients with a COVID-19 condition and/or positive lab test (non-hierarchical)", "type": "string"}, "dataset_id": {"example": 1, "type": "integer"}, "dataset_name": {"example": "COVID Cohort (non-hierarchical)", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of dataset descriptions."}, "default": {"description": "Unexpected error"}}, "summary": "Enumerates the datasets available in COHD", "tags": ["Metadata"]}}, "/metadata/domainCounts": {"get": {"description": "Returns a list of domains and the number of concepts in each domain.", "operationId": "domainCounts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 1000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of domain counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of concepts in each domain", "tags": ["Metadata"]}}, "/metadata/domainPairCounts": {"get": {"description": "Returns a list of pairs of domains and the number of pairs of concepts in each.", "operationId": "domainPairCounts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 1000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id_1": {"example": "Condition", "type": "string"}, "domain_id_2": {"example": "Drug", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of domain pair counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of pairs of concepts in each pair of domains", "tags": ["Metadata"]}}, "/metadata/visitCount": {"get": {"description": "Returns the number of visits in the dataset.", "operationId": "visitCount", "parameters": [{"description": "The dataset_id of the dataset to query.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 100000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of visit counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of visits in the dataset", "tags": ["Metadata"]}}, "/omop/concepts": {"get": {"description": "Returns the OMOP concept names and domains for the given list of concept IDs.", "operationId": "concepts", "parameters": [{"description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"", "example": "192855,2008271", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "92546004", "type": "string"}, "concept_id": {"example": 192855, "type": "integer"}, "concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Concept definitions from concept ID", "tags": ["OMOP"]}}, "/omop/findConceptIDs": {"get": {"description": "Searches the OMOP concept table for concept names similar to the query. Returns a list of concepts, including their names and IDs, sorted in decreasing order by the concept's prevalence. ", "operationId": "findConceptIDs", "parameters": [{"description": "The name of the concept to search for, e.g., \"cancer\" or \"ibuprofen\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"description": "The dataset to reference when sorting concepts by their frequency. Default: 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "The domain (e.g., \"Condition\", \"Drug\", \"Procedure\") to restrict the search to. If not specified, the search will be unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Condition", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "The minimum concept count (inclusive) to include a concept in the search results. Setting the min_count to 0 will cause findConceptIDs to return all matching standard OMOP concepts (this can be slow). Setting the min_count to 1 will cause findConceptIDs to only return concepts with count data (much faster). Default: 1.", "example": 1, "in": "query", "name": "min_count", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "92546004", "type": "string"}, "concept_count": {"example": 368, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Search for OMOP concepts by name and domain", "tags": ["OMOP"]}}, "/omop/conceptAncestors": {"get": {"description": "Retrieves the given concept's hierarchical ancestors and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. For more information, see the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).", "operationId": "conceptAncestors", "parameters": [{"description": "An OMOP concept ID, e.g., 19019073", "example": 19019073, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm (only and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted", "example": "RxNorm", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted", "example": "Ingredient", "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}, {"description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)", "example": 3, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"ancestor_concept_id": {"example": 1177480, "type": "integer"}, "concept_class_id": {"example": "Ingredient", "type": "string"}, "concept_code": {"example": "5640", "type": "string"}, "concept_count": {"example": 233514, "type": "integer"}, "concept_name": {"example": "Ibuprofen", "type": "string"}, "domain_id": {"example": "Drug", "type": "string"}, "max_levels_of_separation": {"example": 2, "type": "integer"}, "min_levels_of_separation": {"example": 2, "type": "integer"}, "standard_concept": {"example": "S", "type": "string"}, "vocabulary_id": {"example": "RxNorm", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Retrieve the concept's hierarchical ancestors", "tags": ["OMOP"]}}, "/omop/conceptDescendants": {"get": {"description": "Retrieves the given concept's hierarchical descendants and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. See the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).", "operationId": "conceptDescendants", "parameters": [{"description": "An OMOP concept ID, e.g., 313217", "example": 313217, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted", "example": null, "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted", "example": null, "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}, {"description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)", "example": 3, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "49436004", "type": "string"}, "concept_count": {"example": 53272, "type": "integer"}, "concept_name": {"example": "Atrial fibrillation", "type": "string"}, "descendant_concept_id": {"example": 313217, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}, "max_levels_of_separation": {"example": 0, "type": "integer"}, "min_levels_of_separation": {"example": 0, "type": "integer"}, "standard_concept": {"example": "S", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Retrieve the concept's hierarchical descendants", "tags": ["OMOP"]}}, "/omop/mapToStandardConceptID": {"get": {"description": "Uses the OMOP concept_relationship table to map from a non-standard concept code (e.g., ICD9CM 715.3) to a standard OMOP concept ID (e.g., 72990). This method may return multiple results if vocabulary_id is not specified and the concept_code is not unique across vocabularies. If both concept_code and vocabulary_id are specified, then 1 result will be returned at most. ", "operationId": "mapToStandardConceptID", "parameters": [{"description": "The concept code to map from, e.g., 715.3", "example": "715.3", "in": "query", "name": "concept_code", "required": true, "schema": {"type": "string"}}, {"description": "The vocabulary (e.g., \"ICD9CM\") that the concept code belongs to. If this parameter is not specified, the method will return mappings from any source vocabulary with matching concept code. See /omop/vocabularies for the list of supported vocabularies.", "example": "ICD9CM", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"source_concept_code": {"example": "715.3", "type": "string"}, "source_concept_id": {"example": 44834979, "type": "integer"}, "source_concept_name": {"example": "Osteoarthrosis, localized, not specified whether primary or secondary", "type": "string"}, "source_vocabulary_id": {"example": "ICD9CM", "type": "string"}, "standard_concept_id": {"example": 72990, "type": "integer"}, "standard_concept_name": {"example": "Localized osteoarthrosis uncertain if primary OR secondary", "type": "string"}, "standard_domain_id": {"example": "Condition", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Map from a non-standard concept code to a standard OMOP concept ID", "tags": ["OMOP"]}}, "/omop/mapFromStandardConceptID": {"get": {"description": "Uses the OMOP concept_relationship table to map from a standard concept ID (e.g., 72990) to concept code(s) (e.g., ICD9CM 715.3, 715.31, 715.32, etc.). An OMOP standard concept ID may map to many concepts in the external vocabulary.", "operationId": "mapFromStandardConceptID", "parameters": [{"description": "The standard OMOP concept id to map from, e.g., 72990", "example": 72990, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary (e.g., \"ICD9CM\") to map to. If this parameter is not specified, the method will return mappings to any matching vocabularies. See /omop/vocabularies for the list of supported vocabularies.", "example": "ICD9CM", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "4-dig nonbill code", "type": "string"}, "concept_code": {"example": "715.3", "type": "string"}, "concept_id": {"example": 44834979, "type": "integer"}, "concept_name": {"example": "Osteoarthrosis, localized, not specified whether primary or secondary", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "standard_concept": {"example": null, "type": "string"}, "vocabulary_id": {"example": "ICD9CM", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Map from a standard concept ID to concept code(s) in an external vocabulary", "tags": ["OMOP"]}}, "/omop/vocabularies": {"get": {"description": "List of vocabulary_ids. Useful if you need to use /omop/mapToStandardConceptID to map a concept code from a source vocabulary to the OMOP standard vocabulary.", "operationId": "vocabularies", "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of vocabularies."}, "default": {"description": "Unexpected error"}}, "summary": "List of vocabularies", "tags": ["OMOP"]}}, "/omop/xrefToOMOP": {"get": {"description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method attempts to use OxO to map from the original ontology to an intermediate ontology that is included in OMOP (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OMOP mappings to the standard concepts. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.", "operationId": "xrefToOMOP", "parameters": [{"description": "Compact URI (CURIE) of the concept to map, e.g., DOID:8398", "example": "DOID:8398", "in": "query", "name": "curie", "required": true, "schema": {"type": "string"}}, {"description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from the original concept to an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept. One additional step may be taken by the COHD API to map to the OMOP standard concept. Default: 2.", "example": 2, "in": "query", "name": "distance", "required": false, "schema": {"type": "integer"}}, {"description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.", "example": false, "in": "query", "name": "local", "required": false, "schema": {"type": "boolean"}}, {"description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping based on path distances. Default: false.", "example": false, "in": "query", "name": "recommend", "required": false, "schema": {"type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"intermediate_oxo_id": {"example": "ICD9CM:715.3", "type": "string"}, "intermediate_oxo_label": {"example": "", "type": "string"}, "omop_concept_name": {"example": "Localized osteoarthrosis uncertain if primary OR secondary", "type": "string"}, "omop_distance": {"example": 1, "type": "integer"}, "omop_domain_id": {"example": "Condition", "type": "string"}, "omop_standard_concept_id": {"example": 72990, "type": "integer"}, "oxo_distance": {"example": 1, "type": "integer"}, "source_oxo_id": {"example": "DOID:8398", "type": "string"}, "source_oxo_label": {"example": "osteoarthritis", "type": "string"}, "total_distance": {"example": 2, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of mappings from external concepts to OMOP concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service", "tags": ["OMOP"]}}, "/omop/xrefFromOMOP": {"get": {"description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method maps from the OMOP standard concept to an intermediate vocabulary included is OxO (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OxO API to map to other ontologies. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.", "operationId": "xrefFromOMOP", "parameters": [{"description": "OMOP standard concept_id to map, e.g., 192855", "example": 192855, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "Target ontologies for OxO. Comma separated target prefixes, e.g., \"DOID,UMLS\"", "example": "UMLS", "in": "query", "name": "mapping_targets", "required": false, "schema": {"type": "string"}}, {"description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept to the desired ontology. One additional step may be taken by the COHD API to map to the OMOP standard concept to ICD9CM, ICD10CM, SNOMEDCT, or MeSH. Default: 2.", "example": 2, "in": "query", "name": "distance", "required": false, "schema": {"type": "integer"}}, {"description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.", "example": false, "in": "query", "name": "local", "required": false, "schema": {"type": "boolean"}}, {"description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping for each target based on path distances. Default: false.", "example": false, "in": "query", "name": "recommend", "required": false, "schema": {"type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"intermediate_omop_concept_code": {"example": "92546004", "type": "string"}, "intermediate_omop_concept_id": {"example": 192855, "type": "integer"}, "intermediate_omop_concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "intermediate_omop_vocabulary_id": {"example": "SNOMED", "type": "string"}, "intermediate_oxo_curie": {"example": "SNOMEDCT:92546004", "type": "string"}, "intermediate_oxo_label": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "omop_distance": {"example": 0, "type": "integer"}, "oxo_distance": {"example": 1, "type": "integer"}, "source_omop_concept_code": {"example": "92546004", "type": "string"}, "source_omop_concept_id": {"example": 192855, "type": "integer"}, "source_omop_concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "source_omop_vocabulary_id": {"example": "SNOMED", "type": "string"}, "target_curie": {"example": "UMLS:C0154091", "type": "string"}, "target_label": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "total_distance": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of mappings from OMOP concepts to external concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service", "tags": ["OMOP"]}}, "/frequencies/singleConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of individual concepts. Multiple concepts may be requested in a comma separated list.", "operationId": "singleConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"", "example": "192855", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_count": {"example": 368, "type": "integer"}, "concept_frequency": {"example": 0.0002055371025188907, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of single concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequency of individual concepts", "tags": ["Clinical Frequencies"]}}, "/frequencies/pairedConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of a pair of concepts.", "operationId": "pairedConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "A comma pair of OMOP concept ids, e.g., \"192855,2008271\"", "example": "192855,2008271", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_count": {"example": 10, "type": "integer"}, "concept_frequency": {"example": 5.585247351056813e-06, "type": "integer"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2008271, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequency of a pair of concepts", "tags": ["Clinical Frequencies"]}}, "/frequencies/associatedConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id. Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.", "operationId": "associatedConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "q", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"associated_concept_id": {"example": 19041324, "type": "integer"}, "associated_concept_name": {"example": "Acetaminophen 325 MG Oral Tablet [Tylenol]", "type": "string"}, "associated_domain_id": {"example": "Drug", "type": "string"}, "concept_count": {"example": 277, "type": "integer"}, "concept_frequency": {"example": 0.0001547113516242737, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of associated concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequencies of all pairs of concepts given a concept id", "tags": ["Clinical Frequencies"]}}, "/frequencies/associatedConceptDomainFreq": {"get": {"description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id restricted by domain of the associated concept_id.  Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.", "operationId": "associatedConceptDomainFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Procedure", "in": "query", "name": "domain", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"associated_concept_id": {"example": 2211361, "type": "integer"}, "associated_concept_name": {"example": "Radiologic examination, chest, 2 views, frontal and lateral", "type": "string"}, "associated_domain_id": {"example": "Procedure", "type": "string"}, "concept_count": {"example": 257, "type": "integer"}, "concept_frequency": {"example": 0.00014354085692216007, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of associated concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequencies of all pairs of concepts given a concept id", "tags": ["Clinical Frequencies"]}}, "/frequencies/mostFrequentConcepts": {"get": {"description": "Retrieves the most frequent concepts.", "operationId": "mostFrequentConcepts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "(Optional) The number of concepts to retreieve, e.g., 100. 0 or unspecified will return all matching concepts.", "example": 100, "in": "query", "name": "q", "required": false, "schema": {"type": "integer"}}, {"description": "(Optional) The domain_id to restrict to, e.g., \"Condition\", \"Drug\", \"Procedure\". See /metadata/domainCounts for a list of valid domain IDs.", "example": "Condition", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "(Optional) The vocabulary_id(s) to restrict to, e.g., \"SNOMED\", \"MedDRA\", \"RxNorm\", \"ATC\" etc. Comma separated to include multiple vocabularies, e.g., \"SNOMED,MedDRA\". Default: unrestricted", "example": null, "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "(Optional) The concept_class_id(s) to restrict to. concept_class_ids are specific to each vocabulary, e.g.,: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Comma separated to include multiple concept_class_ids, e.g., \"PT,HLT\". Default: unrestricted", "example": null, "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_count": {"example": 233790, "type": "integer"}, "concept_frequency": {"example": 0.1305774978203572, "type": "integer"}, "concept_id": {"example": 320128, "type": "integer"}, "concept_name": {"example": "Essential hypertension", "type": "string"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of most frequent concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Most frequent concepts [by domain]", "tags": ["Clinical Frequencies"]}}, "/association/chiSquare": {"get": {"description": "Returns the chi-square statistic and p-value between pairs of concepts. Results are returned in descending order of the chi-square statistic. Note that due to large sample sizes, the chi-square can become very large. \n\nThe expected frequencies for the chi-square analysis are calculated based on the single concept frequencies and assuming independence between concepts. P-value is calculated with 1 DOF. \n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "chiSquare", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If this parameter is specified, then the chi-square between concept_id_1 and concept_id_2 is returned. If this parameter is not specified, then a list of chi-squared results between concept_id_1 and other concepts is returned.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"adj_p-value": {"description": "Bonferonni adjusted p-value, adjusted with the total number of pairs of concepts in the dataset.", "example": 0.0314, "type": "number"}, "chi_square": {"example": 370026.1780081638, "type": "integer"}, "concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Instillation of therapeutic substance into bladder", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 4021588, "type": "integer"}, "dataset_id": {"example": 3, "type": "integer"}, "p-value": {"example": 0.0314, "type": "number"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concept pairs and chi-squared values."}, "default": {"description": "Unexpected error"}}, "summary": "Chi-square analysis on pairs of concepts", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/association/obsExpRatio": {"get": {"description": "Returns the natural logarithm of the ratio between the observed count and expected count. Expected count is calculated from the single concept frequencies and assuming independence between the concepts. Results are returned in descending order of ln_ratio.\n\nexpected_count = Count_1_and_2 * num_visits / (Count_1 * Count_2)\n\nln_ratio = ln(expected_count)\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Results for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "obsExpRatio", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}, {"description": "The confidence level used for calculating confidence intervals (default 0.99).", "example": 0.99, "in": "query", "name": "confidence", "required": false, "schema": {"type": "number"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Closed [transurethral] biopsy of bladder", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2003784, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "expected_count": {"example": 0.060838982345591645, "type": "integer"}, "ln_ratio": {"example": 7.561698473261244, "type": "integer"}, "observed_count": {"example": 117, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concepts and observed-expected frequency ratio."}, "default": {"description": "Unexpected error"}}, "summary": "Observed Count / Expected Count", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/association/relativeFrequency": {"get": {"description": "Calculates the relative frequency (i.e., conditional probability) between pairs of concepts. Results are returned in descending order of relative frequency. Note that due to the randomization of the counts, the calculated relative frequencies can exceed the limit of 1.0.\n\nRelative Frequency = Count_1_and_2 / Count_2\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "relativeFrequency", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict concept_id_2 (the base concept) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}, {"description": "The confidence level used for calculating confidence intervals (default 0.99).", "example": 0.99, "in": "query", "name": "confidence", "required": false, "schema": {"type": "number"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_2_count": {"example": 82, "type": "integer"}, "concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Radical cystectomy", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2003805, "type": "integer"}, "concept_pair_count": {"example": 29, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "relative_frequency": {"example": 0.35365853658536583, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concepts and relative frequency."}, "default": {"description": "Unexpected error"}}, "summary": "Relative frequency between pairs of concepts", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["translator", "trapi"]}}, "/query": {"post": {"description": "Query the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\n    \nFor the subject node, the id must be specified (category is ignored).\n    \nFor the object node, both the id and category are optional. If id is specified for the object node, then the association between the two identified concepts is returned. If id is not specified and category is specified, the associations between the subject node and all concepts with the specified category are returned. If neither are specified, then the associations between the subject node and all concepts are returned.\nThe COHD data are natively represented using OMOP. COHD will attempt to map between Biolink and OMOP both in the input and response.\nAdditional behavior options can be controlled using the optional parameters in query_options.", "operationId": "query", "requestBody": {"content": {"application/json": {"example": "{\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": {\n        \"n00\": {\n          \"id\": \"MONDO:0021113\",\n          \"category\": \"biolink:Disease\"\n        },\n        \"n01\": {\n          \"category\": \"biolink:Procedure\"\n        }\n      },\n      \"edges\": {\n        \"e00\": {\n          \"predicate\": \"biolink:correlated_with\",\n          \"subject\": \"n00\",\n          \"object\": \"n01\"\n        }\n      }\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"max_results\": 50,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\n        \"ICD9\",\n        \"SNOMEDCT\",\n        \"DOID\"\n      ],\n      \"biolink:Drug\": [\n        \"RxNorm\"\n      ],\n      \"biolink:Procedure\": [\n        \"ICD10PCS\",\n        \"SNOMEDCT\"\n      ],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}", "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query COHD following NCATS Translator Reasoner Standard API", "tags": ["translator", "trapi"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}, "/0.9.3/query": {"post": {"description": "This endpoint is temporarily provided to support TRAPI 0.9.3 queries\nQuery the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\nFor the source node, the curie must be specified (type is ignored).\nFor the target node, both the curie and type are optional. If curie is specified for the target node, then the association between the two identified concepts is returned. If curie is not specified and type is specified, the associations between the source node and all concepts with the specified type are returned. If neither are specified, then the associations between the source node and all concepts are returned.\nCOHD will attempt to map the CURIE to an OMOP concept and the node type to an OMOP domain.", "operationId": "query093", "requestBody": {"content": {"application/json": {"example": "{\n  \"max_results\": 50,\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": [\n        {\n          \"id\": \"n00\",\n          \"curie\": \"MONDO:0021113\",\n          \"type\": \"biolink:Disease\"\n        },\n        {\n          \"id\": \"n01\",\n          \"type\": \"biolink:Procedure\"\n        }\n      ],\n      \"edges\": [\n        {\n          \"id\": \"e00\",\n          \"type\": \"biolink:correlated_with\",\n          \"source_id\": \"n00\",\n          \"target_id\": \"n01\"\n        }\n      ]\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\"ICD9\", \"SNOMEDCT\", \"DOID\"],\n      \"biolink:Drug\": [\"RxNorm\"],\n      \"biolink:Procedure\": [\"ICD10PCS\", \"SNOMEDCT\"],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}", "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "successful operation"}, "400": {"description": "Invalid status value"}}, "summary": "Query COHD following NCATS Translator Reasoner Standard API version 0.9.3", "tags": ["translator", "trapi"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "predicate": "biolink:correlated_with", "source": "Columbia Open Health Data KP", "supportBatch": false}], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}, "/translator/biolink_to_omop": {"post": {"description": "Map Biolink CURIEs to OMOP concepts", "operationId": "biolink_to_omop", "requestBody": {"content": {"application/json": {"example": "{\n    \"curies\": [\n        \"HP:0002907\",\n        \"MONDO:0001187\"\n    ]\n}", "schema": {"$ref": "#/components/schemas/CurieList"}}}, "description": "List of CURIEs", "required": true}, "responses": {"200": {"content": {"application/json": {"example": "{\n  \"MONDO:0001187\": {\n    \"distance\": 2,\n    \"omop_concept_id\": 197508,\n    \"omop_concept_name\": \"Malignant tumor of urinary bladder\"\n  }\n}", "schema": {"additionalProperties": {"description": "Mapping from OMOP concept to Biolink", "properties": {"distance": {"description": "mapping distance", "type": "integer"}, "omop_concept_id": {"type": "integer"}, "omop_concept_name": {"type": "string"}}, "type": "object"}}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}}, "summary": "Map from Biolink to OMOP", "tags": ["translator"]}}, "/translator/omop_to_biolink": {"post": {"description": "Map OMOP concepts to normalized Biolink nodes using SRI Node Normalizer.", "operationId": "omop_to_biolink", "requestBody": {"content": {"application/json": {"example": "{\n    \"omop_ids\": [\n        78472,\n        197508\n    ]\n}", "schema": {"$ref": "#/components/schemas/OmopList"}}}, "description": "List of OMOP IDs", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"type": "object"}, "example": "{\n  \"197508\": {\n    \"equivalent_identifiers\": [\n        {\n            \"identifier\": \"MONDO:0001187\",\n            \"label\": \"urinary bladder cancer\"\n        },\n        {\n            \"identifier\": \"DOID:11054\"\n        },\n        {\n            \"identifier\": \"OMIM:109800\"\n        },\n        {\n            \"identifier\": \"UMLS:C0005684\"\n        },\n        {\n            \"identifier\": \"NCIT:C9334\"\n        },\n        {\n            \"identifier\": \"SNOMEDCT:399326009\"\n        }\n    ],\n    \"id\": {\n        \"identifier\": \"MONDO:0001187\",\n        \"label\": \"urinary bladder cancer\"\n    },\n    \"type\": [\n        \"biolink:Disease\",\n        \"biolink:DiseaseOrPhenotypicFeature\",\n        \"biolink:BiologicalEntity\",\n        \"biolink:NamedThing\"\n    ]\n  }\n}", "type": "object"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized. Mapping from OMOP concept to Biolink normalized nodes. See [SRI Node Normalizer](https://nodenormalization-sri.renci.org/docs#/) for response format"}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}}, "summary": "Map from OMOP to Biolink", "tags": ["translator"]}}}, "security": [], "servers": [{"url": "https://covid.cohd.io/api/"}], "tags": [{"description": "COHD metadata", "name": "Metadata"}, {"description": "OMOP Common Data Model concepts", "name": "OMOP"}, {"description": "Clinical frequency data", "name": "Clinical Frequencies"}, {"description": "Estimated association between concepts", "name": "Concept Associations"}, {"description": "Concept-age distributions, concept-pair delta distributions, and temporal analyses", "name": "Temporal Clinical Data"}, {"description": "NCATS Biomedical Data Translator APIs", "name": "translator"}, {"description": "Implements the NCATS Translator Reasoner API standards", "name": "trapi"}], "x-externalResources": [{"x-description": "Department of Biomedical Informatics, Columbia University", "x-type": "website", "x-url": "https://www.dbmi.columbia.edu/"}, {"x-description": "Observational Health Data Sciences and Informatics", "x-type": "website", "x-url": "https://www.ohdsi.org/"}, {"x-description": "OMOP CDM", "x-type": "website", "x-url": "https://github.com/OHDSI/CommonDataModel/wiki"}]}, {"_id": "7f70cdfaeb801501da08dacc294e8b9f", "_meta": {"date_created": "2021-05-10T15:01:43.822541+00:00", "last_updated": "2021-05-14T07:05:05.667472+00:00", "url": "https://raw.githubusercontent.com/suihuanglab/spoke-kp/main/spoke-kp.yaml", "username": "brettasmi"}, "_score": 1.8854609, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:05+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:50.934402"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "example": {"id": "id"}, "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "example": {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "example": {"knowledge_graph": "", "query_graph": "", "results": [{"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}]}, "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "example": {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, "properties": {"object": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "predicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}}, "required": ["object", "predicate", "subject"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "example": {"edges": [{"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}, {"object": "biolink:PhenotypicFeature", "predicate": "biolink:interacts_with", "relations": ["inhibits", "activates"], "subject": "biolink:PhenotypicFeature"}], "nodes": {"key": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}}}, "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "example": {"id_prefixes": ["CHEMBL.COMPOUND", "INCHIKEY"]}, "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "example": {"id": "id"}, "properties": {"id": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["object", "subject"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "max_results": {"default": 200, "description": "The maximum number of results to return. Currently, this is hardcoded to 200 in the imProving Agent internals, but you can request fewer results for testing. The maximum number internally will certainly increase going forward.", "type": "integer"}, "message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"default": "==", "description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["edges", "nodes"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "example": {"description": "Success. 42 results found.", "logs": [{"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}, {"code": "code", "level": "", "message": "message", "timestamp": "2020-09-03T18:13:49+00:00"}], "message": {"knowledge_graph": "", "query_graph": "", "results": [{"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}]}, "status": "Success"}, "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message"}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "example": {"edge_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "node_bindings": {"key": [{"id": "id"}, {"id": "id"}]}, "score": 1.234}, "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "score": {"description": "The 'imProving Agent Score' that is the sum of the various scores calculated from PSEVs, KP metadata, etc. Individual scores should be visible as attributes on Nodes and Edges", "example": 1.234, "format": "float", "type": "number"}}, "required": ["edge_bindings", "node_bindings"], "type": "object"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "brett.smith@isbscience.org", "x-role": "responsible developer"}, "description": "SPOKE KP - an NIH NCATS Knowledge Provider to expose UCSF's SPOKE", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://spoke.rbvi.ucsf.edu/license.html", "title": "SPOKE KP", "version": "1.1.0-beta", "x-translator": {"biolink-version": "1.8.0", "component": "KP", "externalDocs": {"description": "Code repository", "url": "https://github.com/suihuanglab/spoke-kp"}, "team": ["imProving Agent"]}, "x-trapi": {"externalDocs": {"description": "NCATS Reasoner API Documentation", "url": "https://github.com/NCATSTranslator/ReasonerAPI/blob/master/docs/reference.md"}, "version": "1.1.0-beta"}}, "openapi": "3.0.1", "paths": {"/meta_knowledge_graph": {"get": {"operationId": "meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"], "x-openapi-router-controller": "spoke_kp.controllers.meta_knowledge_graph_controller"}}, "/predicates": {"get": {"deprecated": true, "operationId": "predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"], "x-openapi-router-controller": "spoke_kp.controllers.predicates_controller"}}, "/query": {"post": {"operationId": "query_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-openapi-router-controller": "spoke_kp.controllers.query_controller"}}}, "servers": [{"description": "dev", "url": "https://spokekp.healthdatascience.cloud/api/v1.1/"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "externalDocs": {"description": "Documentation for the reasoner query function", "url": "https://github.com/suihuanglab/spoke-kp"}, "name": "query"}, {"description": "NCATS Translator Component", "name": "translator"}, {"description": "NCATS TRAPI 1.1.x Compliant", "name": "trapi"}]}, {"_id": "70117385218edc9bc01633829011dfcf", "_meta": {"date_created": "2021-02-03T00:00:11.872122+00:00", "last_updated": "2021-05-14T07:05:12.867111+00:00", "slug": "cohd", "url": "https://raw.githubusercontent.com/WengLab-InformaticsResearch/cohd_api/master/cohd/cohd_oas3.yaml", "username": "CaseyTa"}, "_score": 1.6505369, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:12+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:10:03.557483"}, "components": {"callbacks": {}, "examples": {}, "headers": {}, "links": {}, "parameters": {}, "requestBodies": {}, "responses": {}, "schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands the key-value pair concept by including fields for additional metadata. These fields can be used to describe the source of the statement made in key-value pair of the attribute object, or describe the attribute's value itself including its semantic type, or a url providing additional information about it.", "properties": {"attribute_source": {"description": "The source of the core assertion made by the key-value pair of an attribute object. Use a CURIE or namespace designator for this resource where possible.", "example": "UniProtKB", "nullable": true, "type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/CURIE", "description": "The 'key' of the attribute object, holding a CURIE of an ontology property defining the attribute (preferably the CURIE of a Biolink association slot). This property captures the relationship asserted to hold between the value of the attribute, and the node or edge from  which it hangs. For example, that a value of '0.000153' represents a p-value supporting an edge, or that a value of 'ChEMBL' represents the original source of the knowledge expressed in the edge.", "example": "Biolink:has_p-value_evidence, Biolink:has_original_source"}, "description": {"description": "Human-readable description for the attribute and its value.", "example": "Assertion Authored By Dr. Trans L. Ator", "nullable": true, "type": "string"}, "original_attribute_name": {"description": "The term used by the original source of an attribute to describe the meaning or significance of the value it captures. This may be a column name in a source tsv file, or a key in a source json document for the field in the data that held the attribute's value. Capturing this information  where possible lets us preserve what the original source said. Note that the data type is string' but the contents of the field could also be a CURIE of a third party ontology term.", "example": "p-value", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 0.000153}, "value_type_id": {"$ref": "#/components/schemas/CURIE", "description": "CURIE describing the semantic type of an  attribute's value. Use a Biolink class if possible, otherwise a term from an external ontology. If a suitable CURIE/identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "value_url": {"description": "Human-consumable URL linking to a web document that provides additional information about an  attribute's value (not the node or the edge fom which it hangs).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}}, "required": ["attribute_type_id", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "CurieList": {"description": "list of CURIEs", "properties": {"curies": {"items": {"type": "string"}, "title": "list of CURIEs", "type": "array"}}, "type": "object"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "LogLevel": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "MetaEdge": {"additionalProperties": false, "description": "Edge in a meta knowledge map describing relationship between a subject Biolink class and an object Biolink class.", "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Object node category of this relationship edge.", "example": "biolink:Protein"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate", "description": "Biolink relationship between the subject and object categories.", "example": "biolink:affects"}, "relations": {"description": "Low-level relations from the underlying source.", "example": ["inhibits", "activates"], "items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity", "description": "Subject node category of this relationship edge.", "example": "biolink:ChemicalSubstance"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"description": "Knowledge-map representation of this TRAPI web service.", "properties": {"edges": {"description": "List of edges/predicates provided by this TRAPI web service.", "items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "description": "Collection of node categories provided by this TRAPI web service, indexed by Biolink class CURIEs.", "type": "object"}}, "type": "object"}, "MetaNode": {"additionalProperties": false, "description": "Description of a node category provided by this TRAPI web service.", "properties": {"id_prefixes": {"description": "List of CURIE prefixes for the node category that this TRAPI web service understands and accepts on the input.", "example": ["CHEMBL.COMPOUND", "INCHIKEY"], "items": {"type": "string"}, "minItems": 1, "type": "array"}}, "required": ["id_prefixes"], "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "type": "array"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "OmopList": {"description": "list of OMOP IDs", "properties": {"curies": {"items": {"type": "integer"}, "title": "list of OMOP IDs", "type": "array"}}, "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"constraints": {"description": "A list of contraints applied to a query edge. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "type": "array"}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "type": "array"}, "constraints": {"description": "A list of contraints applied to a query node. If there are multiple items, they must all be true (equivalent to AND)", "items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "type": "array"}, "ids": {"description": "CURIE identifier for this node", "example": ["OMIM:603903"], "items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "type": "array"}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "description": "The least critical level of logs to return", "nullable": true}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryConstraint": {"additionalProperties": false, "description": "Generic query constraint for a query node or query edge", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "description": "CURIE of the concept being constrained. For properties defined by the Biolink model this SHOULD be a biolink CURIE. otherwise, if possible, from the EDAM ontology. If a suitable CURIE does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_0844", "nullable": false}, "name": {"description": "Human-readable name or label for the constraint concept. If appropriate, it SHOULD be the term name of the CURIE used as the 'id'. This is redundant but required for human readability.", "example": "molecular mass", "nullable": false, "type": "string"}, "not": {"default": false, "type": "boolean"}, "operator": {"description": "Relationship between the database value and the constraint value for the specified id. The operators ==, >, and < mean is exactly equal to, is greater than, and is less than, respectively. The 'matches' operator indicates that the value is a regular expression to be evaluated. If value is a list type, then at least one evaluation must be true (equivalent to OR). This means that the == operator with a list acts like a SQL 'IN' clause. The 'not' property negates the operator such that not and == means 'not equal to' (or 'not in' for a list), and not > means <=, and not < means >=, and not matches means does not match. The '==' operator SHOULD NOT be used in a manner that describes an \"is a\" subclass relationship for the parent QNode.", "enum": ["==", ">", "<", "matches"], "type": "string"}, "unit_id": {"description": "CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) should be used if possible. The unit_id MUST be provided for (lists of) numerical values that correspond to a quantity that has units.", "example": "UO:0000222"}, "unit_name": {"description": "Term name that is associated with the CURIE of the units of the value or list of values in the 'value' property. The Units of Measurement Ontology (UO) SHOULD be used if possible. This property SHOULD be provided if a unit_id is provided. This is redundant but recommended for human readability.", "example": "kilodalton"}, "value": {"description": "Value of the attribute. May be any data type, including a list. If the value is a list and there are multiple items, at least one comparison must be true (equivalent to OR). If 'value' is of data type 'object', the keys of the object MAY be treated as a list. A 'list' data type paired with the '>' or '<' operators will encode extraneous comparisons, but this is permitted as it is in SQL and other languages.", "example": 57.0}}, "required": ["name", "id", "operator", "value"], "type": "object"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "QueryOptions": {"description": "Additional query options that apply to COHD", "properties": {"biolink_only": {"description": "Whether to only include nodes in the knowledge graph and results that are Biolink compliant (as defined by ontology_targets). Default: true", "example": true, "type": "boolean"}, "confidence_interval": {"description": "Criteria that the results are significant to the specified criteria level. This only applies when the method is 'obsExpRatio'. Default: not required.", "example": 0.99, "type": "number"}, "dataset_id": {"description": "The COHD dataset to query", "example": 3, "type": "integer"}, "local_oxo": {"description": "Whether to use the local implementation of OxO or the real implementation of OxO. Note, the local OxO implementation may contain outdated definitions and xrefs but runs faster. The real OxO has the most updated definitions and xrefs, but is slower (~1-2 seconds/concept). Default: true", "example": false, "type": "boolean"}, "max_results": {"description": "The maximum number of results to be returned.", "example": 10, "type": "integer"}, "method": {"description": "Type of association method to perform: 'obsExpRatio' (default), 'relativeFrequency', or 'chiSquare'", "example": "obsExpRatio", "type": "string"}, "min_cooccurrence": {"description": "Criteria that the results have a minimum co-occurrence count. Default: not required.", "example": 50, "type": "integer"}, "ontology_targets": {"description": "DEPRECATED: COHD is now attempting to map based on the Biolink Model yaml and SRI Node Normalizer.\nCOHD can attempt to map from OMOP concepts to a target ontology. You can identify target ontologies for each Biolink node type. The keys should be Biolink node types (e.g., 'biolink:Disease'). The values should be lists of target ontology prefixes, e.g., ['ICD9', 'UMLS', 'DOID']. An emtpy list indicates not to perform mapping for the specified type. Use the key '_DEFAULT' to indicate a default list of target ontologies for any unspecified types. If a domain is specified, it will override the '_DEFAULT' list. Target ontology prefixes should match the Biolink yaml but may include prefixes outside of Biolink.\n\nIf ontology_targets is not provided, COHD API will attempt mappings based on the prefixes defined in the Biolink yaml.\n", "example": {"_DEFAULT": [], "biolink:Disease": ["ICD9", "SNOMEDCT", "DOID"], "biolink:Drug": ["RxNorm"], "biolink:Procedure": ["ICD10PCS", "SNOMEDCT"]}, "type": "object"}, "threshold": {"description": "Criteria threshold to apply to the association metric. chiSquare: p-value < threshold. obsExpRatio: abs(ln_ratio) >= threshold. relativeFrequency: relative_frequency >= threshold.", "example": 0.5, "type": "number"}}, "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}, "securitySchemes": {}, "x-bte-kgs-response-mappings": {"chi_square": {"biolink:OMOP": "results.concept_id_2", "biolink:chi_squared_statistic": "results.chi_square", "biolink:has_count": "results.n_c1_c2", "biolink:name": "results.concept_2_name", "biolink:p_value": "results.adj_p-value"}, "obs_exp_ratio": {"biolink:OMOP": "results.concept_id_2", "biolink:has_count": "results.observed_count", "biolink:name": "results.concept_2_name"}, "relative_frequency": {"biolink:OMOP": "results.concept_id_2", "biolink:has_count": "results.concept_pair_count", "biolink:has_quotient": "results.relative_frequency", "biolink:has_total": "results.concept_2_count", "biolink:name": "results.concept_2_name"}}}, "externalDocs": {"description": "Documentation for the NCATS Biomedical Translator Reasoners web services", "url": "https://github.com/NCATSTranslator/ReasonerAPI"}, "info": {"contact": {"email": "ct2865@cumc.columbia.edu", "name": "Casey Ta", "url": "http://chunhualab.org/", "x-role": "responsible developer"}, "description": "The Columbia Open Health Data (COHD) API provides access to counts and frequencies (i.e., EHR prevalence) of conditions, procedures, drug exposures, and patient demographics, and the co-occurrence frequencies between them. Count and frequency data were derived from the [Columbia University Medical Center's](http://www.cumc.columbia.edu/) [OHDSI](https://www.ohdsi.org/) database including inpatient and outpatient data. Counts are the number of patients associated with the concept, e.g., diagnosed with a condition, exposed to a drug, or who had a procedure. Frequencies are the number of unique patients associated with the concept divided by the total number of patients in the dataset, i.e., prevalence in the electronic health records. To protect patient privacy, all concepts and pairs of concepts where the count <= 10 were excluded, and counts were randomized by the Poisson distribution.         \n\nFour datasets are available: \n1) 5-year non-hierarchical dataset: Includes clinical data from 2013-2017  \n2) lifetime non-hierarchical dataset: Includes clinical data from all dates  \n3) 5-year hierarchical dataset: Counts for each concept include patients from descendant concepts. Includes clinical data from 2013-2017.\n4) BETA! Temporal co-occurrence data\n\nIn the 5-year hierarchical data set, the counts for each concept include the patients from all descendant concepts. For example, the count for ibuprofen (ID 1177480) includes patients with Ibuprofen 600 MG Oral Tablet (ID 19019073 patients), Ibuprofen 400 MG Oral Tablet (ID 19019072), Ibuprofen 20 MG/ML Oral Suspension (ID 19019050), etc. \n\nWhile the lifetime dataset captures a larger patient population and range of concepts, the 5-year dataset has better underlying data consistency. \n\nClinical concepts (e.g., conditions, procedures, drugs) are coded by their standard concept ID in the [OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki). API methods are provided to map to/from other vocabularies supported in OMOP and other ontologies using the EMBL-EBI Ontology Xref Service (OxO). \n\n\nThe following resources are available through this API: \n\n\n1. Metadata: Metadata on the COHD database, including dataset descriptions, number of concepts, etc. \n\n\n2. OMOP: Access to the common vocabulary for name and concept identifier mapping\n\n\n3. Clinical Frequencies: Access to the counts and frequencies of conditions, procedures, and drug exposures, and the associations between them. Frequency was determined as the number of patients with the code(s) / total number of patients. \n\n\n4. Concept Associations: Inferred associations between concepts using chi-square analysis, ratio between observed to expected frequency, and relative frequency. \n\n\nA [Python notebook](https://github.com/WengLab-InformaticsResearch/cohd_api/blob/master/notebooks/COHD_API_Example.ipynb) demonstrates simple examples of how to use the COHD API.\n\n\nCOHD was developed at the [Columbia University Department of Biomedical Informatics](https://www.dbmi.columbia.edu/) as a collaboration between the [Weng Lab](http://people.dbmi.columbia.edu/~chw7007/), [Tatonetti Lab](http://tatonettilab.org/), and the [NCATS Biomedical Data Translator](https://ncats.nih.gov/translator) program (Red Team). This work was supported in part by grants: NCATS OT3TR002027, NLM R01LM009886-08A1, and NIGMS R01GM107145.\n\nThe following external resources may be useful:  \n[OHDSI](https://www.ohdsi.org/)  \n[OMOP Common Data Model](https://github.com/OHDSI/CommonDataModel/wiki)  \n[Athena](http://athena.ohdsi.org) (OMOP vocabularies, search, concept relationships, concept hierarchy)  \n[Atlas](http://www.ohdsi.org/web/atlas/) (OMOP vocabularies, search, concept relationships, concept hierarchy, concept sets)      \n", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "http://cohd.nsides.io/terms/", "title": "Columbia Open Health Data (COHD)", "version": "4.0.0", "x-accessRestriction": "none", "x-implementationLanguage": "Python", "x-translator": {"biolink-version": "1.8.2", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Clinical Data Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.1", "paths": {"/metadata/datasets": {"get": {"description": "Returns a list of datasets, including dataset ID, name, and description.", "operationId": "datasets", "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"dataset_description": {"example": "5-year non-hierarchical dataset: Includes clinical data from 2013-2017", "type": "string"}, "dataset_id": {"example": 1, "type": "integer"}, "dataset_name": {"example": "5-year non-hierarchical", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of dataset descriptions."}, "default": {"description": "Unexpected error"}}, "summary": "Enumerates the datasets available in COHD", "tags": ["Metadata"]}}, "/metadata/domainCounts": {"get": {"description": "Returns a list of domains and the number of concepts in each domain.", "operationId": "domainCounts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 1000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of domain counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of concepts in each domain", "tags": ["Metadata"]}}, "/metadata/domainPairCounts": {"get": {"description": "Returns a list of pairs of domains and the number of pairs of concepts in each.", "operationId": "domainPairCounts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 1000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id_1": {"example": "Condition", "type": "string"}, "domain_id_2": {"example": "Drug", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of domain pair counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of pairs of concepts in each pair of domains", "tags": ["Metadata"]}}, "/metadata/patientCount": {"get": {"description": "Returns the number of patients in the dataset.", "operationId": "patientCount", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"count": {"example": 100000, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of patient counts."}, "default": {"description": "Unexpected error"}}, "summary": "The number of patients in the dataset", "tags": ["Metadata"]}}, "/omop/concepts": {"get": {"description": "Returns the OMOP concept names and domains for the given list of concept IDs.", "operationId": "concepts", "parameters": [{"description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"", "example": "192855,2008271", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "92546004", "type": "string"}, "concept_id": {"example": 192855, "type": "integer"}, "concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Concept definitions from concept ID", "tags": ["OMOP"]}}, "/omop/findConceptIDs": {"get": {"description": "Searches the OMOP concept table for concept names similar to the query. Returns a list of concepts, including their names and IDs, sorted in decreasing order by the concept's prevalence. ", "operationId": "findConceptIDs", "parameters": [{"description": "The name of the concept to search for, e.g., \"cancer\" or \"ibuprofen\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"description": "The dataset to reference when sorting concepts by their frequency. Default: 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "The domain (e.g., \"Condition\", \"Drug\", \"Procedure\") to restrict the search to. If not specified, the search will be unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Condition", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "The minimum concept count (inclusive) to include a concept in the search results. Setting the min_count to 0 will cause findConceptIDs to return all matching standard OMOP concepts (this can be slow). Setting the min_count to 1 will cause findConceptIDs to only return concepts with count data (much faster). Default: 1.", "example": 1, "in": "query", "name": "min_count", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "92546004", "type": "string"}, "concept_count": {"example": 368, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Search for OMOP concepts by name and domain", "tags": ["OMOP"]}}, "/omop/conceptAncestors": {"get": {"description": "Retrieves the given concept's hierarchical ancestors and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. For more information, see the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).", "operationId": "conceptAncestors", "parameters": [{"description": "An OMOP concept ID, e.g., 19019073", "example": 19019073, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm (only and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted", "example": "RxNorm", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted", "example": "Ingredient", "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}, {"description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)", "example": 3, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"ancestor_concept_id": {"example": 1177480, "type": "integer"}, "concept_class_id": {"example": "Ingredient", "type": "string"}, "concept_code": {"example": "5640", "type": "string"}, "concept_count": {"example": 233514, "type": "integer"}, "concept_name": {"example": "Ibuprofen", "type": "string"}, "domain_id": {"example": "Drug", "type": "string"}, "max_levels_of_separation": {"example": 2, "type": "integer"}, "min_levels_of_separation": {"example": 2, "type": "integer"}, "standard_concept": {"example": "S", "type": "string"}, "vocabulary_id": {"example": "RxNorm", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Retrieve the concept's hierarchical ancestors", "tags": ["OMOP"]}}, "/omop/conceptDescendants": {"get": {"description": "Retrieves the given concept's hierarchical descendants and their counts. The hierarchical definitions were derived from the OMOP concept_ancestor table. See the documentation on OMOP's concept_ancestor table on [ohdsi.org](http://www.ohdsi.org/web/wiki/doku.php?id=documentation:cdm:concept_ancestor) and [GitHub](https://github.com/OHDSI/CommonDataModel/wiki/CONCEPT_ANCESTOR).", "operationId": "conceptDescendants", "parameters": [{"description": "An OMOP concept ID, e.g., 313217", "example": 313217, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary_id to restrict ancestors to. For conditions, SNOMED and MedDRA are used. For drugs, RxNorm and ATC are used. For procedures, SNOMED, MedDRA, and ICD10PCS are used. Default: unrestricted", "example": null, "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "The concept_class_id to restrict ancestors to. Only certain hierarchical concept_class_ids are used in each vocabuarly: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Default: unrestricted", "example": null, "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}, {"description": "The dataset_id to retrieve counts from. Default: 3 (5-year hierarchical data set)", "example": 3, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_code": {"example": "49436004", "type": "string"}, "concept_count": {"example": 53272, "type": "integer"}, "concept_name": {"example": "Atrial fibrillation", "type": "string"}, "descendant_concept_id": {"example": 313217, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}, "max_levels_of_separation": {"example": 0, "type": "integer"}, "min_levels_of_separation": {"example": 0, "type": "integer"}, "standard_concept": {"example": "S", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Retrieve the concept's hierarchical descendants", "tags": ["OMOP"]}}, "/omop/mapToStandardConceptID": {"get": {"description": "Uses the OMOP concept_relationship table to map from a non-standard concept code (e.g., ICD9CM 715.3) to a standard OMOP concept ID (e.g., 72990). This method may return multiple results if vocabulary_id is not specified and the concept_code is not unique across vocabularies. If both concept_code and vocabulary_id are specified, then 1 result will be returned at most. ", "operationId": "mapToStandardConceptID", "parameters": [{"description": "The concept code to map from, e.g., 715.3", "example": "715.3", "in": "query", "name": "concept_code", "required": true, "schema": {"type": "string"}}, {"description": "The vocabulary (e.g., \"ICD9CM\") that the concept code belongs to. If this parameter is not specified, the method will return mappings from any source vocabulary with matching concept code. See /omop/vocabularies for the list of supported vocabularies.", "example": "ICD9CM", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"source_concept_code": {"example": "715.3", "type": "string"}, "source_concept_id": {"example": 44834979, "type": "integer"}, "source_concept_name": {"example": "Osteoarthrosis, localized, not specified whether primary or secondary", "type": "string"}, "source_vocabulary_id": {"example": "ICD9CM", "type": "string"}, "standard_concept_id": {"example": 72990, "type": "integer"}, "standard_concept_name": {"example": "Localized osteoarthrosis uncertain if primary OR secondary", "type": "string"}, "standard_domain_id": {"example": "Condition", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Map from a non-standard concept code to a standard OMOP concept ID", "tags": ["OMOP"]}}, "/omop/mapFromStandardConceptID": {"get": {"description": "Uses the OMOP concept_relationship table to map from a standard concept ID (e.g., 72990) to concept code(s) (e.g., ICD9CM 715.3, 715.31, 715.32, etc.). An OMOP standard concept ID may map to many concepts in the external vocabulary.", "operationId": "mapFromStandardConceptID", "parameters": [{"description": "The standard OMOP concept id to map from, e.g., 72990", "example": 72990, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "The vocabulary (e.g., \"ICD9CM\") to map to. If this parameter is not specified, the method will return mappings to any matching vocabularies. See /omop/vocabularies for the list of supported vocabularies.", "example": "ICD9CM", "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "4-dig nonbill code", "type": "string"}, "concept_code": {"example": "715.3", "type": "string"}, "concept_id": {"example": 44834979, "type": "integer"}, "concept_name": {"example": "Osteoarthrosis, localized, not specified whether primary or secondary", "type": "string"}, "domain_id": {"example": "Condition", "type": "string"}, "standard_concept": {"example": null, "type": "string"}, "vocabulary_id": {"example": "ICD9CM", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Map from a standard concept ID to concept code(s) in an external vocabulary", "tags": ["OMOP"]}}, "/omop/vocabularies": {"get": {"description": "List of vocabulary_ids. Useful if you need to use /omop/mapToStandardConceptID to map a concept code from a source vocabulary to the OMOP standard vocabulary.", "operationId": "vocabularies", "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of vocabularies."}, "default": {"description": "Unexpected error"}}, "summary": "List of vocabularies", "tags": ["OMOP"]}}, "/omop/xrefToOMOP": {"get": {"description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method attempts to use OxO to map from the original ontology to an intermediate ontology that is included in OMOP (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OMOP mappings to the standard concepts. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.", "operationId": "xrefToOMOP", "parameters": [{"description": "Compact URI (CURIE) of the concept to map, e.g., DOID:8398", "example": "DOID:8398", "in": "query", "name": "curie", "required": true, "schema": {"type": "string"}}, {"description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from the original concept to an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept. One additional step may be taken by the COHD API to map to the OMOP standard concept. Default: 2.", "example": 2, "in": "query", "name": "distance", "required": false, "schema": {"type": "integer"}}, {"description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.", "example": false, "in": "query", "name": "local", "required": false, "schema": {"type": "boolean"}}, {"description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping based on path distances. Default: false.", "example": false, "in": "query", "name": "recommend", "required": false, "schema": {"type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"intermediate_oxo_id": {"example": "ICD9CM:715.3", "type": "string"}, "intermediate_oxo_label": {"example": "", "type": "string"}, "omop_concept_name": {"example": "Localized osteoarthrosis uncertain if primary OR secondary", "type": "string"}, "omop_distance": {"example": 1, "type": "integer"}, "omop_domain_id": {"example": "Condition", "type": "string"}, "omop_standard_concept_id": {"example": 72990, "type": "integer"}, "oxo_distance": {"example": 1, "type": "integer"}, "source_oxo_id": {"example": "DOID:8398", "type": "string"}, "source_oxo_label": {"example": "osteoarthritis", "type": "string"}, "total_distance": {"example": 2, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of mappings from external concepts to OMOP concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service", "tags": ["OMOP"]}}, "/omop/xrefFromOMOP": {"get": {"description": "Attempts to map a concept from an external ontology to an OMOP standard concept ID using the EMBL-EBI Ontology Xref Service (OxO): https://www.ebi.ac.uk/spot/oxo/index. This method maps from the OMOP standard concept to an intermediate vocabulary included is OxO (ICD9CM, ICD10CM, SNOMEDCT, and MeSH), then uses the OxO API to map to other ontologies. Multiple mappings may be returned. Results are sorted by total_distance (OxO distance + OMOP distance) in ascending order.", "operationId": "xrefFromOMOP", "parameters": [{"description": "OMOP standard concept_id to map, e.g., 192855", "example": 192855, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "Target ontologies for OxO. Comma separated target prefixes, e.g., \"DOID,UMLS\"", "example": "UMLS", "in": "query", "name": "mapping_targets", "required": false, "schema": {"type": "string"}}, {"description": "Mapping distance for OxO. Note: this is the distance used in the OxO API to map from an ICD9CM, ICD10CM, SNOMEDCT, or MeSH concept to the desired ontology. One additional step may be taken by the COHD API to map to the OMOP standard concept to ICD9CM, ICD10CM, SNOMEDCT, or MeSH. Default: 2.", "example": 2, "in": "query", "name": "distance", "required": false, "schema": {"type": "integer"}}, {"description": "COHD can either call the OxO API or use the local implementation of OxO. The full call to the OxO API will have the most updated mappings and term definitions, but is slower. The local implementation of OxO is faster but may contain outdated mappings and term definitions. If the parameter is false, COHD will call the full OxO API. If the parameter is true, COHD will use the local implementation.  Default: false.", "example": false, "in": "query", "name": "local", "required": false, "schema": {"type": "boolean"}}, {"description": "By default (false), COHD returns all mappings found. If true, COHD will recommend a mapping for each target based on path distances. Default: false.", "example": false, "in": "query", "name": "recommend", "required": false, "schema": {"type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"intermediate_omop_concept_code": {"example": "92546004", "type": "string"}, "intermediate_omop_concept_id": {"example": 192855, "type": "integer"}, "intermediate_omop_concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "intermediate_omop_vocabulary_id": {"example": "SNOMED", "type": "string"}, "intermediate_oxo_curie": {"example": "SNOMEDCT:92546004", "type": "string"}, "intermediate_oxo_label": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "omop_distance": {"example": 0, "type": "integer"}, "oxo_distance": {"example": 1, "type": "integer"}, "source_omop_concept_code": {"example": "92546004", "type": "string"}, "source_omop_concept_id": {"example": 192855, "type": "integer"}, "source_omop_concept_name": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "source_omop_vocabulary_id": {"example": "SNOMED", "type": "string"}, "target_curie": {"example": "UMLS:C0154091", "type": "string"}, "target_label": {"example": "Cancer in situ of urinary bladder", "type": "string"}, "total_distance": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of mappings from OMOP concepts to external concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Cross-reference from an ontology to OMOP standard concepts using the Ontology Xref Service", "tags": ["OMOP"]}}, "/frequencies/singleConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of individual concepts. Multiple concepts may be requested in a comma separated list.", "operationId": "singleConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "A comma separated list of OMOP concept ids, e.g., \"192855\" or \"192855,2008271\"", "example": "192855", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_count": {"example": 368, "type": "integer"}, "concept_frequency": {"example": 0.0002055371025188907, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of single concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequency of individual concepts", "tags": ["Clinical Frequencies"]}}, "/frequencies/pairedConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of a pair of concepts.", "operationId": "pairedConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "A comma pair of OMOP concept ids, e.g., \"192855,2008271\"", "example": "192855,2008271", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_count": {"example": 10, "type": "integer"}, "concept_frequency": {"example": 5.585247351056813e-06, "type": "integer"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2008271, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequency of a pair of concepts", "tags": ["Clinical Frequencies"]}}, "/frequencies/associatedConceptFreq": {"get": {"description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id. Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.", "operationId": "associatedConceptFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "q", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"associated_concept_id": {"example": 19041324, "type": "integer"}, "associated_concept_name": {"example": "Acetaminophen 325 MG Oral Tablet [Tylenol]", "type": "string"}, "associated_domain_id": {"example": "Drug", "type": "string"}, "concept_count": {"example": 277, "type": "integer"}, "concept_frequency": {"example": 0.0001547113516242737, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of associated concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequencies of all pairs of concepts given a concept id", "tags": ["Clinical Frequencies"]}}, "/frequencies/associatedConceptDomainFreq": {"get": {"description": "Retrieves observed clinical frequencies of all pairs of concepts given a concept id restricted by domain of the associated concept_id.  Results are returned in descending order of paired concept count. Note that the largest paired concept counts are often dominated by associated concepts with high prevalence.", "operationId": "associatedConceptDomainFreq", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Procedure", "in": "query", "name": "domain", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"associated_concept_id": {"example": 2211361, "type": "integer"}, "associated_concept_name": {"example": "Radiologic examination, chest, 2 views, frontal and lateral", "type": "string"}, "associated_domain_id": {"example": "Procedure", "type": "string"}, "concept_count": {"example": 257, "type": "integer"}, "concept_frequency": {"example": 0.00014354085692216007, "type": "integer"}, "concept_id": {"example": 192855, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of associated concept frequencies."}, "default": {"description": "Unexpected error"}}, "summary": "Clinical frequencies of all pairs of concepts given a concept id", "tags": ["Clinical Frequencies"]}}, "/frequencies/mostFrequentConcepts": {"get": {"description": "Retrieves the most frequent concepts.", "operationId": "mostFrequentConcepts", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "(Optional) The number of concepts to retreieve, e.g., 100. 0 or unspecified will return all matching concepts.", "example": 100, "in": "query", "name": "q", "required": false, "schema": {"type": "integer"}}, {"description": "(Optional) The domain_id to restrict to, e.g., \"Condition\", \"Drug\", \"Procedure\". See /metadata/domainCounts for a list of valid domain IDs.", "example": "Condition", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "(Optional) The vocabulary_id(s) to restrict to, e.g., \"SNOMED\", \"MedDRA\", \"RxNorm\", \"ATC\" etc. Comma separated to include multiple vocabularies, e.g., \"SNOMED,MedDRA\". Default: unrestricted", "example": null, "in": "query", "name": "vocabulary_id", "required": false, "schema": {"type": "string"}}, {"description": "(Optional) The concept_class_id(s) to restrict to. concept_class_ids are specific to each vocabulary, e.g.,: [ATC](https://en.wikipedia.org/wiki/Anatomical_Therapeutic_Chemical_Classification_System) {ATC 1st, ATC 2nd, ATC 3rd, ATC 4th, ATC 5th}; [MedDRA](https://en.wikipedia.org/wiki/MedDRA) {PT, HLT, HLGT, SOC}; [RxNorm](https://www.nlm.nih.gov/research/umls/rxnorm/docs/2015/appendix5.html) {Ingredient, Clinical Drug Form, Clinical Drug Comp, Clinical Drug}. Comma separated to include multiple concept_class_ids, e.g., \"PT,HLT\". Default: unrestricted", "example": null, "in": "query", "name": "concept_class_id", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_class_id": {"example": "Clinical Finding", "type": "string"}, "concept_count": {"example": 233790, "type": "integer"}, "concept_frequency": {"example": 0.1305774978203572, "type": "integer"}, "concept_id": {"example": 320128, "type": "integer"}, "concept_name": {"example": "Essential hypertension", "type": "string"}, "dataset_id": {"example": 1, "type": "integer"}, "domain_id": {"example": "Condition", "type": "string"}, "vocabulary_id": {"example": "SNOMED", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of most frequent concepts."}, "default": {"description": "Unexpected error"}}, "summary": "Most frequent concepts [by domain]", "tags": ["Clinical Frequencies"]}}, "/association/chiSquare": {"get": {"description": "Returns the chi-square statistic and p-value between pairs of concepts. Results are returned in descending order of the chi-square statistic. Note that due to large sample sizes, the chi-square can become very large. \n\nThe expected frequencies for the chi-square analysis are calculated based on the single concept frequencies and assuming independence between concepts. P-value is calculated with 1 DOF. \n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "chiSquare", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If this parameter is specified, then the chi-square between concept_id_1 and concept_id_2 is returned. If this parameter is not specified, then a list of chi-squared results between concept_id_1 and other concepts is returned.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"adj_p-value": {"description": "Bonferonni adjusted p-value, adjusted with the total number of pairs of concepts in the dataset.", "example": 0.0314, "type": "number"}, "chi_square": {"example": 370026.1780081638, "type": "integer"}, "concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Instillation of therapeutic substance into bladder", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 4021588, "type": "integer"}, "dataset_id": {"example": 3, "type": "integer"}, "p-value": {"example": 0.0314, "type": "number"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of concept pairs and chi-squared values."}, "default": {"description": "Unexpected error"}}, "summary": "Chi-square analysis on pairs of concepts", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/chi_square"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/association/obsExpRatio": {"get": {"description": "Returns the natural logarithm of the ratio between the observed count and expected count. Expected count is calculated from the single concept frequencies and assuming independence between the concepts. Results are returned in descending order of ln_ratio.\n\nexpected_count = Count_1_and_2 * num_patients / (Count_1 * Count_2)\n\nln_ratio = ln(expected_count)\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Results for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "obsExpRatio", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}, {"description": "The confidence level used for calculating confidence intervals (default 0.99).", "example": 0.99, "in": "query", "name": "confidence", "required": false, "schema": {"type": "number"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Closed [transurethral] biopsy of bladder", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2003784, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "expected_count": {"example": 0.060838982345591645, "type": "integer"}, "ln_ratio": {"example": 7.561698473261244, "type": "integer"}, "observed_count": {"example": 117, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concepts and observed-expected frequency ratio."}, "default": {"description": "Unexpected error"}}, "summary": "Observed Count / Expected Count", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "confidence": 0.99, "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/obs_exp_ratio"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/association/relativeFrequency": {"get": {"description": "Calculates the relative frequency (i.e., conditional probability) between pairs of concepts. Results are returned in descending order of relative frequency. Note that due to the randomization of the counts, the calculated relative frequencies can exceed the limit of 1.0.\n\nRelative Frequency = Count_1_and_2 / Count_2\n\nThis method has overloaded behavior based on the specified parameters:\n\n1) concept_id_1 and concept_id_2: Result for the pair (concept_id_1, concept_id_2)\n2) concept_id_1: Results for all pairs of concepts that include concept_id_1\n3) concept_id_1 and domain: Results for all pairs of concepts including concept_id_1 and where concept_id_2 belongs to the specified domain\n", "operationId": "relativeFrequency", "parameters": [{"description": "The dataset_id of the dataset to query. Default dataset is the 5-year dataset.", "example": 1, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"192855\"", "example": 192855, "in": "query", "name": "concept_id_1", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"2008271\". If concept_id_2 is unspecified, then this method will return all pairs of concepts with concept_id_1.", "example": 2008271, "in": "query", "name": "concept_id_2", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP domain id, e.g., \"Condition\", \"Drug\", \"Procedure\", etc., to restrict concept_id_2 (the base concept) to. If this parameter is not specified, then the domain is unrestricted. See /metadata/domainCounts for a list of valid domain IDs.", "example": "Drug", "in": "query", "name": "domain", "required": false, "schema": {"type": "string"}}, {"description": "An OMOP concept_class_id, e.g., \"Ingredient\", to restrict the associated concept (concept_id_2) to. If this parameter is not specified, then the concept_class_id is unrestricted. Example useful usage would be to have domain=\"Drug\" and concept_class=\"Ingredient\"", "example": "Ingredient", "in": "query", "name": "concept_class", "required": false, "schema": {"type": "string"}}, {"description": "The confidence level used for calculating confidence intervals (default 0.99).", "example": 0.99, "in": "query", "name": "confidence", "required": false, "schema": {"type": "number"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"concept_2_count": {"example": 82, "type": "integer"}, "concept_2_domain": {"example": "Procedure", "type": "string"}, "concept_2_name": {"example": "Radical cystectomy", "type": "string"}, "concept_id_1": {"example": 192855, "type": "integer"}, "concept_id_2": {"example": 2003805, "type": "integer"}, "concept_pair_count": {"example": 29, "type": "integer"}, "dataset_id": {"example": 1, "type": "integer"}, "relative_frequency": {"example": 0.35365853658536583, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "An array of paired concepts and relative frequency."}, "default": {"description": "Unexpected error"}}, "summary": "Relative frequency between pairs of concepts", "tags": ["Concept Associations"], "x-bte-kgs-operations": [{"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Disease"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Condition"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}, {"inputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "outputs": [{"id": "biolink:OMOP", "semantic": "biolink:Drug"}], "parameters": {"concept_id_1": "{inputs[0]}", "dataset_id": 3, "domain": "Drug"}, "predicate": "biolink:correlated_with", "response_mapping": {"$ref": "#/components/x-bte-kgs-response-mappings/relative_frequency"}, "source": "Columbia Open Health Data KP", "supportBatch": false}]}}, "/temporal/conceptAgeCounts": {"get": {"description": "Counts of ages when concepts were first observed in a patient. Different concepts will have different bin_widths. All binning schemes start with age 0, and no bin starts with an age > 90. The largest age bin includes all ages greater or equal to the starting age of the bin. For example, with a bin_width of 4, the ages of each bin are [0-3, 4-7, 8-11, ..., 84-87, 88+]. Counts in each bin are independently perturbed with a Poisson distribution. Counts < 10 are suppressed, represented by the value 1. Counts of 0 are reported as 0.\n", "operationId": "conceptAgeCounts", "parameters": [{"description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.", "example": 4, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"313217\"", "example": 313217, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"bin_width": {"example": 2, "type": "integer"}, "concept_id": {"example": 313217, "type": "integer"}, "concept_name": {"example": "Atrial fibrillation", "type": "string"}, "counts": {"description": "Array of counts ordered from 0 to the largest bin.", "items": {"example": 9000, "type": "integer"}, "type": "array"}, "dataset_id": {"example": 4, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "The concept's age distribution"}, "default": {"description": "Unexpected error"}}, "summary": "Counts of ages when concepts were first observed in a patient", "tags": ["Temporal Clinical Data"]}}, "/temporal/findSimilarAgeDistributions": {"get": {"description": "Finds concepts with a similar concept-age distribution as with the desired concept_id.\nUses Jaccard similarity to compare concept-age distributions\n", "operationId": "findSimilarAgeDistributions", "parameters": [{"description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.", "example": 4, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"313217\"", "example": 313217, "in": "query", "name": "concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "True: excludes concepts that frequently co-occur (0-day delta) with concept_id. False: do not exclude. Default is True.", "example": true, "in": "query", "name": "exclude_related", "required": false, "schema": {"type": "boolean"}}, {"description": "(Optional) True: restricts potentially similar concepts to the same type of concept as concept_id, e.g.,  the same domain_id for Conditions, Drugs, and Procedures. For drugs, if the concept is an ingredient, also restricts concept_class_id to 'Ingredient'.\n", "example": true, "in": "query", "name": "restrict_type", "required": false, "schema": {"type": "boolean"}}, {"description": "Minimum threshold for similarity. Range is 0-1, higher is more similar. Default 0.7.", "example": 0.7, "in": "query", "name": "threshold", "required": false, "schema": {"type": "number"}}, {"description": "Maximum number of concepts to return at each bin width. Default 20.", "example": 20, "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"bin_width": {"example": 2, "type": "integer"}, "concept_id": {"example": 313217, "type": "integer"}, "concept_name": {"example": "Atrial fibrillation", "type": "string"}, "counts": {"description": "Array of counts ordered from 0 to the largest bin.", "items": {"example": 9000, "type": "integer"}, "type": "array"}, "dataset_id": {"example": 4, "type": "integer"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "The concept's age distribution"}, "default": {"description": "Unexpected error"}}, "summary": "Find concepts with a similar concept-age distribution", "tags": ["Temporal Clinical Data"]}}, "/temporal/conceptPairDeltaCounts": {"get": {"description": "Counts of time differences (deltas) between when a pair of concepts were first observed in a patient. given a pair of concepts (source_concept and target_concept), a positive delta indicates that source_concept was  observed before target_concept. Likewise, a negaitve delta indicates that source_concept was observed after target_concept. Performing this query with the two concepts swapped will produce a mirrored distribution.   \n  \nBin widths grow exponentially, and different concept pairs will have different bin_widths. The binning schemes are as follows (delta bins with negative values mirror the positive delta bins):  \n  bin_width=1: [0 day, 1 day, 2-3 days, 4-7 days, 8-15 days, ..., 2048-4095 days (5.6-11.2y), and 4096+ days\n  (11.2+ years)].  \n  bin_width=2: [0 day, 1-3 days, 4-15 days, 16-63 days, ..., 256-1023 days, 1024+ days (2.8+ years)]  \n  bin_width=4: [0 day, 1-15 days, 16-255 days, 256+ days]  \n  bin_width=8: [0 day, 1-255 days, 256+ days]  \n  bin_width=16: [0 day, 1+ days]  \n  The 0-day bin never gets incorporated into larger bins.\n    \nCounts in each bin are independently perturbed with a Poisson distribution. Counts < 10 are suppressed, represented by the value 1. Counts of 0 are reported as 0.\n", "operationId": "conceptPairDeltaCounts", "parameters": [{"description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set. ", "example": 4, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"312327\"", "example": 312327, "in": "query", "name": "source_concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"313217\"", "example": 313217, "in": "query", "name": "target_concept_id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"results": {"items": {"properties": {"bin_width": {"example": 2, "type": "integer"}, "counts": {"description": "Array of counts ordered from the most negative bin to the largest positive bin.", "items": {"example": 9000, "type": "integer"}, "type": "array"}, "dataset_id": {"example": 4, "type": "integer"}, "n": {"example": 6, "type": "integer"}, "source_concept_id": {"example": 312327, "type": "integer"}, "source_concept_name": {"example": "Acute myocardial infarction", "type": "string"}, "target_concept_id": {"example": 313217, "type": "integer"}, "target_concept_name": {"example": "Atrial fibrillation", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "The concept pair's delta distribution"}, "default": {"description": "Unexpected error"}}, "summary": "Counts of time deltas between", "tags": ["Temporal Clinical Data"]}}, "/temporal/sourceToTarget": {"get": {"description": "Analysis to determine if there's a temporal relationship between the source_concept and the target_concept.  \nCompares the delta distribution between source_concept and target_concept against delta distributions from other concepts to the target_concept. Find comparable concepts by measuring similarity of the age distributions to the age distribution of the source_concept.\n", "operationId": "sourceToTarget", "parameters": [{"description": "The dataset_id of the data set to query. Default data set is the Temporal Beta data set.", "example": 4, "in": "query", "name": "dataset_id", "required": false, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"312327\"", "example": 312327, "in": "query", "name": "source_concept_id", "required": true, "schema": {"type": "integer"}}, {"description": "An OMOP concept id, e.g., \"313217\"", "example": 313217, "in": "query", "name": "target_concept_id", "required": true, "schema": {"type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"type": "object"}}}, "description": "The concept pair's delta distribution"}, "default": {"description": "Unexpected error"}}, "summary": "Temporal relationship between source_concept and target_concept.", "tags": ["Temporal Clinical Data"]}}, "/predicates": {"get": {"deprecated": true, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/meta_knowledge_graph": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Returns meta knowledge graph representation of this TRAPI web service."}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["meta_knowledge_graph"]}}, "/query": {"post": {"description": "Query the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\nThe COHD data are natively represented using OMOP. COHD will attempt to map between Biolink and OMOP both in the input and response.", "operationId": "query", "requestBody": {"content": {"application/json": {"example": "{\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": {\n        \"n00\": {\n          \"ids\": [\"DOID:9053\"],\n          \"categories\": [\"biolink:Disease\"]\n        },\n        \"n01\": {\n          \"categories\": [\"biolink:Procedure\"]\n        }\n      },\n      \"edges\": {\n        \"e00\": {\n          \"predicates\": [\"biolink:correlated_with\"],\n          \"subject\": \"n00\",\n          \"object\": \"n01\"\n        }\n      }\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"max_results\": 50,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\n        \"ICD9\",\n        \"SNOMEDCT\",\n        \"DOID\"\n      ],\n      \"biolink:Drug\": [\n        \"RxNorm\"\n      ],\n      \"biolink:Procedure\": [\n        \"ICD10PCS\",\n        \"SNOMEDCT\"\n      ],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}", "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query COHD following NCATS Translator Reasoner Standard API", "tags": ["query"]}}, "/1.0.0/query": {"post": {"description": "Query the COHD API following the [NCATS Translator Reasoner Standard API](https://github.com/NCATSTranslator/ReasonerAPI). Only single hop queries are supported. See the example query_graph.\nFor the subject node, the id must be specified (category is ignored).\nFor the object node, both the id and category are optional. If id is specified for the object node, then the association between the two identified concepts is returned. If id is not specified and category is specified, the associations between the subject node and all concepts with the specified category are returned. If neither are specified, then the associations between the subject node and all concepts are returned.\nThe COHD data are natively represented using OMOP. COHD will attempt to map between Biolink and OMOP both in the input and response.\nAdditional behavior options can be controlled using the optional parameters in query_options.", "operationId": "query", "requestBody": {"content": {"application/json": {"example": "{\n  \"message\": {\n    \"query_graph\": {\n      \"nodes\": {\n        \"n00\": {\n          \"id\": \"DOID:9053\",\n          \"category\": \"biolink:Disease\"\n        },\n        \"n01\": {\n          \"category\": \"biolink:Procedure\"\n        }\n      },\n      \"edges\": {\n        \"e00\": {\n          \"predicate\": \"biolink:correlated_with\",\n          \"subject\": \"n00\",\n          \"object\": \"n01\"\n        }\n      }\n    }\n  },\n  \"query_options\": {\n    \"method\": \"obsExpRatio\",\n    \"dataset_id\": 3,\n    \"confidence_interval\": 0.99,\n    \"min_cooccurrence\": 50,\n    \"threshold\": 0.5,\n    \"local_oxo\": true,\n    \"max_results\": 50,\n    \"ontology_targets\": {\n      \"biolink:Disease\": [\n        \"ICD9\",\n        \"SNOMEDCT\",\n        \"DOID\"\n      ],\n      \"biolink:Drug\": [\n        \"RxNorm\"\n      ],\n      \"biolink:Procedure\": [\n        \"ICD10PCS\",\n        \"SNOMEDCT\"\n      ],\n      \"_DEFAULT\": []\n    },\n    \"biolink_only\": true\n  }\n}", "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query COHD following NCATS TRAPI 1.0", "tags": ["translator"]}}, "/translator/biolink_to_omop": {"post": {"description": "Map Biolink CURIEs to OMOP concepts", "operationId": "biolink_to_omop", "requestBody": {"content": {"application/json": {"example": "{\n    \"curies\": [\n        \"HP:0002907\",\n        \"MONDO:0001187\"\n    ]\n}", "schema": {"$ref": "#/components/schemas/CurieList"}}}, "description": "List of CURIEs", "required": true}, "responses": {"200": {"content": {"application/json": {"example": "{\n  \"MONDO:0001187\": {\n    \"distance\": 2,\n    \"omop_concept_id\": 197508,\n    \"omop_concept_name\": \"Malignant tumor of urinary bladder\"\n  }\n}", "schema": {"additionalProperties": {"description": "Mapping from OMOP concept to Biolink", "properties": {"distance": {"description": "mapping distance", "type": "integer"}, "omop_concept_id": {"type": "integer"}, "omop_concept_name": {"type": "string"}}, "type": "object"}}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}}, "summary": "Map from Biolink to OMOP", "tags": ["translator"]}}, "/translator/omop_to_biolink": {"post": {"description": "Map OMOP concepts to normalized Biolink nodes using SRI Node Normalizer.", "operationId": "omop_to_biolink", "requestBody": {"content": {"application/json": {"example": "{\n    \"omop_ids\": [\n        78472,\n        197508\n    ]\n}", "schema": {"$ref": "#/components/schemas/OmopList"}}}, "description": "List of OMOP IDs", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"type": "object"}, "example": "{\n  \"197508\": {\n    \"equivalent_identifiers\": [\n        {\n            \"identifier\": \"MONDO:0001187\",\n            \"label\": \"urinary bladder cancer\"\n        },\n        {\n            \"identifier\": \"DOID:11054\"\n        },\n        {\n            \"identifier\": \"OMIM:109800\"\n        },\n        {\n            \"identifier\": \"UMLS:C0005684\"\n        },\n        {\n            \"identifier\": \"NCIT:C9334\"\n        },\n        {\n            \"identifier\": \"SNOMEDCT:399326009\"\n        }\n    ],\n    \"id\": {\n        \"identifier\": \"MONDO:0001187\",\n        \"label\": \"urinary bladder cancer\"\n    },\n    \"type\": [\n        \"biolink:Disease\",\n        \"biolink:DiseaseOrPhenotypicFeature\",\n        \"biolink:BiologicalEntity\",\n        \"biolink:NamedThing\"\n    ]\n  }\n}", "type": "object"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized. Mapping from OMOP concept to Biolink normalized nodes. See [SRI Node Normalizer](https://nodenormalization-sri.renci.org/docs#/) for response format"}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}}, "summary": "Map from OMOP to Biolink", "tags": ["translator"]}}}, "security": [], "servers": [{"url": "https://cohd.io/api/"}], "tags": [{"description": "COHD metadata", "name": "Metadata"}, {"description": "OMOP Common Data Model concepts", "name": "OMOP"}, {"description": "Clinical frequency data", "name": "Clinical Frequencies"}, {"description": "Estimated association between concepts", "name": "Concept Associations"}, {"description": "Concept-age distributions, concept-pair delta distributions, and temporal analyses", "name": "Temporal Clinical Data"}, {"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "name": "query"}, {"description": "Required for SmartAPI validation of x-translator", "name": "translator"}, {"description": "Required for SmartAPI validation of x-trapi", "name": "trapi"}], "x-externalResources": [{"x-description": "Department of Biomedical Informatics, Columbia University", "x-type": "website", "x-url": "https://www.dbmi.columbia.edu/"}, {"x-description": "Observational Health Data Sciences and Informatics", "x-type": "website", "x-url": "https://www.ohdsi.org/"}, {"x-description": "OMOP CDM", "x-type": "website", "x-url": "https://github.com/OHDSI/CommonDataModel/wiki"}]}, {"_id": "9dd890397a7b8d98fbe247d56cac2b8f", "_meta": {"date_created": "2021-05-07T19:15:04.425925+00:00", "last_updated": "2021-05-14T07:05:41.437567+00:00", "slug": "icees-dili", "url": "https://icees.renci.org:16341/openapi.json", "username": "patrickkwang"}, "_score": 1.5422714, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:41+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:40.658987"}, "components": {"schemas": {"AddNameById": {"properties": {"cohort_id": {"title": "Cohort Id", "type": "string"}}, "required": ["cohort_id"], "title": "AddNameById", "type": "object"}, "AllFeaturesAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature"], "title": "AllFeaturesAssociation", "type": "object"}, "AllFeaturesAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature", "maximum_p_value"], "title": "AllFeaturesAssociation2", "type": "object"}, "Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "Between": {"properties": {"operator": {"enum": ["between"], "title": "Operator", "type": "string"}, "value_a": {"title": "Value A"}, "value_b": {"title": "Value B"}}, "required": ["operator"], "title": "Between", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Comparison": {"properties": {"operator": {"enum": ["<", ">", "<=", ">=", "=", "<>"], "title": "Operator", "type": "string"}, "value": {"title": "Value"}}, "required": ["operator"], "title": "Comparison", "type": "object"}, "Correction": {"properties": {"method": {"enum": ["bonferroni", "sidak", "holm-sidak", "holm", "simes-hochberg", "hommel", "fdr_bh", "fdr_by"], "title": "Method", "type": "string"}}, "required": ["method"], "title": "Correction", "type": "object"}, "CorrectionWithAlpha": {"properties": {"alpha": {"title": "Alpha", "type": "number"}, "method": {"enum": ["fdr_tsbh", "fdr_tsbky"], "title": "Method", "type": "string"}}, "required": ["method", "alpha"], "title": "CorrectionWithAlpha", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "FeatureAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation", "type": "object"}, "FeatureAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation2", "type": "object"}, "FeatureExplicit": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifier": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}], "title": "Feature Qualifier"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifier"], "title": "FeatureExplicit", "type": "object"}, "FeatureExplicit2": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifiers": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "title": "Feature Qualifiers", "type": "array"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifiers"], "title": "FeatureExplicit2", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "In": {"properties": {"operator": {"enum": ["in"], "title": "Operator", "type": "string"}, "values": {"items": {}, "title": "Values", "type": "array"}}, "required": ["operator", "values"], "title": "In", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}, "securitySchemes": {"APIKeyCookie": {"in": "cookie", "name": "access_token", "type": "apiKey"}, "APIKeyHeader": {"in": "header", "name": "access_token", "type": "apiKey"}, "APIKeyQuery": {"in": "query", "name": "access_token", "type": "apiKey"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ICEES DILI Use Case API \n<br>[ICEES Overview page](https://researchsoftwareinstitute.github.io/data-translator/apps/icees)\n<br>[documentation](https://github.com/NCATS-Tangerine/icees-api/tree/master/docs) \n<br>[source](https://github.com/NCATS-Tangerine/icees-api/tree/master/) \n<br>[ICEES API example queries](https://github.com/NCATS-Tangerine/icees-api/tree/master/#examples)\n<br>dictionary for versioning of tables\n<br>\n<table>\n    <tr>\n        <th>version</th>\n        <th>table content</th>\n    </tr>\n    <tr>\n        <td>1.0.0</td>\n        <td>DILI</td>\n    </tr>\n</table>\n", "termsOfService": "N/A", "title": "ICEES API", "version": "4.0.0", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.2", "paths": {"/{table}/cohort": {"post": {"description": "Cohort discovery.", "operationId": "discover_cohort__table__cohort_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "example": {}, "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Discover Cohort  Table  Cohort Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Discover Cohort"}}, "/{table}/cohort/dictionary": {"get": {"description": "Get cohort dictionary.", "operationId": "dictionary__table__cohort_dictionary_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Dictionary  Table  Cohort Dictionary Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Dictionary"}}, "/{table}/cohort/{cohort_id}": {"get": {"description": "Get definition of a cohort.", "operationId": "get_cohort__table__cohort__cohort_id__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Cohort  Table  Cohort  Cohort Id  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Get Cohort"}, "put": {"description": "Cohort discovery.", "operationId": "edit_cohort__table__cohort__cohort_id__put", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "example": {}, "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Edit Cohort  Table  Cohort  Cohort Id  Put", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Edit Cohort"}}, "/{table}/cohort/{cohort_id}/feature_association": {"post": {"description": "Hypothesis-driven 2 x 2 feature associations.\n\nUsers select a predefined cohort and two feature variables, and the service\nreturns a 2 x 2 feature table with a correspondingChi Square statistic and\nP value.", "operationId": "feature_association__table__cohort__cohort_id__feature_association_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/FeatureAssociation"}], "example": {"feature_a": {"SexDILI": {"operator": "=", "value": "Female"}}, "feature_b": {"AlcoholUse": {"operator": "=", "value": "Yes"}}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association  Table  Cohort  Cohort Id  Feature Association Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Feature Association"}}, "/{table}/cohort/{cohort_id}/feature_association2": {"post": {"description": "Hypothesis-driven N x N feature associations.\n\nUsers select a predefined cohort, two feature variables, and bins, which\ncan be combined, and the service returns a N x N feature table with a\ncorresponding Chi Square statistic and P value.", "operationId": "feature_association2__table__cohort__cohort_id__feature_association2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/FeatureAssociation2"}], "example": {"feature_a": {"SexDILI": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "feature_b": {"AlcoholUse": [{"operator": "=", "value": "Yes"}, {"operator": "=", "value": "No"}]}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association2  Table  Cohort  Cohort Id  Feature Association2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Feature Association2"}}, "/{table}/cohort/{cohort_id}/associations_to_all_features": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest, and\nthe service returns a 1 x N feature table with corrected Chi Square\nstatistics and associated P values.", "operationId": "associations_to_all_features__table__cohort__cohort_id__associations_to_all_features_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/AllFeaturesAssociation"}], "example": {"correction": {"method": "bonferroni"}, "feature": {"SexDILI": {"operator": "=", "value": "Female"}}, "maximum_p_value": 1}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features  Table  Cohort  Cohort Id  Associations To All Features Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Associations To All Features"}}, "/{table}/cohort/{cohort_id}/associations_to_all_features2": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest and\nbins, which can be combined, and the service returns a 1 x N feature table\nwith corrected Chi Square statistics and associated P values.", "operationId": "associations_to_all_features2__table__cohort__cohort_id__associations_to_all_features2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/AllFeaturesAssociation2"}], "example": {"correction": {"method": "bonferroni"}, "feature": {"SexDILI": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "maximum_p_value": 1}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features2  Table  Cohort  Cohort Id  Associations To All Features2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Associations To All Features2"}}, "/{table}/cohort/{cohort_id}/features": {"get": {"description": "Feature-rich cohort discovery.\n\nUsers select a predefined cohort as the input parameter, and the service\nreturns a profile of that cohort in terms of all feature variables.", "operationId": "features__table__cohort__cohort_id__features_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Features  Table  Cohort  Cohort Id  Features Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Features"}}, "/{table}/{feature}/identifiers": {"get": {"description": "Feature identifiers.", "operationId": "identifiers__table___feature__identifiers_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "feature", "required": true, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Identifiers  Table   Feature  Identifiers Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Identifiers"}}, "/{table}/name/{name}": {"get": {"description": "Return cohort id associated with name.", "operationId": "get_name__table__name__name__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Name  Table  Name  Name  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Get Name"}, "post": {"description": "Associate name with cohort id.", "operationId": "post_name__table__name__name__post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddNameById"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Post Name  Table  Name  Name  Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Post Name"}}, "/knowledge_graph": {"post": {"description": "Query for knowledge graph associations between concepts.", "operationId": "knowledge_graph_knowledge_graph_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:PopulationOfIndividualOrganisms"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}, "query_options": {"cohort_features": {"AgeQualifyingLab": {"operator": ">", "value": 18}}, "feature": {"AlcoholRelatedLiverDisease": {"operator": "=", "value": "Yes"}}, "maximum_p_value": 1, "table": "patient"}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Knowledge Graph Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Knowledge Graph"}}, "/knowledge_graph/schema": {"get": {"description": "Query the ICEES clinical reasoner for knowledge graph schema.", "operationId": "knowledge_graph_schema_knowledge_graph_schema_get", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Schema Knowledge Graph Schema Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Knowledge Graph Schema"}}, "/predicates": {"get": {"description": "Get meta-knowledge graph.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {}}, "text/tabular": {}}, "description": "Return the tabular output."}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Predicates", "tags": ["reasoner"]}}, "/knowledge_graph_overlay": {"post": {"description": "Query for knowledge graph co-occurrence overlay.", "operationId": "knowledge_graph_overlay_knowledge_graph_overlay_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"e00": {"object": "PUBCHEM:281", "predicate": "biolink:correlated_with", "subject": "PUBCHEM:2083"}}, "nodes": {"PUBCHEM:2083": {"category": "biolink:Drug"}, "PUBCHEM:281": {"category": "biolink:ChemicalSubstance"}}}}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Overlay Knowledge Graph Overlay Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Knowledge Graph Overlay"}}, "/knowledge_graph_one_hop": {"post": {"deprecated": true, "description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_knowledge_graph_one_hop_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:PhenotypicFeature", "id": "NCIT:C28421"}, "n01": {"category": "biolink:NamedThing"}}}, "results": []}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Knowledge Graph One Hop Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Knowledge Graph One Hop"}}, "/query": {"post": {"description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_query_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:PhenotypicFeature", "id": "NCIT:C28421"}, "n01": {"category": "biolink:NamedThing"}}}, "results": []}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Query Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Knowledge Graph One Hop", "tags": ["reasoner"]}}, "/bins": {"get": {"description": "Return bin values.", "operationId": "handle_bins_bins_get", "parameters": [{"in": "query", "name": "year", "required": false, "schema": {"title": "Year", "type": "string"}}, {"in": "query", "name": "table", "required": false, "schema": {"title": "Table", "type": "string"}}, {"in": "query", "name": "feature", "required": false, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Handle Bins Bins Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "security": [{"APIKeyQuery": []}, {"APIKeyHeader": []}, {"APIKeyCookie": []}], "summary": "Handle Bins"}}}, "servers": [{"url": "https://icees.renci.org:16341"}], "tags": [{"name": "translator"}, {"name": "reasoner"}]}, {"_id": "cd79363c8f24935bc0fa0659bed8ff58", "_meta": {"date_created": "2021-02-25T18:44:45.303276+00:00", "last_updated": "2021-05-14T07:02:25.680380+00:00", "slug": "icees", "url": "https://icees.renci.org:16340/openapi.json", "username": "patrickkwang"}, "_score": 1.2207968, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:25+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:25.537485"}, "components": {"schemas": {"AddNameById": {"properties": {"cohort_id": {"title": "Cohort Id", "type": "string"}}, "required": ["cohort_id"], "title": "AddNameById", "type": "object"}, "AllFeaturesAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature", "maximum_p_value"], "title": "AllFeaturesAssociation", "type": "object"}, "AllFeaturesAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature", "maximum_p_value"], "title": "AllFeaturesAssociation2", "type": "object"}, "Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "Between": {"properties": {"operator": {"enum": ["between"], "title": "Operator", "type": "string"}, "value_a": {"title": "Value A"}, "value_b": {"title": "Value B"}}, "required": ["operator"], "title": "Between", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Comparison": {"properties": {"operator": {"enum": ["<", ">", "<=", ">=", "=", "<>"], "title": "Operator", "type": "string"}, "value": {"title": "Value"}}, "required": ["operator"], "title": "Comparison", "type": "object"}, "Correction": {"properties": {"method": {"enum": ["bonferroni", "sidak", "holm-sidak", "holm", "simes-hochberg", "hommel", "fdr_bh", "fdr_by"], "title": "Method", "type": "string"}}, "required": ["method"], "title": "Correction", "type": "object"}, "CorrectionWithAlpha": {"properties": {"alpha": {"title": "Alpha", "type": "number"}, "method": {"enum": ["fdr_tsbh", "fdr_tsbky"], "title": "Method", "type": "string"}}, "required": ["method", "alpha"], "title": "CorrectionWithAlpha", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "FeatureAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation", "type": "object"}, "FeatureAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation2", "type": "object"}, "FeatureExplicit": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifier": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}], "title": "Feature Qualifier"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifier"], "title": "FeatureExplicit", "type": "object"}, "FeatureExplicit2": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifiers": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "title": "Feature Qualifiers", "type": "array"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifiers"], "title": "FeatureExplicit2", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "In": {"properties": {"operator": {"enum": ["in"], "title": "Operator", "type": "string"}, "values": {"items": {}, "title": "Values", "type": "array"}}, "required": ["operator", "values"], "title": "In", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ICEES API \n<br>[ICEES Overview page](https://researchsoftwareinstitute.github.io/data-translator/apps/icees)\n<br>[documentation](https://github.com/NCATS-Tangerine/icees-api/tree/master/docs) \n<br>[source](https://github.com/NCATS-Tangerine/icees-api/tree/master/) \n<br>[ICEES API example queries](https://github.com/NCATS-Tangerine/icees-api/tree/master/#examples)\n<br>dictionary for versioning of tables\n<br>\n<table>\n    <tr>\n        <th>version</th>\n        <th>table content</th>\n    </tr>\n    <tr>\n        <td>1.0.0</td>\n        <td>cdw, acs, nearest road, and cmaq from 2010</td>\n    </tr>\n    <tr>\n        <td>2.0.0</td>\n        <td>cdw in FHIR format, acs, nearest road, and cmaq from 2010</td>\n    </tr>\n    <tr>\n        <td>3.0.0</td>\n        <td>cdw in FHIR format, acs, nearest road, cmaq, and EPR from 2010 to 2016</td>\n    </tr>\n</table>", "termsOfService": "N/A", "title": "ICEES API", "version": "4.0.0", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.2", "paths": {"/{table}/{year}/cohort": {"post": {"description": "Cohort discovery.", "operationId": "discover_cohort__table___year__cohort_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "example": {}, "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Discover Cohort  Table   Year  Cohort Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Discover Cohort"}}, "/{table}/{year}/cohort/dictionary": {"get": {"description": "Get cohort dictionary.", "operationId": "dictionary__table___year__cohort_dictionary_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Dictionary  Table   Year  Cohort Dictionary Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Dictionary"}}, "/{table}/{year}/cohort/{cohort_id}": {"get": {"description": "Get definition of a cohort.", "operationId": "get_cohort__table___year__cohort__cohort_id__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Cohort  Table   Year  Cohort  Cohort Id  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Cohort"}, "put": {"description": "Cohort discovery.", "operationId": "edit_cohort__table___year__cohort__cohort_id__put", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "example": {}, "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Edit Cohort  Table   Year  Cohort  Cohort Id  Put", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Edit Cohort"}}, "/{table}/{year}/cohort/{cohort_id}/feature_association": {"post": {"description": "Hypothesis-driven 2 x 2 feature associations.\n\nUsers select a predefined cohort and two feature variables, and the service\nreturns a 2 x 2 feature table with a correspondingChi Square statistic and\nP value.", "operationId": "feature_association__table___year__cohort__cohort_id__feature_association_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/FeatureAssociation"}], "example": {"feature_a": {"Sex": {"operator": "=", "value": "Female"}}, "feature_b": {"AsthmaDx": {"operator": "=", "value": 1}}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association  Table   Year  Cohort  Cohort Id  Feature Association Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Feature Association"}}, "/{table}/{year}/cohort/{cohort_id}/feature_association2": {"post": {"description": "Hypothesis-driven N x N feature associations.\n\nUsers select a predefined cohort, two feature variables, and bins, which\ncan be combined, and the service returns a N x N feature table with a\ncorresponding Chi Square statistic and P value.", "operationId": "feature_association2__table___year__cohort__cohort_id__feature_association2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/FeatureAssociation2"}], "example": {"feature_a": {"Sex": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "feature_b": {"AsthmaDx": [{"operator": "=", "value": 1}, {"operator": "=", "value": 0}]}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association2  Table   Year  Cohort  Cohort Id  Feature Association2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Feature Association2"}}, "/{table}/{year}/cohort/{cohort_id}/associations_to_all_features": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest, and\nthe service returns a 1 x N feature table with corrected Chi Square\nstatistics and associated P values.", "operationId": "associations_to_all_features__table___year__cohort__cohort_id__associations_to_all_features_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/AllFeaturesAssociation"}], "example": {"correction": {"method": "bonferroni"}, "feature": {"Sex": {"operator": "=", "value": "Female"}}, "maximum_p_value": 1}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features  Table   Year  Cohort  Cohort Id  Associations To All Features Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Associations To All Features"}}, "/{table}/{year}/cohort/{cohort_id}/associations_to_all_features2": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest and\nbins, which can be combined, and the service returns a 1 x N feature table\nwith corrected Chi Square statistics and associated P values.", "operationId": "associations_to_all_features2__table___year__cohort__cohort_id__associations_to_all_features2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/AllFeaturesAssociation2"}], "example": {"correction": {"method": "bonferroni"}, "feature": {"Sex": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "maximum_p_value": 1}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features2  Table   Year  Cohort  Cohort Id  Associations To All Features2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Associations To All Features2"}}, "/{table}/{year}/cohort/{cohort_id}/features": {"get": {"description": "Feature-rich cohort discovery.\n\nUsers select a predefined cohort as the input parameter, and the service\nreturns a profile of that cohort in terms of all feature variables.", "operationId": "features__table___year__cohort__cohort_id__features_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "year", "required": true, "schema": {"title": "Year", "type": "integer"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Features  Table   Year  Cohort  Cohort Id  Features Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Features"}}, "/{table}/{feature}/identifiers": {"get": {"description": "Feature identifiers.", "operationId": "identifiers__table___feature__identifiers_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "feature", "required": true, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Identifiers  Table   Feature  Identifiers Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Identifiers"}}, "/{table}/name/{name}": {"get": {"description": "Return cohort id associated with name.", "operationId": "get_name__table__name__name__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Name  Table  Name  Name  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Name"}, "post": {"description": "Associate name with cohort id.", "operationId": "post_name__table__name__name__post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddNameById"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Post Name  Table  Name  Name  Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Post Name"}}, "/knowledge_graph": {"post": {"description": "Query for knowledge graph associations between concepts.", "operationId": "knowledge_graph_knowledge_graph_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:PopulationOfIndividualOrganisms"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}, "query_options": {"cohort_features": {"AgeStudyStart": {"operator": "=", "value": "0-2"}}, "feature": {"EstResidentialDensity": {"operator": "<", "value": 1}}, "maximum_p_value": 1, "table": "patient", "year": 2010}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Knowledge Graph Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph"}}, "/knowledge_graph/schema": {"get": {"description": "Query the ICEES clinical reasoner for knowledge graph schema.", "operationId": "knowledge_graph_schema_knowledge_graph_schema_get", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Schema Knowledge Graph Schema Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph Schema"}}, "/predicates": {"get": {"description": "Get meta-knowledge graph.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {}}, "text/tabular": {}}, "description": "Return the tabular output."}}, "summary": "Predicates", "tags": ["reasoner"]}}, "/knowledge_graph_overlay": {"post": {"description": "Query for knowledge graph co-occurrence overlay.", "operationId": "knowledge_graph_overlay_knowledge_graph_overlay_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"e00": {"object": "PUBCHEM:281", "predicate": "biolink:correlated_with", "subject": "PUBCHEM:2083"}}, "nodes": {"PUBCHEM:2083": {"category": "biolink:Drug"}, "PUBCHEM:281": {"category": "biolink:ChemicalSubstance"}}}}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Overlay Knowledge Graph Overlay Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph Overlay"}}, "/knowledge_graph_one_hop": {"post": {"deprecated": true, "description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_knowledge_graph_one_hop_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Drug", "id": "PUBCHEM:2083"}, "n01": {"category": "biolink:ChemicalSubstance"}}}, "results": []}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Knowledge Graph One Hop Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph One Hop"}}, "/query": {"post": {"description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_query_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Drug", "id": "PUBCHEM:2083"}, "n01": {"category": "biolink:ChemicalSubstance"}}}, "results": []}}, "title": "Obj"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Query Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph One Hop", "tags": ["reasoner"]}}, "/bins": {"get": {"description": "Return bin values.", "operationId": "handle_bins_bins_get", "parameters": [{"in": "query", "name": "year", "required": false, "schema": {"title": "Year", "type": "string"}}, {"in": "query", "name": "table", "required": false, "schema": {"title": "Table", "type": "string"}}, {"in": "query", "name": "feature", "required": false, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Handle Bins Bins Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Handle Bins"}}}, "servers": [{"url": "https://icees.renci.org:16340"}], "tags": [{"name": "translator"}, {"name": "reasoner"}]}, {"_id": "0864c0912390d0876c3c34a00acb5c3b", "_meta": {"date_created": "2021-05-12T17:58:14.831380+00:00", "last_updated": "2021-05-14T07:05:35.774984+00:00", "url": "https://icees.renci.org:16339/openapi.json", "username": "patrickkwang"}, "_score": 1.2207968, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:35+00:00", "uptime_status": "incompatible", "uptime_ts": "2021-05-14T07:11:34.755760"}, "components": {"schemas": {"AddNameById": {"properties": {"cohort_id": {"title": "Cohort Id", "type": "string"}}, "required": ["cohort_id"], "title": "AddNameById", "type": "object"}, "AllFeaturesAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature"], "title": "AllFeaturesAssociation", "type": "object"}, "AllFeaturesAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "correction": {"anyOf": [{"$ref": "#/components/schemas/Correction"}, {"$ref": "#/components/schemas/CorrectionWithAlpha"}], "title": "Correction"}, "feature": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature"}, "maximum_p_value": {"title": "Maximum P Value", "type": "number"}}, "required": ["feature", "maximum_p_value"], "title": "AllFeaturesAssociation2", "type": "object"}, "Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "Between": {"properties": {"operator": {"enum": ["between"], "title": "Operator", "type": "string"}, "value_a": {"title": "Value A"}, "value_b": {"title": "Value B"}}, "required": ["operator"], "title": "Between", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Comparison": {"properties": {"operator": {"enum": ["<", ">", "<=", ">=", "=", "<>"], "title": "Operator", "type": "string"}, "value": {"title": "Value"}}, "required": ["operator"], "title": "Comparison", "type": "object"}, "Correction": {"properties": {"method": {"enum": ["bonferroni", "sidak", "holm-sidak", "holm", "simes-hochberg", "hommel", "fdr_bh", "fdr_by"], "title": "Method", "type": "string"}}, "required": ["method"], "title": "Correction", "type": "object"}, "CorrectionWithAlpha": {"properties": {"alpha": {"title": "Alpha", "type": "number"}, "method": {"enum": ["fdr_tsbh", "fdr_tsbky"], "title": "Method", "type": "string"}}, "required": ["method", "alpha"], "title": "CorrectionWithAlpha", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "FeatureAssociation": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation", "type": "object"}, "FeatureAssociation2": {"properties": {"check_coverage_is_full": {"default": false, "title": "Check Coverage Is Full", "type": "boolean"}, "feature_a": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature A"}, "feature_b": {"anyOf": [{"additionalProperties": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "array"}, "type": "object"}, {"$ref": "#/components/schemas/FeatureExplicit2"}], "title": "Feature B"}}, "required": ["feature_a", "feature_b"], "title": "FeatureAssociation2", "type": "object"}, "FeatureExplicit": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifier": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}], "title": "Feature Qualifier"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifier"], "title": "FeatureExplicit", "type": "object"}, "FeatureExplicit2": {"properties": {"feature_name": {"title": "Feature Name", "type": "string"}, "feature_qualifiers": {"items": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "title": "Feature Qualifiers", "type": "array"}, "year": {"title": "Year", "type": "integer"}}, "required": ["feature_name", "feature_qualifiers"], "title": "FeatureExplicit2", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "In": {"properties": {"operator": {"enum": ["in"], "title": "Operator", "type": "string"}, "values": {"items": {}, "title": "Values", "type": "array"}}, "required": ["operator", "values"], "title": "In", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ICEES API \n<br>[ICEES Overview page](https://researchsoftwareinstitute.github.io/data-translator/apps/icees)\n<br>[documentation](https://github.com/NCATS-Tangerine/icees-api/tree/master/docs) \n<br>[source](https://github.com/NCATS-Tangerine/icees-api/tree/master/) \n<br>[ICEES API example queries](https://github.com/NCATS-Tangerine/icees-api/tree/master/#examples)\n<br>dictionary for versioning of tables\n<br>\n<table>\n    <tr>\n        <th>version</th>\n        <th>table content</th>\n    </tr>\n    <tr>\n        <td>1.0.0</td>\n        <td>cdw, acs, nearest road, and cmaq from 2010</td>\n    </tr>\n    <tr>\n        <td>2.0.0</td>\n        <td>cdw in FHIR format, acs, nearest road, and cmaq from 2010</td>\n    </tr>\n    <tr>\n        <td>3.0.0</td>\n        <td>cdw in FHIR format, acs, nearest road, cmaq, and EPR from 2010 to 2016</td>\n    </tr>\n</table>", "termsOfService": "see API responses", "title": "ICEES API", "version": "4.0.0", "x-translator": {"biolink-version": "1.8.2", "component": "KP", "externalDocs": {"description": "The values for component and team are restricted according to this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-translator/"}, "team": ["Exposures Provider"]}, "x-trapi": {"externalDocs": {"description": "The values for version are restricted according to the regex in this external JSON schema. See schema and examples at url", "url": "https://github.com/NCATSTranslator/translator_extensions/blob/\\ production/x-trapi/"}, "version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/{table}/cohort": {"post": {"description": "Cohort discovery.", "operationId": "discover_cohort__table__cohort_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {}, "schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Discover Cohort  Table  Cohort Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Discover Cohort"}}, "/{table}/cohort/dictionary": {"get": {"description": "Get cohort dictionary.", "operationId": "dictionary__table__cohort_dictionary_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Dictionary  Table  Cohort Dictionary Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Dictionary"}}, "/{table}/cohort/{cohort_id}": {"get": {"description": "Get definition of a cohort.", "operationId": "get_cohort__table__cohort__cohort_id__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Cohort  Table  Cohort  Cohort Id  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Cohort"}, "put": {"description": "Cohort discovery.", "operationId": "edit_cohort__table__cohort__cohort_id__put", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {}, "schema": {"anyOf": [{"additionalProperties": {"anyOf": [{"$ref": "#/components/schemas/Comparison"}, {"$ref": "#/components/schemas/Between"}, {"$ref": "#/components/schemas/In"}]}, "type": "object"}, {"items": {"$ref": "#/components/schemas/FeatureExplicit"}, "type": "array"}], "title": "Req Features"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Edit Cohort  Table  Cohort  Cohort Id  Put", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Edit Cohort"}}, "/{table}/cohort/{cohort_id}/feature_association": {"post": {"description": "Hypothesis-driven 2 x 2 feature associations.\n\nUsers select a predefined cohort and two feature variables, and the service\nreturns a 2 x 2 feature table with a correspondingChi Square statistic and\nP value.", "operationId": "feature_association__table__cohort__cohort_id__feature_association_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"feature_a": {"SexDILI": {"operator": "=", "value": "Female"}}, "feature_b": {"AlcoholUse": {"operator": "=", "value": "Yes"}}}, "schema": {"$ref": "#/components/schemas/FeatureAssociation"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association  Table  Cohort  Cohort Id  Feature Association Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Feature Association"}}, "/{table}/cohort/{cohort_id}/feature_association2": {"post": {"description": "Hypothesis-driven N x N feature associations.\n\nUsers select a predefined cohort, two feature variables, and bins, which\ncan be combined, and the service returns a N x N feature table with a\ncorresponding Chi Square statistic and P value.", "operationId": "feature_association2__table__cohort__cohort_id__feature_association2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"feature_a": {"SexDILI": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "feature_b": {"AlcoholUse": [{"operator": "=", "value": "Yes"}, {"operator": "=", "value": "No"}]}}, "schema": {"$ref": "#/components/schemas/FeatureAssociation2"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Feature Association2  Table  Cohort  Cohort Id  Feature Association2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Feature Association2"}}, "/{table}/cohort/{cohort_id}/associations_to_all_features": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest, and\nthe service returns a 1 x N feature table with corrected Chi Square\nstatistics and associated P values.", "operationId": "associations_to_all_features__table__cohort__cohort_id__associations_to_all_features_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"correction": {"method": "bonferroni"}, "feature": {"SexDILI": {"operator": "=", "value": "Female"}}, "maximum_p_value": 1}, "schema": {"$ref": "#/components/schemas/AllFeaturesAssociation"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features  Table  Cohort  Cohort Id  Associations To All Features Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Associations To All Features"}}, "/{table}/cohort/{cohort_id}/associations_to_all_features2": {"post": {"description": "Exploratory 1 X N feature associations.\n\nUsers select a predefined cohort and a feature variable of interest and\nbins, which can be combined, and the service returns a 1 x N feature table\nwith corrected Chi Square statistics and associated P values.", "operationId": "associations_to_all_features2__table__cohort__cohort_id__associations_to_all_features2_post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"correction": {"method": "bonferroni"}, "feature": {"SexDILI": [{"operator": "=", "value": "Female"}, {"operator": "=", "value": "Male"}]}, "maximum_p_value": 1}, "schema": {"$ref": "#/components/schemas/AllFeaturesAssociation2"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Associations To All Features2  Table  Cohort  Cohort Id  Associations To All Features2 Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Associations To All Features2"}}, "/{table}/cohort/{cohort_id}/features": {"get": {"description": "Feature-rich cohort discovery.\n\nUsers select a predefined cohort as the input parameter, and the service\nreturns a profile of that cohort in terms of all feature variables.", "operationId": "features__table__cohort__cohort_id__features_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "cohort_id", "required": true, "schema": {"title": "Cohort Id", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Features  Table  Cohort  Cohort Id  Features Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Features"}}, "/{table}/{feature}/identifiers": {"get": {"description": "Feature identifiers.", "operationId": "identifiers__table___feature__identifiers_get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "feature", "required": true, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Identifiers  Table   Feature  Identifiers Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Identifiers"}}, "/{table}/name/{name}": {"get": {"description": "Return cohort id associated with name.", "operationId": "get_name__table__name__name__get", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Get Name  Table  Name  Name  Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get Name"}, "post": {"description": "Associate name with cohort id.", "operationId": "post_name__table__name__name__post", "parameters": [{"in": "path", "name": "table", "required": true, "schema": {"title": "Table", "type": "string"}}, {"in": "path", "name": "name", "required": true, "schema": {"title": "Name", "type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddNameById"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Post Name  Table  Name  Name  Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Post Name"}}, "/knowledge_graph": {"post": {"description": "Query for knowledge graph associations between concepts.", "operationId": "knowledge_graph_knowledge_graph_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "predicate": "biolink:correlated_with", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:PopulationOfIndividualOrganisms"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}, "query_options": {"cohort_features": {"AgeQualifyingLab": {"operator": ">", "value": 18}}, "feature": {"AlcoholRelatedLiverDisease": {"operator": "=", "value": "Yes"}}, "maximum_p_value": 1, "table": "patient"}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/Message"}, {"type": "object"}], "title": "Response Knowledge Graph Knowledge Graph Post"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph"}}, "/knowledge_graph/schema": {"get": {"description": "Query the ICEES clinical reasoner for knowledge graph schema.", "operationId": "knowledge_graph_schema_knowledge_graph_schema_get", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph Schema Knowledge Graph Schema Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph Schema"}}, "/predicates": {"get": {"description": "Get meta-knowledge graph.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {}}, "text/tabular": {}}, "description": "Return the tabular output."}}, "summary": "Predicates", "tags": ["reasoner"]}}, "/knowledge_graph_overlay": {"post": {"description": "Query for knowledge graph co-occurrence overlay.", "operationId": "knowledge_graph_overlay_knowledge_graph_overlay_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": false, "title": "Reasoner", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"knowledge_graph": {"edges": {"e00": {"object": "PUBCHEM:281", "predicate": "biolink:correlated_with", "subject": "PUBCHEM:2083"}}, "nodes": {"PUBCHEM:2083": {"category": "biolink:Drug"}, "PUBCHEM:281": {"category": "biolink:ChemicalSubstance"}}}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/Message"}, {"type": "object"}], "title": "Response Knowledge Graph Overlay Knowledge Graph Overlay Post"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph Overlay"}}, "/knowledge_graph_one_hop": {"post": {"deprecated": true, "description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_knowledge_graph_one_hop_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:correlated_with"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:PhenotypicFeature"], "ids": ["NCIT:C28421"]}, "n01": {"categories": ["biolink:NamedThing"]}}}, "results": []}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Knowledge Graph One Hop Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph One Hop"}}, "/query": {"post": {"description": "Query the ICEES clinical reasoner for knowledge graph one hop.", "operationId": "knowledge_graph_one_hop_query_post", "parameters": [{"in": "query", "name": "reasoner", "required": false, "schema": {"default": true, "title": "Reasoner", "type": "boolean"}}, {"in": "query", "name": "verbose", "required": false, "schema": {"default": false, "title": "Verbose", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"knowledge_graph": {"edges": {}, "nodes": {}}, "query_graph": {"edges": {"e00": {"object": "n01", "predicates": ["biolink:correlated_with"], "subject": "n00"}}, "nodes": {"n00": {"categories": ["biolink:PhenotypicFeature"], "ids": ["NCIT:C28421"]}, "n01": {"categories": ["biolink:NamedThing"]}}}, "results": []}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Knowledge Graph One Hop Query Post", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Knowledge Graph One Hop", "tags": ["reasoner"]}}, "/bins": {"get": {"description": "Return bin values.", "operationId": "handle_bins_bins_get", "parameters": [{"in": "query", "name": "year", "required": false, "schema": {"title": "Year", "type": "string"}}, {"in": "query", "name": "table", "required": false, "schema": {"title": "Table", "type": "string"}}, {"in": "query", "name": "feature", "required": false, "schema": {"title": "Feature", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Handle Bins Bins Get", "type": "object"}}, "text/tabular": {}}, "description": "Return the tabular output."}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Handle Bins"}}}, "tags": [{"name": "translator"}, {"name": "trapi"}]}, {"_id": "d76f7d70f98b3ef124df0553d70490f7", "_meta": {"date_created": "2021-05-08T22:19:34.401242+00:00", "last_updated": "2021-05-14T07:00:49.229263+00:00", "url": "https://cam-kp-api-dev.renci.org/docs/docs.yaml", "username": "jdr0887"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:49+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:01.797574"}, "components": {"schemas": {"BiolinkClass": {"properties": {"iri": {"$ref": "#/components/schemas/IRI"}, "shorthand": {"type": "string"}}, "required": ["shorthand", "iri"], "type": "object"}, "BiolinkPredicate": {"properties": {"iri": {"$ref": "#/components/schemas/IRI"}, "shorthand": {"type": "string"}}, "required": ["shorthand", "iri"], "type": "object"}, "IRI": {"properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}, "LogEntry": {"properties": {"code": {"type": "string"}, "level": {"type": "string"}, "message": {"type": "string"}, "timestamp": {"type": "string"}}, "type": "object"}, "Map_List_TRAPIEdgeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPIEdgeBinding"}, "type": "array"}, "type": "object"}, "Map_List_TRAPINodeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPINodeBinding"}, "type": "array"}, "type": "object"}, "Map_TRAPIEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIEdge"}, "type": "object"}, "Map_TRAPIQueryEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryEdge"}, "type": "object"}, "Map_TRAPIQueryNode": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryNode"}, "type": "object"}, "MetaEdge": {"properties": {"object": {"$ref": "#/components/schemas/BiolinkClass"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkClass"}}, "required": ["subject", "predicate", "object"], "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "type": "array"}, "nodes": {"$ref": "#/components/schemas/MetaNode"}}, "required": ["nodes"], "type": "object"}, "MetaNode": {"properties": {"id_prefixes": {"items": {"type": "string"}, "type": "array"}}, "type": "object"}, "TRAPIAttribute": {"properties": {"attribute_source": {"type": "string"}, "attribute_type_id": {"$ref": "#/components/schemas/IRI"}, "description": {"type": "string"}, "original_attribute_name": {"type": "string"}, "value": {"items": {"type": "string"}, "type": "array"}, "value_type_id": {"$ref": "#/components/schemas/IRI"}, "value_url": {"type": "string"}}, "required": ["attribute_type_id", "value_type_id"], "type": "object"}, "TRAPIEdge": {"properties": {"attributes": {"items": {"$ref": "#/components/schemas/TRAPIAttribute"}, "type": "array"}, "object": {"$ref": "#/components/schemas/IRI"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relation": {"type": "string"}, "subject": {"$ref": "#/components/schemas/IRI"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIEdgeBinding": {"properties": {"id": {"type": "string"}}, "required": ["id"], "type": "object"}, "TRAPIKnowledgeGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIEdge"}, "nodes": {"items": {"$ref": "#/components/schemas/TRAPINode"}, "type": "array"}}, "required": ["edges"], "type": "object"}, "TRAPIMessage": {"properties": {"knowledge_graph": {"$ref": "#/components/schemas/TRAPIKnowledgeGraph"}, "query_graph": {"$ref": "#/components/schemas/TRAPIQueryGraph"}, "results": {"items": {"$ref": "#/components/schemas/TRAPIResult"}, "type": "array"}}, "type": "object"}, "TRAPINode": {"properties": {"attributes": {"items": {"$ref": "#/components/schemas/TRAPIAttribute"}, "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkClass"}, "type": "array"}, "name": {"type": "string"}}, "type": "object"}, "TRAPINodeBinding": {"properties": {"id": {"$ref": "#/components/schemas/IRI"}}, "required": ["id"], "type": "object"}, "TRAPIQuery": {"properties": {"log_level": {"type": "string"}, "message": {"$ref": "#/components/schemas/TRAPIMessage"}}, "required": ["message"], "type": "object"}, "TRAPIQueryConstraint": {"properties": {"id": {"$ref": "#/components/schemas/IRI"}, "name": {"type": "string"}, "not": {"type": "boolean"}, "operator": {"type": "string"}, "unit_id": {"$ref": "#/components/schemas/IRI"}, "unit_name": {"type": "string"}, "value": {"type": "string"}}, "required": ["id", "name", "operator", "value"], "type": "object"}, "TRAPIQueryEdge": {"properties": {"constraints": {"items": {"$ref": "#/components/schemas/TRAPIQueryConstraint"}, "type": "array"}, "object": {"type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}, "relation": {"type": "string"}, "subject": {"type": "string"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIQueryGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIQueryEdge"}, "nodes": {"$ref": "#/components/schemas/Map_TRAPIQueryNode"}}, "required": ["nodes", "edges"], "type": "object"}, "TRAPIQueryNode": {"properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkClass"}, "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/IRI"}, "type": "array"}, "is_set": {"type": "boolean"}}, "type": "object"}, "TRAPIResponse": {"properties": {"description": {"type": "string"}, "logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "type": "array"}, "message": {"$ref": "#/components/schemas/TRAPIMessage"}, "status": {"type": "string"}}, "required": ["message"], "type": "object"}, "TRAPIResult": {"properties": {"edge_bindings": {"$ref": "#/components/schemas/Map_List_TRAPIEdgeBinding"}, "node_bindings": {"$ref": "#/components/schemas/Map_List_TRAPINodeBinding"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "balhoff@renci.org", "name": "Jim Balhoff"}, "description": "TRAPI interface to database of Causal Activity Models", "license": {"name": "MIT License", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "https://opensource.org/licenses/MIT", "title": "CAM-KP API", "version": "0.1", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.1", "paths": {"/query": {"post": {"operationId": "postQuery", "parameters": [{"in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e0": {"object": "n0", "predicates": ["biolink:has_participant"], "subject": "n1"}}, "nodes": {"n0": {"categories": ["biolink:Gene", "biolink:GeneOrGeneProduct"]}, "n1": {"categories": ["biolink:BiologicalProcess"]}}}}}, "schema": {"$ref": "#/components/schemas/TRAPIQuery"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TRAPIResponse"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Submit a TRAPI question graph and retrieve matching solutions"}}, "/meta_knowledge_graph": {"get": {"operationId": "getMeta_knowledge_graph", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Get MetaKnowledgeGraph used at this service"}}}, "servers": [{"url": "https://cam-kp-api-dev.renci.org"}], "tags": [{"name": "translator"}]}, {"_id": "34e351cb4eac8bc7dbacf55f1b5ce44b", "_meta": {"date_created": "2021-03-04T18:17:41.093656+00:00", "last_updated": "2021-05-14T07:00:48.635122+00:00", "url": "http://bdt-cmaq.renci.org:8080/cmaq_exposures_api/v1/openapi.json", "username": "lstillwe"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:48+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:06:58.355083"}, "components": {"parameters": {"end_date": {"description": "end date of range", "in": "query", "name": "end_date", "required": true, "schema": {"format": "date", "type": "string"}}, "latitude": {"description": "latitude in decimal degrees format, ie: 35.7", "in": "query", "name": "latitude", "required": true, "schema": {"type": "string"}}, "longitude": {"description": "longitude in decimal degrees format, ie: -80.33", "in": "query", "name": "longitude", "required": true, "schema": {"type": "string"}}, "search": {"description": "search for exposure variable like - default is empty", "in": "query", "name": "search", "required": false, "schema": {"type": "string"}}, "start_date": {"description": "start date of range", "in": "query", "name": "start_date", "required": true, "schema": {"format": "date", "type": "string"}}, "utc_offset": {"description": "timezone offset from UTC (utc, eastern, central, mountain, pacific) - default is utc", "in": "query", "name": "utc_offset", "required": false, "schema": {"default": "utc", "type": "string"}}}, "schemas": {"inline_response_200_cmaq_output": {"example": {"date": "2010-01-01", "value": 49.819595}, "properties": {"date": {"example": "2010-01-01", "format": "date", "type": "string"}, "value": {"example": 49.819595, "format": "float", "type": "number"}}}, "inline_response_200_values": {"example": [{"cmaq_output": [{"date": "2016-12-29", "value": 5.4092}, {"date": "2016-12-30", "value": 2.1874}, {"date": "2016-12-31", "value": 8.824}], "latitude": "35.7", "longitude": "-80.33", "variable": "pm25_daily_average"}, {"cmaq_output": [{"date": "2016-12-29", "value": 39.6909}, {"date": "2016-12-30", "value": 36.532}, {"date": "2016-12-31", "value": 31.5859}], "latitude": "35.7", "longitude": "-80.33", "variable": "ozone_daily_8hour_maximum"}], "properties": {"cmaq_output": {"items": {"$ref": "#/components/schemas/inline_response_200_cmaq_output"}, "type": "array"}, "latitude": {"example": "35.7", "type": "string"}, "longitude": {"example": "-80.33", "type": "string"}, "variable": {"example": "ozone_daily_8hour_maximum", "type": "string"}}}}}, "info": {"contact": {"email": "lisa@renci.org", "name": "Lisa Stillwell"}, "description": "This API returns estimated measurements of airborne particulate exposures for a given time period and spatial location of interest.\n\nEstimates are derived from the US EPA CONUS estimates of air quality available at https://www.epa.gov/hesc/rsig-related-downloadable-data-files. These data sets provide 8-hour ozone daily maximums (in ppbV) and daily PM2.5 daily averages (in \u00b5g/m3). The US EPA provides estimates at the resolution of US Census tract centroids for the continental US. For a given location, the API returns the estimated exposure for the census tract the location occurs in.\n\nThe API provides exposure estimates for calendar years 2002-2016. Resolution for model estimates is 12 km-squared, provisioned at a resolution of the US Census track centroid. The US census tract definition is from the calendar year 2010 definition of the US Census Bureau, for all years of CMAQ data.\n\nThe data sets sources are derived from air quality monitoring data from the National Air Monitoring Stations and Local Air Monitoring Stations (NAMS/LAMS) and numerical output from the Models-3/Community Multiscale Air Quality (CMAQ - https://www.epa.gov/cmaq).\n\nThe API currently provides the following exposure variables:\n- O3: provides estimated O3 concentration levels. Estimated values are for daily maximums in units of ppbV.\n- PM2.5: provides estimated pm2.5 concentration levels. Estimated values are for daily averages in units of \u00b5g/m3.\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n", "license": {"name": "MIT", "url": "http://opensource.org/licenses/MIT"}, "title": "CMAQ Exposures API", "version": "1.0.0-oas3", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.0", "paths": {"/values": {"get": {"description": "Get estimated air pollutant exposure levels based on time and location\n", "operationId": "get_values", "parameters": [{"description": "start date of range, ie: MM-DD-YYYY", "in": "query", "name": "start_date", "required": true, "schema": {"format": "date", "type": "string"}}, {"description": "end date of range, ie: MM-DD-YYYY", "in": "query", "name": "end_date", "required": true, "schema": {"format": "date", "type": "string"}}, {"description": "latitude in decimal degrees format, ie: 35.7", "in": "query", "name": "latitude", "required": true, "schema": {"type": "string"}}, {"description": "longitude in decimal degrees format, ie: -80.33", "in": "query", "name": "longitude", "required": true, "schema": {"type": "string"}}, {"description": "timezone offset from UTC (utc, eastern, central, mountain, pacific) - default is utc", "in": "query", "name": "utc_offset", "required": false, "schema": {"default": "utc", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"values": {"items": {"$ref": "#/components/schemas/inline_response_200_values"}, "type": "array"}}, "type": "object"}}}, "description": "OK"}, "400": {"description": "Invalid parameter"}, "404": {"description": "No values found"}, "500": {"description": "Server error"}}, "summary": "Retrieves air pollutant exposure levels", "x-openapi-router-controller": "swagger_server.controllers.default_controller"}}}, "servers": [{"url": "/cmaq_exposures_api/v1"}], "tags": [{"name": "translator"}]}, {"_id": "219ac6646d0e2db862b533fb618db5b4", "_meta": {"date_created": "2021-03-04T18:22:55.853241+00:00", "last_updated": "2021-05-14T07:01:09.513071+00:00", "url": "http://bdt-proximity.renci.org:8080/roadway_proximity_api/v1/openapi.json", "username": "lstillwe"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:09+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:51.654531"}, "components": {"schemas": {"RoadwayData": {"example": {"aadt": 7354, "distance": 0.2255368, "latitude": 37.2, "longitude": -77.334, "roadtype": "Urban Unrestricted Access", "route_id": "R-VA   SR00106NB", "speed": 31, "through_lanes": 4}, "properties": {"aadt": {"description": "the Annual Average Daily Traffic on the nearest roadway", "example": 7354.0, "format": "integer", "type": "number"}, "distance": {"description": "distance from the point of interest to the nearest roadway (meters)", "example": 0.2255368, "format": "double", "type": "number"}, "latitude": {"description": "latitude provided in the API call", "example": 37.2, "format": "double", "type": "number"}, "longitude": {"description": "longitude provided in the API call", "example": -77.334, "format": "double", "type": "number"}, "roadtype": {"description": "The roadway type of the nearest roadway", "example": "Rural Restricted Access", "type": "string"}, "route_id": {"description": "The Route ID of the nearest roadway as reported to the Highway Performance Monitoring System", "example": "R-VA   SR00106NB", "type": "string"}, "speed": {"description": "speed limit of the nearest roadway", "example": 31.0, "format": "integer", "type": "number"}, "through_lanes": {"example": 4.0, "format": "integer", "type": "number"}}, "required": ["aadt", "distance", "latitude", "longitude", "roadtype", "route_id", "speed", "through_lanes"], "type": "object"}}}, "info": {"contact": {"email": "lisa@renci.org", "name": "Lisa Stillwell"}, "description": "This API returns the distance in meters from a location of interest to the nearest roadway.\n\nRoadway data are derived from GIS shapefiles provided by the US Federal Highway Administration's Highway Performance Monitoring System (HPMS). See the HPMS Field Manual (https://www.fhwa.dot.gov/policyinformation/hpms/fieldmanual/) for detailed explanation of methods and fields.\n\nResults are limited to major (or primary) roadway types, including interstates, principal arteries, minor arteries, and major collectors, in the United States.\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n\nIn addition to distance, the API retrieves additional information, including the roadway type, the maximum speed limit, the annual average daily traffic (AADT), and the total number of lanes. See\u00a0https://www.fhwa.dot.gov/policyinformation/travel_monitoring/pubs/aadt/\u00a0for information on how AADT is computed.\n\nThe following roadway types are supported:\n* Off-Network\n* Rural Restricted Access\n* Rural Unrestricted Access\n* Urban Restricted Access\n* Urban Unrestricted Access\n\nIn some cases, roadway type, AADT, and speed are not available in the HPMS data set. In this case, data from the US Census Bureau TIGER (Topologically Integrated Geographic Encoding and Referencing) data set (available at census.gov) was used to obtain roadway type. Roadway segments without roadway type were dropped from the dataset; this amounted to approximately 5% of roadways, many of which had not yet been built. Missing AADT and speeds were populated using a variety of methods. First, a lookup table was built with county averages by roadway type and facility type and populated with values from segments that already had AADT and/or speed. Second, in cases in which the lookup table could not be used (e.g., ramps often didn\u2019t match), speeds were assigned based on the function class of the roadway, state averages, or averages for a similar (but different) roadway type.\n\nThe API is currently restricted to calendar year 2016.\n", "license": {"name": "MIT", "url": "http://opensource.org/licenses/MIT"}, "title": "Roadway Exposures API", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.1", "paths": {"/distance": {"get": {"description": "Get the distance to the nearest roadway in meters", "operationId": "get_distance", "parameters": [{"description": "latitude of the location of interest using decimal format (WGS84 datum)", "in": "query", "name": "latitude", "required": true, "schema": {"format": "double", "type": "number"}}, {"description": "longitude of the location of interest using decimal format (WGS84 datum)", "in": "query", "name": "longitude", "required": true, "schema": {"format": "double", "type": "number"}}, {"description": "the maximum search distance between the location of interest and nearest road (meters)", "in": "query", "name": "limit_distance", "schema": {"default": 500.0, "format": "double", "type": "number"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/RoadwayData"}}}, "description": "search results matching criteria"}, "204": {"content": {}, "description": "No content returned - nearest roadway is >500 meters from specified latitude/longitude"}, "400": {"content": {}, "description": "Bad input parameter"}, "404": {"content": {}, "description": "No values found"}, "500": {"content": {}, "description": "Server error"}}, "summary": "retrieves distance in meters", "x-openapi-router-controller": "swagger_server.controllers.default_controller"}}}, "servers": [{"url": "/roadway_proximity_api/v1"}], "tags": [{"name": "translator"}]}, {"_id": "cc7324e732c4ffc7157a468bfbd0778c", "_meta": {"date_created": "2020-05-29T20:56:31.280738+00:00", "last_updated": "2021-02-17T07:42:22.892704+00:00", "url": "https://raw.githubusercontent.com/NCATSTranslator/ara-scaffold/master/openapi.yaml", "username": "MarkDWilliams"}, "_score": 0.5376202, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:05+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:41.944418"}, "info": {"contact": {"email": "mark.williams5@nih.gov", "name": "Mark Williams", "x-role": "responsible developer"}, "description": "a work in progress ara example", "termsOfService": "https://opensource.org/licenses/MIT", "title": "NCATS ARA Scaffold", "version": "3.0"}, "openapi": "3.0.0", "paths": {"/query": {"post": {"responses": {"200": {"description": "A query response object"}}, "summary": "POST a ReasonerStdAPI formatted query to the service"}}}, "servers": [{"description": "Production server", "url": "http://transltr.io:7073"}], "tags": [{"name": "translator"}]}, {"_id": "bfd371630f0bcb198d428488d061e7b3", "_meta": {"date_created": "2020-06-10T20:42:55.836852+00:00", "last_updated": "2021-02-17T07:42:12.854226+00:00", "url": "https://raw.githubusercontent.com/NCATSTranslator/KnowledgeProviderScaffold/master/openapi.yml", "username": "MarkDWilliams"}, "_score": 0.5376202, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:02:09+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:19.123119"}, "info": {"contact": {"email": "mark.williams5@nih.gov", "name": "Mark Williams", "x-role": "responsible developer"}, "description": "a work in progress KP example", "termsOfService": "https://opensource.org/licenses/MIT", "title": "NCATS KP Scaffold", "version": "3.0"}, "openapi": "3.0.0", "paths": {"/query": {"post": {"responses": {"200": {"description": "A query response object"}}, "summary": "POST a ReasonerStdAPI formatted query to the service.  Note, the service can only accept a limited set of query types currently."}}}, "servers": [{"description": "Production server", "url": "http://transltr.io:7072"}], "tags": [{"name": "translator"}]}, {"_id": "230691056df158545fd38bb73379d9c3", "_meta": {"date_created": "2021-02-04T00:04:56.017398+00:00", "last_updated": "2021-05-14T07:04:40.628627+00:00", "url": "https://stars-app.renci.org/cam-kp/docs/docs.yaml", "username": "balhoff"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:40+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:27.942274"}, "components": {"schemas": {"BiolinkClass": {"properties": {"iri": {"$ref": "#/components/schemas/IRI"}, "shorthand": {"type": "string"}}, "required": ["shorthand", "iri"], "type": "object"}, "BiolinkPredicate": {"properties": {"iri": {"$ref": "#/components/schemas/IRI"}, "shorthand": {"type": "string"}}, "required": ["shorthand", "iri"], "type": "object"}, "IRI": {"properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}, "LogEntry": {"properties": {"code": {"type": "string"}, "level": {"type": "string"}, "message": {"type": "string"}, "timestamp": {"type": "string"}}, "type": "object"}, "Map_List_TRAPIEdgeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPIEdgeBinding"}, "type": "array"}, "type": "object"}, "Map_List_TRAPINodeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPINodeBinding"}, "type": "array"}, "type": "object"}, "Map_TRAPIEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIEdge"}, "type": "object"}, "Map_TRAPIQueryEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryEdge"}, "type": "object"}, "Map_TRAPIQueryNode": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryNode"}, "type": "object"}, "TRAPIAttribute": {"properties": {"name": {"type": "string"}, "source": {"type": "string"}, "type": {"$ref": "#/components/schemas/IRI"}, "url": {"type": "string"}, "value": {"type": "string"}}, "required": ["value", "type"], "type": "object"}, "TRAPIEdge": {"properties": {"attributes": {"items": {"$ref": "#/components/schemas/TRAPIAttribute"}, "type": "array"}, "object": {"$ref": "#/components/schemas/IRI"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relation": {"type": "string"}, "subject": {"$ref": "#/components/schemas/IRI"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIEdgeBinding": {"properties": {"id": {"type": "string"}}, "required": ["id"], "type": "object"}, "TRAPIKnowledgeGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIEdge"}, "nodes": {"items": {"$ref": "#/components/schemas/TRAPINode"}, "type": "array"}}, "required": ["edges"], "type": "object"}, "TRAPIMessage": {"properties": {"knowledge_graph": {"$ref": "#/components/schemas/TRAPIKnowledgeGraph"}, "query_graph": {"$ref": "#/components/schemas/TRAPIQueryGraph"}, "results": {"items": {"$ref": "#/components/schemas/TRAPIResult"}, "type": "array"}}, "type": "object"}, "TRAPINode": {"properties": {"attributes": {"items": {"$ref": "#/components/schemas/TRAPIAttribute"}, "type": "array"}, "category": {"items": {"$ref": "#/components/schemas/BiolinkClass"}, "type": "array"}, "name": {"type": "string"}}, "type": "object"}, "TRAPINodeBinding": {"properties": {"id": {"$ref": "#/components/schemas/IRI"}}, "required": ["id"], "type": "object"}, "TRAPIQuery": {"properties": {"message": {"$ref": "#/components/schemas/TRAPIMessage"}}, "required": ["message"], "type": "object"}, "TRAPIQueryEdge": {"properties": {"object": {"type": "string"}, "predicate": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}, "relation": {"type": "string"}, "subject": {"type": "string"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIQueryGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIQueryEdge"}, "nodes": {"$ref": "#/components/schemas/Map_TRAPIQueryNode"}}, "required": ["nodes", "edges"], "type": "object"}, "TRAPIQueryNode": {"properties": {"category": {"$ref": "#/components/schemas/BiolinkClass"}, "id": {"$ref": "#/components/schemas/IRI"}, "is_set": {"type": "boolean"}}, "type": "object"}, "TRAPIResponse": {"properties": {"description": {"type": "string"}, "logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "type": "array"}, "message": {"$ref": "#/components/schemas/TRAPIMessage"}, "status": {"type": "string"}}, "required": ["message"], "type": "object"}, "TRAPIResult": {"properties": {"edge_bindings": {"$ref": "#/components/schemas/Map_List_TRAPIEdgeBinding"}, "node_bindings": {"$ref": "#/components/schemas/Map_List_TRAPINodeBinding"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "balhoff@renci.org", "name": "Jim Balhoff"}, "description": "TRAPI interface to database of Causal Activity Models", "license": {"name": "MIT License", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "https://opensource.org/licenses/MIT", "title": "CAM-KP API", "version": "0.1", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.1", "paths": {"/query": {"post": {"operationId": "postQuery", "parameters": [{"in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TRAPIQuery"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TRAPIResponse"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Submit a TRAPI question graph and retrieve matching solutions"}}, "/predicates": {"get": {"operationId": "getPredicates", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"items": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}, "type": "array"}, "type": "array"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Get predicates used at this service"}}}, "servers": [{"url": "https://stars-app.renci.org/cam-kp"}], "tags": [{"name": "translator"}]}, {"_id": "04f42ae00c8e5991b98d0e681dbdc596", "_meta": {"date_created": "2021-03-04T18:27:43.614727+00:00", "last_updated": "2021-05-14T07:05:07.035962+00:00", "url": "http://bdt-social.renci.org:8080/socio_environmental_exposures_api/v1/openapi.json", "username": "lstillwe"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:06+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:50.785232"}, "components": {"parameters": {"latitude": {"description": "latitude in decimal degrees format, ie: 32.47", "in": "query", "name": "latitude", "required": true, "schema": {"type": "string"}}, "longitude": {"description": "longitude in decimal degrees format, ie: -86.5", "in": "query", "name": "longitude", "required": true, "schema": {"type": "string"}}, "search": {"description": "search for exposure variables like - default is empty", "in": "query", "name": "search", "schema": {"type": "string"}}, "years": {"description": "ACS data year range specification", "in": "query", "name": "years", "required": true, "schema": {"enum": ["All (2007-2016)", "2007-2011", "2012-2016"], "type": "string"}}}, "schemas": {"inline_response_200": {"example": {"EstPropFemaleHouseholdAnyChild": "0.154929577", "EstPropFemaleHouseholdAnyChild_SE": "0.075973316", "EstPropFemaleHouseholdFamilyChild": "0.227979275", "EstPropFemaleHouseholdFamilyChild_SE": "0.151408698", "EstPropFemaleHouseholdNoSpouse": "0.362694301", "EstPropFemaleHouseholdNoSpouse_SE": "0.108321058", "EstPropHighSchoolDropout": "n/a", "EstPropHighSchoolDropoutNoWork": "n/a", "EstPropHighSchoolMaxEducation": "0.53164557", "EstPropHighSchoolMaxEducation_SE": "0.076480429", "EstPropHouseholdPA": "0", "EstPropHouseholdPA_SE": "0.060887293", "EstPropHouseholdSSI": "0.088028169", "EstPropHouseholdSSI_SE": "0.04974414", "EstPropHouseholdsNoAuto": "0.038732394", "EstPropHouseholdsNoAuto_SE": "0.039252128", "EstPropMaleLittleWork": "0.385245902", "EstPropNonHispWhite": "0.763758389", "EstPropNonHispWhite_SE": "0.105181283", "EstPropPersons5PlusNoEnglish": "0.075070822", "EstPropPersons5PlusNoEnglish_SE": "0.040387049", "EstPropPersonsNoHealthIns": "0.183892617", "EstPropPersonsNoHealthIns_SE": "0.063328335", "EstResidentialDensity": "175.1077206", "EstResidentialDensity_SE": "32.32567504", "EstTotalPopulation": "745", "EstTotalPopulation_SE": "137.5303603", "MedianHouseholdIncome": "n/a", "MedianHouseholdIncome_SE": "9888", "geoid": "15000US010010201001", "latitude": "32.47", "longitude": -86.5, "years": "2012-2016"}, "properties": {"EstPropFemaleHouseholdAnyChild": {"example": "0.154929577", "type": "string"}, "EstPropFemaleHouseholdAnyChild_SE": {"example": "0.075973316", "type": "string"}, "EstPropFemaleHouseholdFamilyChild": {"example": "0.227979275", "type": "string"}, "EstPropFemaleHouseholdFamilyChild_SE": {"example": "0.151408698", "type": "string"}, "EstPropFemaleHouseholdNoSpouse": {"example": "0.362694301", "type": "string"}, "EstPropFemaleHouseholdNoSpouse_SE": {"example": "0.108321058", "type": "string"}, "EstPropHighSchoolDropout": {"example": "n/a", "type": "string"}, "EstPropHighSchoolDropoutNoWork": {"example": "n/a", "type": "string"}, "EstPropHighSchoolMaxEducation": {"example": "0.53164557", "type": "string"}, "EstPropHighSchoolMaxEducation_SE": {"example": "0.076480429", "type": "string"}, "EstPropHouseholdPA": {"example": "0", "type": "string"}, "EstPropHouseholdPA_SE": {"example": "0.060887293", "type": "string"}, "EstPropHouseholdSSI": {"example": "0.088028169", "type": "string"}, "EstPropHouseholdSSI_SE": {"example": "0.04974414", "type": "string"}, "EstPropHouseholdsNoAuto": {"example": "0.038732394", "type": "string"}, "EstPropHouseholdsNoAuto_SE": {"example": "0.039252128", "type": "string"}, "EstPropMaleLittleWork": {"example": "0.385245902", "type": "string"}, "EstPropNonHispWhite": {"example": "0.763758389", "type": "string"}, "EstPropNonHispWhite_SE": {"example": "0.105181283", "type": "string"}, "EstPropPersons5PlusNoEnglish": {"example": "0.075070822", "type": "string"}, "EstPropPersons5PlusNoEnglish_SE": {"example": "0.040387049", "type": "string"}, "EstPropPersonsNoHealthIns": {"example": "0.183892617", "type": "string"}, "EstPropPersonsNoHealthIns_SE": {"example": "0.063328335", "type": "string"}, "EstResidentialDensity": {"example": "175.1077206", "type": "string"}, "EstResidentialDensity_SE": {"example": "32.32567504", "type": "string"}, "EstTotalPopulation": {"example": "745", "type": "string"}, "EstTotalPopulation_SE": {"example": "137.5303603", "type": "string"}, "MedianHouseholdIncome": {"example": "n/a", "type": "string"}, "MedianHouseholdIncome_SE": {"example": "9888", "type": "string"}, "geoid": {"example": "15000US010010201001", "type": "string"}, "latitude": {"example": "32.47", "type": "string"}, "longitude": {"example": -86.5, "type": "string"}, "years": {"example": "2012-2016", "type": "string"}}, "type": "object"}}}, "info": {"contact": {"email": "lisa@renci.org", "name": "Lisa Stillwell"}, "description": "\nThis API returns data from the US Census Bureau American Community Survey (ACS) for a given spatial location of interest.\n\nThe API returns estimated values for socio-economic variables and related variables for small geographic areas that may act as indirect indicators of relevant health behaviors and outcomes. The data are collected by the US Census Bureau and are publicly available.\n\nThe variables are taken from the five-year summary data file of the US Census Bureau ACS, which is constructed from five annual waves of the bureau\u2019s largest household survey. Approximately, two million households have completed the survey annually since calendar year 2005. (Five waves of the survey before 2005 sampled approximately 500,000 households each.) See\u00a0https://www.census.gov/acs/www/methodology/sample-size-and-data-quality/sample-size/\u00a0for more detail. Microdata are available, but small-area data are only available in summary tabulations.\n\nValues are provided at the US Census Block Group level, representing the 2007-2011 and 2012-2016 calendar-year periods for locations within the continental USA. Block groups, the smallest geographic area for which sample survey data are released, generally contain 600 to 3,000 people (e.g., the size of a single city apartment building). Block Groups are aggregates of an average of 39 Blocks each, each of which is delineated by visible and invisible geographic boundaries. Block groups, in turn, are aggregated into Census Tracts, which generally have a population size between 1,200 and 8,000 people, with an optimum size of 4,000 people. Census Tracts aggregate into counties and counties into states. Metropolitan and micropolitan areas are aggregates of counties. See\u00a0https://www2.census.gov/geo/pdfs/reference/geodiagram.pdf\u00a0for further detail. Census geography, even Block Groups, may cross municipal lines and may include both urbanized and rural areas. Because population is a large factor in determining Census geography, some Block Groups may cover an extensive rural or wilderness area while others are quite compact. Census Block, Block Group, and Tract boundaries may change somewhat with each decennial Census, but remain stable in between Censuses.\n\nThe US Census Bureau is mandated to preserve the confidentiality of individual-level data. Therefore, data are often summarized, coarsened into categories, or suppressed by complex secret algorithms (especially, but not limited to household income data). In addition, because the variables of interest may only apply to a small subset of Block Group missing data can occur. In some versions of the data, calculated values are suppressed in Block Groups with less than 50 residents.\n\nStandard errors for the socio-demographic variables are provided. Because each of the values in the ACS data files are summary statistics calculated from sample survey data for each Block Group, different samples yield somewhat different values. Therefore, the Census Bureau generates 80 replicate values for selected variables. These provide the basis for the estimated standard errors of the estimates.\n\nThe currently available variables are listed here:\n\n **(2007-2011 data)**\n- **YEARS**\u00a0\u2013 the range of years for which this census data is valid\n- **GEOID**\u00a0\u2013 a FIPS like code for identifying which census block group this data pertains to, see (https://www.census.gov/geo/reference/geoidentifiers.html)\n- **EstTotalPopulation**\u00a0- estimated population count in block group\n- **MedianHouseholdIncome**\u00a0- estimated median household income\n- **EstResidentialDensity**\u00a0- block group population density\n- **EstPropNonHispWhite**\u00a0\u2013 proportion of the block group population that is non-Hispanic white\n- **EstPropPersons5PlusNoEnglish**\u00a0- proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropMaleLittleWork**\u00a0- proportion of block group males aged 16-64 who worked less than 26 weeks in the previous year\n- **EstPropHouseholdsNoAuto**\u00a0- proportion of the block group households with no automobile\n- **EstPropHouseholdSSI**\u00a0- proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdPA**\u00a0- proportion of the block group households receiving Public Assistance\n- **EstPropHighSchoolMaxEducation**\u00a0- proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolDropout**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates\n- **EstPropHighSchoolDropoutNoWork**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates and are without work\n- **EstPropFemaleHouseholdNoSpouse**\u00a0- proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild**\u00a0- proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdAnyChild**\u00a0- proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n\n **(2012-2016 data)**\n- **YEARS**\u00a0\u2013 the range of years for which this census data is valid\n- **GEOID**\u00a0\u2013 a FIPS like code for identifying which census block group this data pertains to, see (https://www.census.gov/geo/reference/geoidentifiers.html)\n- **EstTotalPopulation**\u00a0- estimated population count in block group\n- **EstTotalPopulation_SE**\u00a0- standard error of total population in block group\n  - **EstResidentialDensity**\u00a0- block group population density\n- **EstResidentialDensity_SE**\u00a0- standard error of residential population density in block group\n- **MedianHouseholdIncome**\u00a0- estimated median household income\n- **MedianHouseholdIncome_SE**\u00a0- standard error of median household income\n- **EstPropPersonsNoHealthIns**\u00a0- proportion of the block group population with no health insurance - **EstPropPersonsNoHealthIns_SE**\u00a0- standard error of proportion of the block group population with no health insurance\n- **EstPropNonHispWhite**\u00a0\u2013 proportion of the block group population that is non-Hispanic white\n- **EstPropNonHispWhite_SE**\u00a0- standard error of proportion of the block group population that  is non-Hispanic white\n- **EstPropPersons5PlusNoEnglish**\u00a0- proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropPersons5PlusNoEnglish_SE**\u00a0- standard error of proportion of the block group population aged 5 plus sometimes speaking a language other than English at home\n- **EstPropMaleLittleWork**\u00a0- proportion of block group males aged 16-64 who worked less than 26 weeks in the previous year\n- **EstPropHouseholdsNoAuto**\u00a0- proportion of the block group households with no automobile\n- **EstPropHouseholdsNoAuto_SE**\u00a0- standard error of proportion of the block group households with no automobile\n- **EstPropHouseholdSSI**\u00a0- proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdSSI_SE**\u00a0- standard error of proportion of the block group households receiving Supplemental Security Income\n- **EstPropHouseholdPA**\u00a0- proportion of the block group households receiving Public Assistance\n- **EstPropHouseholdPA_SE**\u00a0- standard error of proportion of the block group households receiving Public Assistance\n- **EstPropHighSchoolMaxEducation**\u00a0- proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolMaxEducation_SE**\u00a0- standard error of proportion of the block group population aged 25 and up with a HS diploma or less\n- **EstPropHighSchoolDropout**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates\n- **EstPropHighSchoolDropoutNoWork**\u00a0- proportion of the block group 16-19 year olds who are neither attending school nor HS graduates and are without work\n- **EstPropFemaleHouseholdNoSpouse**\u00a0- proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdNoSpouse_SE**\u00a0- standard error of proportion of the block group family households headed by a female (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild**\u00a0- proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdFamilyChild_SE**\u00a0- standard error of proportion of the block group family households headed by a female with related children aged 18 or under (no male partner present)\n- **EstPropFemaleHouseholdAnyChild**\u00a0- proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n- **EstPropFemaleHouseholdAnyChild_SE**\u00a0- standard error of proportion of the block group total households headed by a female with any children aged 18 or less (no male partner present)\n\nLocations are expressed using WGS84 decimal format. WGS84 is the World Geodetic System for expressing latitude and longitude. For example, Raleigh, North Carolina is at latitude 35.7796 and longitude -78.6382.\n\nAdditional details on the data can be found in this documentation: (https://github.com/lstillwe/socio-economic-api/blob/master/docs/CensusData.md)\n", "license": {"name": "MIT", "url": "http://opensource.org/licenses/MIT"}, "title": "Socio-Environmental Exposures API", "version": "1.0.1", "x-translator": {"component": "KP", "team": ["Exposures Provider"]}}, "openapi": "3.0.1", "paths": {"/values": {"get": {"description": "By passing in a location specification (lat, lon) and a year range, you can retrieve the the ACS Values for that location and year range\n", "operationId": "get_values", "parameters": [{"description": "latitude in decimal degrees format, ie: 32.47", "in": "query", "name": "latitude", "required": true, "schema": {"type": "string"}}, {"description": "longitude in decimal degrees format, ie: -86.5", "in": "query", "name": "longitude", "required": true, "schema": {"type": "string"}}, {"description": "ACS data year range specification", "in": "query", "name": "years", "required": true, "schema": {"enum": ["All (2007-2016)", "2007-2011", "2012-2016"], "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"properties": {"latitude": {"example": "32.47", "type": "string"}, "longitude": {"example": -86.5, "type": "string"}, "values": {"items": {"properties": {"EstPropFemaleHouseholdAnyChild": {"example": "0.154929577", "type": "string"}, "EstPropFemaleHouseholdAnyChild_SE": {"example": "0.075973316", "type": "string"}, "EstPropFemaleHouseholdFamilyChild": {"example": "0.227979275", "type": "string"}, "EstPropFemaleHouseholdFamilyChild_SE": {"example": "0.151408698", "type": "string"}, "EstPropFemaleHouseholdNoSpouse": {"example": "0.362694301", "type": "string"}, "EstPropFemaleHouseholdNoSpouse_SE": {"example": "0.108321058", "type": "string"}, "EstPropHighSchoolDropout": {"example": "n/a", "type": "string"}, "EstPropHighSchoolDropoutNoWork": {"example": "n/a", "type": "string"}, "EstPropHighSchoolMaxEducation": {"example": "0.53164557", "type": "string"}, "EstPropHighSchoolMaxEducation_SE": {"example": "0.076480429", "type": "string"}, "EstPropHouseholdPA": {"example": "0", "type": "string"}, "EstPropHouseholdPA_SE": {"example": "0.060887293", "type": "string"}, "EstPropHouseholdSSI": {"example": "0.088028169", "type": "string"}, "EstPropHouseholdSSI_SE": {"example": "0.04974414", "type": "string"}, "EstPropHouseholdsNoAuto": {"example": "0.038732394", "type": "string"}, "EstPropHouseholdsNoAuto_SE": {"example": "0.039252128", "type": "string"}, "EstPropMaleLittleWork": {"example": "0.385245902", "type": "string"}, "EstPropNonHispWhite": {"example": "0.763758389", "type": "string"}, "EstPropNonHispWhite_SE": {"example": "0.105181283", "type": "string"}, "EstPropPersons5PlusNoEnglish": {"example": "0.075070822", "type": "string"}, "EstPropPersons5PlusNoEnglish_SE": {"example": "0.040387049", "type": "string"}, "EstPropPersonsNoHealthIns": {"example": "0.183892617", "type": "string"}, "EstPropPersonsNoHealthIns_SE": {"example": "0.063328335", "type": "string"}, "EstResidentialDensity": {"example": "175.1077206", "type": "string"}, "EstResidentialDensity_SE": {"example": "32.32567504", "type": "string"}, "EstTotalPopulation": {"example": "745", "type": "string"}, "EstTotalPopulation_SE": {"example": "137.5303603", "type": "string"}, "MedianHouseholdIncome": {"example": "n/a", "type": "string"}, "MedianHouseholdIncome_SE": {"example": "9888", "type": "string"}, "geoid": {"example": "15000US010010201001", "type": "string"}, "years": {"example": "2012-2016", "type": "string"}}, "type": "object"}, "type": "array"}}, "type": "object"}}}, "description": "OK"}, "400": {"content": {}, "description": "Invalid parameter"}, "404": {"content": {}, "description": "No values found"}, "500": {"content": {}, "description": "Server error"}}, "summary": "provides ACS values", "x-openapi-router-controller": "swagger_server.controllers.default_controller"}}}, "servers": [{"url": "/socio_environmental_exposures_api/v1"}], "tags": [{"name": "translator"}]}, {"_id": "ec1f4b0cfc37d7c2b9534591767e0c5a", "_meta": {"date_created": "2021-03-30T20:24:25.461575+00:00", "last_updated": "2021-05-14T07:05:21.255120+00:00", "url": "https://stars-app.renci.org/sparql-kp/docs/docs.yaml", "username": "balhoff"}, "_score": 0.5376202, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:21+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:32.837616"}, "components": {"schemas": {"BiolinkTerm": {"properties": {"iri": {"$ref": "#/components/schemas/IRI"}, "shorthand": {"type": "string"}}, "required": ["shorthand", "iri"], "type": "object"}, "IRI": {"properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}, "Map_List_TRAPIEdgeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPIEdgeBinding"}, "type": "array"}, "type": "object"}, "Map_List_TRAPINodeBinding": {"additionalProperties": {"items": {"$ref": "#/components/schemas/TRAPINodeBinding"}, "type": "array"}, "type": "object"}, "Map_TRAPIEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIEdge"}, "type": "object"}, "Map_TRAPIQueryEdge": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryEdge"}, "type": "object"}, "Map_TRAPIQueryNode": {"additionalProperties": {"$ref": "#/components/schemas/TRAPIQueryNode"}, "type": "object"}, "TRAPIEdge": {"properties": {"object": {"$ref": "#/components/schemas/IRI"}, "predicate": {"$ref": "#/components/schemas/BiolinkTerm"}, "subject": {"$ref": "#/components/schemas/IRI"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIEdgeBinding": {"properties": {"id": {"type": "string"}}, "required": ["id"], "type": "object"}, "TRAPIKnowledgeGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIEdge"}, "nodes": {"items": {"$ref": "#/components/schemas/TRAPINode"}, "type": "array"}}, "required": ["edges"], "type": "object"}, "TRAPIMessage": {"properties": {"knowledge_graph": {"$ref": "#/components/schemas/TRAPIKnowledgeGraph"}, "query_graph": {"$ref": "#/components/schemas/TRAPIQueryGraph"}, "results": {"items": {"$ref": "#/components/schemas/TRAPIResult"}, "type": "array"}}, "type": "object"}, "TRAPINode": {"properties": {"category": {"items": {"$ref": "#/components/schemas/BiolinkTerm"}, "type": "array"}, "name": {"type": "string"}}, "type": "object"}, "TRAPINodeBinding": {"properties": {"id": {"$ref": "#/components/schemas/IRI"}}, "required": ["id"], "type": "object"}, "TRAPIQueryEdge": {"properties": {"object": {"type": "string"}, "predicate": {"$ref": "#/components/schemas/BiolinkTerm"}, "subject": {"type": "string"}}, "required": ["subject", "object"], "type": "object"}, "TRAPIQueryGraph": {"properties": {"edges": {"$ref": "#/components/schemas/Map_TRAPIQueryEdge"}, "nodes": {"$ref": "#/components/schemas/Map_TRAPIQueryNode"}}, "required": ["nodes", "edges"], "type": "object"}, "TRAPIQueryNode": {"properties": {"category": {"$ref": "#/components/schemas/BiolinkTerm"}, "id": {"$ref": "#/components/schemas/IRI"}}, "type": "object"}, "TRAPIQueryRequestBody": {"properties": {"message": {"$ref": "#/components/schemas/TRAPIMessage"}}, "required": ["message"], "type": "object"}, "TRAPIResponse": {"properties": {"message": {"$ref": "#/components/schemas/TRAPIMessage"}}, "required": ["message"], "type": "object"}, "TRAPIResult": {"properties": {"edge_bindings": {"$ref": "#/components/schemas/Map_List_TRAPIEdgeBinding"}, "node_bindings": {"$ref": "#/components/schemas/Map_List_TRAPINodeBinding"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "balhoff@renci.org", "name": "Jim Balhoff"}, "description": "TRAPI interface to integrated ontology knowledgebase", "license": {"name": "MIT License", "url": "https://opensource.org/licenses/MIT"}, "termsOfService": "https://opensource.org/licenses/MIT", "title": "Ontology-KP API", "version": "0.1", "x-translator": {"component": "KP", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.1", "paths": {"/query": {"post": {"operationId": "postQuery", "parameters": [{"in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TRAPIQueryRequestBody"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TRAPIResponse"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Submit a TRAPI question graph and retrieve matching solutions"}}, "/predicates": {"get": {"operationId": "getPredicates", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"items": {"items": {"$ref": "#/components/schemas/BiolinkTerm"}, "type": "array"}, "type": "array"}, "type": "array"}}}, "description": ""}, "default": {"content": {"text/plain": {"schema": {"type": "string"}}}, "description": ""}}, "summary": "Get predicates used at this service"}}}, "servers": [{"url": "https://stars-app.renci.org/sparql-kp"}], "tags": [{"name": "translator"}]}, {"_id": "02fdf5136618160a6531a3844bbcde1a", "_meta": {"date_created": "2021-01-26T00:02:44.437058+00:00", "last_updated": "2021-05-06T07:00:47.554835+00:00", "url": "https://automat.renci.org/cord19-scigraph/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:00:36+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:05:53.014294"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A literature co-occurence graph based on scigraph parsing of the CORD-19 paper set. All triples contain covid-19 as either subject or object.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Cord19 Scigraph&provider_long=RENCI", "title": "Automat Cord19 Scigraph", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/cord19-scigraph"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "59dce17363dce279d389100834e43648", "_meta": {"date_created": "2020-12-16T00:00:51.690125+00:00", "last_updated": "2021-05-14T07:00:38.091396+00:00", "slug": "mygene", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mygene.info/openapi_full.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:37+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:05:53.686483"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=refseq.rna\". If \"True\" or \"1\", the returned data object contains a single \"refseq.rna\" field, otherwise (\"False\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default: True.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated fields to limit the fields returned from the matching gene hits. The supported field names can be found from any gene object (e.g. http://mygene.info/v3/gene/1017). Note that it supports dot notation as well, e.g., you can pass \"refseq.rna\". If \"fields=all\", all available fields will be returned. Default: \"symbol,name,taxid,entrezgene,ensemblgene\".", "in": "query", "name": "fields", "schema": {"type": "string"}}, "from": {"description": "the number of matching gene hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "size": {"description": "the maximum number of matching gene hits to return (with a cap of 1000 at the moment). Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order.", "in": "query", "name": "sort", "schema": {"type": "string"}}, "species": {"description": "can be used to limit the gene hits from given species. You can use \"common names\" for nine common species (human, mouse, rat, fruitfly, nematode, zebrafish, thale-cress, frog and pig). All other species, you can provide their taxonomy ids. Multiple species can be passed using comma as a separator. Default: human,mouse,rat.", "in": "query", "name": "species", "schema": {"type": "string"}}}, "schemas": {"Gene": {"properties": {"AnimalQTLdb": {"type": "string"}, "FLYBASE": {"type": "string"}, "HGNC": {"type": "string"}, "HPRD": {"type": "string"}, "MGI": {"type": "string"}, "MIM": {"type": "string"}, "RATMAP": {"type": "string"}, "RGD": {"type": "string"}, "TAIR": {"type": "string"}, "Vega": {"type": "string"}, "WormBase": {"type": "string"}, "Xenbase": {"type": "string"}, "ZFIN": {"type": "string"}, "_id": {"type": "string"}, "accession": {"type": "object"}, "aliase": {"type": "string"}, "ec": {"type": "string"}, "ensembl": {"type": "object"}, "entrezgene": {"format": "int64", "type": "integer"}, "generif": {"properties": {"pubmed": {"$ref": "#/components/schemas/int64_or_array"}, "text": {"type": "string"}}, "type": "object"}, "genomic_pos": {"type": "object"}, "go": {"type": "object"}, "homologene": {"type": "object"}, "interpro": {"type": "object"}, "locus_tag": {"type": "string"}, "map_location": {"type": "string"}, "miRBase": {"type": "string"}, "name": {"type": "string"}, "other_names": {"$ref": "#/components/schemas/string_or_array"}, "pathway": {"type": "object"}, "pdb": {"$ref": "#/components/schemas/string_or_array"}, "pfam": {"type": "string"}, "pharmgkb": {"type": "string"}, "pid": {"type": "string"}, "pir": {"type": "string"}, "prosite": {"type": "string"}, "reagent": {"type": "object"}, "refseq": {"type": "object"}, "reporter": {"type": "object"}, "summary": {"type": "string"}, "symbol": {"type": "string"}, "taxid": {"format": "int32", "type": "integer"}, "type_of_gene": {"type": "string"}, "umls": {"type": "object"}, "unigene": {"type": "string"}, "uniprot": {"properties": {"Swiss-Prot": {"$ref": "#/components/schemas/string_or_array"}, "TrEMBL": {"$ref": "#/components/schemas/string_or_array"}}, "type": "object"}, "wikipedia": {"properties": {"url_stub": {"type": "string"}}, "type": "object"}}, "required": ["_id", "taxid"], "type": "object"}, "MinimalGene": {"properties": {"_id": {"type": "string"}, "entrezgene": {"format": "int64", "type": "integer"}, "name": {"type": "string"}, "symbol": {"type": "string"}, "taxid": {"format": "int32", "type": "integer"}}, "required": ["_id", "taxid"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/MinimalGene"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Gene"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"type": "integer"}, "string_or_array": {"type": "string"}}, "x-bte-kgs-operations": {"BPToGene": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "has_participant", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "go.BP.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "NCBI Gene", "supportBatch": true}], "CCToGene": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "expresses", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "go.CC.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "NCBI Gene", "supportBatch": true}], "GeneToProtein": [{"inputSeparator": ",", "inputs": [{"id": "ENSEMBL", "semantic": "Gene"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "uniprot.Swiss-Prot", "species": "human"}, "predicate": "has_gene_product", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ensembl.gene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/uniprotProtein"}, "source": "UniprotKB", "supportBatch": true}], "MFToGene": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "enabled_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "go.MF.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "NCBI Gene", "supportBatch": true}], "PathwayHasGene": [{"inputSeparator": ",", "inputs": [{"id": "REACT", "semantic": "Pathway"}], "method": "post", "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "has_participant", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "pathway.reactome.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "Reactome", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "KEGG", "semantic": "Pathway"}], "method": "post", "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "has_participant", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "pathway.kegg.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "ConsensusPathDB", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "WIKIPATHWAYS", "semantic": "Pathway"}], "method": "post", "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "has_participant", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "pathway.wikipathways.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "ConsensusPathDB", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "BIOCARTA", "semantic": "Pathway"}], "method": "post", "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "entrezgene", "species": "human"}, "predicate": "has_participant", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "pathway.biocarta.id", "size": 1000}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/entrezgene"}, "source": "ConsensusPathDB", "supportBatch": true}], "ProteinToGene": [{"inputSeparator": ",", "inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "ENSEMBL", "semantic": "Gene"}], "parameters": {"fields": "ensembl.gene", "species": "human"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "uniprot.Swiss-Prot"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ensemblGene"}, "source": "UniprotKB", "supportBatch": true}], "enablesMF": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "go.MF", "species": "human"}, "predicate": "enables", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/molecularFunction"}, "source": "NCBI Gene", "supportBatch": true}], "hasHomolog": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "MGI", "semantic": "Gene"}], "parameters": {"fields": "pantherdb.ortholog"}, "predicate": "homologous_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/pantherMGI"}, "source": "PANTHER", "supportBatch": true}], "hasTranscript": [{"inputSeparator": ",", "inputs": [{"id": "ENSEMBL", "semantic": "Gene"}], "outputs": [{"id": "ENSEMBL", "semantic": "Transcript"}], "parameters": {"fields": "ensembl.transcript", "species": "human"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ensembl.gene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ensemblTranscript"}, "source": "Ensembl", "supportBatch": true}], "involvedInBP": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "go.BP", "species": "human"}, "predicate": "participates_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/biologicalProcess"}, "source": "NCBI Gene", "supportBatch": true}], "involvedInCC": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "go.CC", "species": "human"}, "predicate": "expressed_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/cellularComponent"}, "source": "NCBI Gene", "supportBatch": true}], "involvedInPathway": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "REACT", "semantic": "Pathway"}], "parameters": {"fields": "pathway.reactome", "species": "human"}, "predicate": "participates_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/reactomePathway"}, "source": "Reactome", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "KEGG", "semantic": "Pathway"}], "parameters": {"fields": "pathway.kegg", "species": "human"}, "predicate": "participates_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/keggPathway"}, "source": "ConsensusPathDB", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "WIKIPATHWAYS", "semantic": "Pathway"}], "parameters": {"fields": "pathway.wikipathways", "species": "human"}, "predicate": "participates_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/wikipathway"}, "source": "ConsensusPathDB", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "BIOCARTA", "semantic": "Pathway"}], "parameters": {"fields": "pathway.biocarta", "species": "human"}, "predicate": "participates_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "entrezgene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/biocarta"}, "source": "ConsensusPathDB", "supportBatch": true}]}, "x-bte-response-mapping": {"biocarta": {"BIOCARTA": "pathway.biocarta.id", "name": "pathway.biocarta.name"}, "biologicalProcess": {"GO": "go.BP.id", "evidence": "go.BP.evidence", "name": "go.BP.term", "pubmed": "go.BP.pubmed", "qualifiers": "go.BP.qualifier"}, "cellularComponent": {"GO": "go.CC.id", "evidence": "go.CC.evidence", "name": "go.CC.term", "pubmed": "go.CC.pubmed", "qualifiers": "go.CC.qualifier"}, "ensemblGene": {"ENSEMBL": "ensembl.gene"}, "ensemblProtein": {"ENSEMBL": "ensembl.protein"}, "ensemblTranscript": {"ENSEMBL": "ensembl.transcript"}, "entrezgene": {"NCBIGene": "entrezgene"}, "keggPathway": {"KEGG": "pathway.kegg.id", "name": "pathway.kegg.name"}, "molecularFunction": {"GO": "go.MF.id", "evidence": "go.MF.evidence", "name": "go.MF.term", "pubmed": "go.MF.pubmed", "qualifiers": "go.MF.qualifier"}, "pantherMGI": {"MGI": "pantherdb.ortholog.MGI", "inTaxon": "pantherdb.ortholog.taxid"}, "reactomePathway": {"REACT": "pathway.reactome.id", "name": "pathway.reactome.name"}, "uniprotProtein": {"UniProtKB": "uniprot.Swiss-Prot"}, "wikipathway": {"WIKIPATHWAYS": "pathway.wikipathways.id", "name": "pathway.wikipathways.name"}}}, "info": {"contact": {"email": "help@mygene.info", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the MyGene.info Gene Query web services. Learn more about [MyGene.info](http://mygene.info/)", "termsOfService": "http://mygene.info/terms/", "title": "MyGene.info API", "version": "3.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/gene": {"post": {"parameters": [{"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/species", "name": "species"}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple geneids seperated by comma, e.g., \"ids=1017,1018\" or \"ids=695,ENSG00000123374\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Gene"}, "type": "array"}}}, "description": "a list of matching gene objects"}}, "summary": "For a list of gene ids, return the matching gene objects", "tags": ["annotation"]}}, "/gene/{geneid}": {"get": {"parameters": [{"description": "Entrez or Ensembl gene id, e.g., 1017, ENSG00000170248. A retired Entrez Gene id works too if it is replaced by a new one, e.g., 245794", "example": "1017", "in": "path", "name": "geneid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Gene"}}}, "description": "A matching gene object"}}, "summary": "Retrieve gene annotation object based on Entrez or Ensembl gene id, support JSONP and CORS as well.", "tags": ["annotation"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "name": "callback"}], "responses": {"200": {"description": "MyGene.info metadata object"}}, "summary": "Get metadata about the data available from MyGene.info."}}, "/metadata/fields": {"get": {"parameters": [{"description": "Pass a search term to filter the available fields, e.g. \"search=clinvar\".", "in": "query", "name": "search", "schema": {"type": "string"}}, {"description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".", "in": "query", "name": "prefix", "schema": {"type": "string"}}, {"$ref": "#/components/parameters/callback", "name": "callback"}], "responses": {"200": {"description": "MyGene.info metadata fields object"}}, "summary": "Get metadata about the data fields available from MyGene.info."}}, "/query": {"get": {"parameters": [{"description": "Query string. Examples \"CDK2\", \"NM_052827\", \"204639_at\", \"chr1:151,073,054-151,383,976\", \"hg19.chr1:151073054-151383976\". The detailed query syntax can be found from our [docs](http://docs.mygene.info/en/latest/doc/query_service.html).", "example": "CDK2", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/species", "name": "species"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"description": "a single field or comma-separated fields to return facets, for example, \"facets=taxid\", \"facets=taxid,type_of_gene\".", "in": "query", "name": "facets", "schema": {"type": "string"}}, {"description": "relevant when faceting on species (i.e., \u201cfacets=taxid\u201d are passed). It\u2019s used to pass species filter without changing the scope of faceting, so that the returned facet counts won\u2019t change. Either species name or taxonomy id can be used, just like \u201cspecies\u201d parameter.", "in": "query", "name": "species_facet_filter", "schema": {"type": "string"}}, {"description": "when passed as \u201cTrue\u201d or \u201c1\u201d, the query returns only the hits with valid Entrez gene ids. Default: False.", "in": "query", "name": "entrezonly", "schema": {"type": "boolean"}}, {"description": "when passed as \u201cTrue\u201d or \u201c1\u201d, the query returns only the hits with valid Ensembl gene ids. Default: False.", "in": "query", "name": "ensemblonly", "schema": {"type": "boolean"}}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response object with \"hits\" property"}}, "summary": "Make gene query and return matching gene list. Support JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/species", "name": "species"}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"", "type": "string"}, "scopes": {"description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=entrezgene\", \"scopes=entrezgene,ensemblgene\". The available \"fields\" can be passed to \"scopes\" parameter are listed [here](http://mygene.info/doc/query_service.html#available-fields). Default: \"scopes=entrezgene,ensemblgene,retired\" (either Entrez or Ensembl gene ids).", "type": "string"}}, "required": ["q"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with \"hits\" property"}}, "summary": "Make gene batch query and return matching gene hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/enablesMF"}, {"$ref": "#/components/x-bte-kgs-operations/MFToGene"}, {"$ref": "#/components/x-bte-kgs-operations/involvedInBP"}, {"$ref": "#/components/x-bte-kgs-operations/BPToGene"}, {"$ref": "#/components/x-bte-kgs-operations/involvedInCC"}, {"$ref": "#/components/x-bte-kgs-operations/CCToGene"}, {"$ref": "#/components/x-bte-kgs-operations/involvedInPathway"}, {"$ref": "#/components/x-bte-kgs-operations/hasTranscript"}, {"$ref": "#/components/x-bte-kgs-operations/GeneToProtein"}, {"$ref": "#/components/x-bte-kgs-operations/ProteinToGene"}, {"$ref": "#/components/x-bte-kgs-operations/hasHomolog"}, {"$ref": "#/components/x-bte-kgs-operations/PathwayHasGene"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://mygene.info/v3"}, {"description": "Production server", "url": "http://mygene.info/v3"}], "tags": [{"name": "gene"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "43af91b3d7cae43591083bff9d75c6dd", "_meta": {"date_created": "2021-01-27T00:00:28.388991+00:00", "last_updated": "2021-05-14T07:00:45.247432+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ebi_proteins/openapi.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:44+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:05:52.310888"}, "components": {"schemas": {"Absorption": {"properties": {"max": {"$ref": "#/components/schemas/EvidencedStringType"}, "text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "type": "object"}, "AlternativeName": {"properties": {"ecNumber": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "fullName": {"$ref": "#/components/schemas/EvidencedStringType"}, "shortName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "type": "object"}, "AssociationType": {"properties": {"description": {"type": "string"}, "evidence": {"items": {"$ref": "#/components/schemas/EvidenceType"}, "type": "array"}, "isDisease": {"default": false, "type": "boolean", "xml": {"attribute": true}}, "name": {"type": "string"}, "xrefs": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}}, "required": ["name"], "type": "object"}, "CanonicalGene": {"properties": {"gene": {"$ref": "#/components/schemas/GeneType"}, "relatedGene": {"items": {"$ref": "#/components/schemas/GeneType"}, "type": "array"}}, "required": ["gene"], "type": "object", "xml": {"name": "canonicalGene"}}, "CitationType": {"properties": {"authorList": {"$ref": "#/components/schemas/NameListType"}, "city": {"type": "string", "xml": {"attribute": true}}, "country": {"type": "string", "xml": {"attribute": true}}, "date": {"type": "string", "xml": {"attribute": true}}, "db": {"type": "string", "xml": {"attribute": true}}, "dbReference": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}, "editorList": {"$ref": "#/components/schemas/NameListType"}, "first": {"type": "string", "xml": {"attribute": true}}, "institute": {"type": "string", "xml": {"attribute": true}}, "last": {"type": "string", "xml": {"attribute": true}}, "locator": {"type": "string"}, "name": {"type": "string", "xml": {"attribute": true}}, "number": {"type": "string", "xml": {"attribute": true}}, "publisher": {"type": "string", "xml": {"attribute": true}}, "title": {"type": "string"}, "type": {"type": "string", "xml": {"attribute": true}}, "volume": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "CofactorType": {"properties": {"dbReference": {"$ref": "#/components/schemas/DbReferenceType"}, "evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "name": {"type": "string"}}, "required": ["dbReference", "name"], "type": "object"}, "CommentType": {"properties": {"absorption": {"$ref": "#/components/schemas/Absorption"}, "cofactor": {"items": {"$ref": "#/components/schemas/CofactorType"}, "type": "array"}, "conflict": {"$ref": "#/components/schemas/Conflict"}, "disease": {"$ref": "#/components/schemas/Disease"}, "error": {"type": "string", "xml": {"attribute": true}}, "event": {"items": {"$ref": "#/components/schemas/EventType"}, "type": "array"}, "evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "experiments": {"format": "int32", "type": "integer"}, "interactant": {"items": {"$ref": "#/components/schemas/InteractantType"}, "type": "array"}, "isoform": {"items": {"$ref": "#/components/schemas/IsoformType"}, "type": "array"}, "kinetics": {"$ref": "#/components/schemas/Kinetics"}, "link": {"items": {"$ref": "#/components/schemas/Link"}, "type": "array"}, "location": {"items": {"$ref": "#/components/schemas/LocationType"}, "type": "array"}, "locationType": {"type": "string", "xml": {"attribute": true}}, "mass": {"format": "float", "type": "number", "xml": {"attribute": true}}, "method": {"type": "string", "xml": {"attribute": true}}, "molecule": {"$ref": "#/components/schemas/MoleculeType"}, "name": {"type": "string", "xml": {"attribute": true}}, "organismsDiffer": {"default": false, "type": "boolean"}, "phDependence": {"$ref": "#/components/schemas/PhDependence"}, "redoxPotential": {"$ref": "#/components/schemas/RedoxPotential"}, "subcellularLocation": {"items": {"$ref": "#/components/schemas/SubcellularLocationType"}, "type": "array"}, "temperatureDependence": {"$ref": "#/components/schemas/TemperatureDependence"}, "text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "Component": {"properties": {"allergenName": {"$ref": "#/components/schemas/EvidencedStringType"}, "alternativeName": {"items": {"$ref": "#/components/schemas/AlternativeName"}, "type": "array"}, "biotechName": {"$ref": "#/components/schemas/EvidencedStringType"}, "cdAntigenName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "innName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "recommendedName": {"$ref": "#/components/schemas/RecommendedName"}, "submittedName": {"items": {"$ref": "#/components/schemas/SubmittedName"}, "type": "array"}}, "type": "object"}, "ComponentType": {"properties": {"biosampleId": {"type": "string"}, "description": {"type": "string"}, "genomeAccession": {"items": {"type": "string"}, "type": "array"}, "name": {"type": "string", "xml": {"attribute": true}}, "protein": {"items": {"$ref": "#/components/schemas/ProteinType"}, "type": "array"}}, "required": ["genomeAccession"], "type": "object"}, "Conflict": {"properties": {"ref": {"type": "string", "xml": {"attribute": true}}, "sequence": {"$ref": "#/components/schemas/Sequence"}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "DbReference": {"properties": {"evidences": {"items": {"$ref": "#/components/schemas/Evidence"}, "type": "array"}, "id": {"type": "string"}, "isoform": {"type": "string"}, "properties": {"additionalProperties": {"type": "string"}, "type": "object"}, "type": {"type": "string"}}, "type": "object"}, "DbReferenceObject": {"properties": {"alternativeUrl": {"type": "string", "xml": {"attribute": true}}, "id": {"type": "string", "xml": {"attribute": true}}, "name": {"type": "string", "xml": {"attribute": true}}, "properties": {"type": "object"}, "reviewed": {"default": false, "type": "boolean", "xml": {"attribute": true}}, "url": {"type": "string", "xml": {"attribute": true}}}, "required": ["alternativeUrl", "id", "name", "reviewed", "url"], "type": "object"}, "DbReferenceType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "id": {"type": "string", "xml": {"attribute": true}}, "molecule": {"$ref": "#/components/schemas/MoleculeType"}, "property": {"items": {"$ref": "#/components/schemas/PropertyType"}, "type": "array"}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "Disease": {"properties": {"acronym": {"type": "string"}, "dbReference": {"$ref": "#/components/schemas/DbReferenceType"}, "description": {"type": "string"}, "id": {"type": "string", "xml": {"attribute": true}}, "name": {"type": "string"}}, "required": ["acronym", "dbReference", "description", "name"], "type": "object"}, "DiseaseComment": {"properties": {"acronym": {"type": "string"}, "dbReference": {"$ref": "#/components/schemas/DbReference"}, "description": {"$ref": "#/components/schemas/EvidencedString"}, "diseaseId": {"type": "string"}, "text": {"items": {"$ref": "#/components/schemas/EvidencedString"}, "type": "array"}, "type": {"enum": ["FUNCTION", "CATALYTIC_ACTIVITY", "COFACTOR", "ENZYME_REGULATION", "BIOPHYSICOCHEMICAL_PROPERTIES", "PATHWAY", "SUBUNIT", "INTERACTION", "SUBCELLULAR_LOCATION", "ALTERNATIVE_PRODUCTS", "TISSUE_SPECIFICITY", "DEVELOPMENTAL_STAGE", "INDUCTION", "DOMAIN", "PTM", "RNA_EDITING", "MASS_SPECTROMETRY", "POLYMORPHISM", "DISEASE", "DISRUPTION_PHENOTYPE", "ALLERGEN", "TOXIC_DOSE", "BIOTECHNOLOGY", "PHARMACEUTICAL", "MISCELLANEOUS", "SIMILARITY", "CAUTION", "SEQUENCE_CAUTION", "WEBRESOURCE", "PAGE", "UNKNOWN"], "type": "string"}}, "type": "object"}, "Domain": {"properties": {"allergenName": {"$ref": "#/components/schemas/EvidencedStringType"}, "alternativeName": {"items": {"$ref": "#/components/schemas/AlternativeName"}, "type": "array"}, "biotechName": {"$ref": "#/components/schemas/EvidencedStringType"}, "cdAntigenName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "innName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "recommendedName": {"$ref": "#/components/schemas/RecommendedName"}, "submittedName": {"items": {"$ref": "#/components/schemas/SubmittedName"}, "type": "array"}}, "type": "object"}, "Entry": {"properties": {"accession": {"items": {"type": "string"}, "type": "array"}, "comment": {"items": {"$ref": "#/components/schemas/CommentType"}, "type": "array"}, "created": {"format": "date-time", "type": "string", "xml": {"attribute": true}}, "dataset": {"type": "string", "xml": {"attribute": true}}, "dbReference": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}, "evidence": {"items": {"$ref": "#/components/schemas/EvidenceType"}, "type": "array"}, "feature": {"items": {"$ref": "#/components/schemas/FeatureType"}, "type": "array"}, "gene": {"items": {"$ref": "#/components/schemas/GeneType"}, "type": "array"}, "geneLocation": {"items": {"$ref": "#/components/schemas/GeneLocationType"}, "type": "array"}, "keyword": {"items": {"$ref": "#/components/schemas/KeywordType"}, "type": "array"}, "modified": {"format": "date-time", "type": "string", "xml": {"attribute": true}}, "name": {"items": {"type": "string"}, "type": "array"}, "organism": {"$ref": "#/components/schemas/OrganismType"}, "organismHost": {"items": {"$ref": "#/components/schemas/OrganismType"}, "type": "array"}, "protein": {"$ref": "#/components/schemas/ProteinType"}, "proteinExistence": {"$ref": "#/components/schemas/ProteinExistenceType"}, "reference": {"items": {"$ref": "#/components/schemas/ReferenceType"}, "type": "array"}, "sequence": {"$ref": "#/components/schemas/SequenceType"}, "version": {"format": "int32", "type": "integer", "xml": {"attribute": true}}}, "required": ["accession", "name", "organism", "protein", "proteinExistence", "reference", "sequence"], "type": "object", "xml": {"name": "entry"}}, "ErrorMessage": {"properties": {"errorMessage": {"items": {"type": "string"}, "type": "array", "xml": {"name": "errorMessages", "wrapped": true}}, "requestedURL": {"type": "string"}}, "type": "object"}, "EventType": {"properties": {"type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "Evidence": {"properties": {"code": {"pattern": "^ECO:[0-9]{7}$", "type": "string", "xml": {"attribute": true}}, "label": {"type": "string", "xml": {"attribute": true}}, "source": {"$ref": "#/components/schemas/DbReferenceObject"}}, "required": ["code", "source"], "type": "object"}, "EvidenceType": {"properties": {"importedFrom": {"$ref": "#/components/schemas/ImportedFromType"}, "key": {"type": "integer", "xml": {"attribute": true}}, "source": {"$ref": "#/components/schemas/SourceType"}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "EvidencedString": {"properties": {"evidences": {"items": {"$ref": "#/components/schemas/Evidence"}, "type": "array"}, "value": {"type": "string"}}, "type": "object"}, "EvidencedStringType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "status": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "ExonMapType": {"properties": {"genomeLocation": {"$ref": "#/components/schemas/LocationType"}, "id": {"type": "string", "xml": {"attribute": true}}, "proteinLocation": {"$ref": "#/components/schemas/LocationType"}}, "required": ["genomeLocation", "proteinLocation"], "type": "object"}, "Feature": {"properties": {"alternativeSequence": {"type": "string", "xml": {"attribute": true}}, "begin": {"pattern": "^(\\?|<?[1-9][0-9]*)$", "type": "string", "xml": {"attribute": true}}, "category": {"enum": ["MOLECULE_PROCESSING", "STRUCTURAL", "DOMAINS_AND_SITES", "MUTAGENESIS", "PTM", "SEQUENCE_INFORMATION", "TOPOLOGY", "VARIANTS"], "type": "string", "xml": {"attribute": true}}, "cvId": {"type": "string", "xml": {"attribute": true}}, "description": {"type": "string", "xml": {"attribute": true}}, "end": {"pattern": "^(\\?|[1-9][0-9]*>?)$", "type": "string", "xml": {"attribute": true}}, "evidences": {"items": {"$ref": "#/components/schemas/Evidence"}, "type": "array"}, "ftId": {"type": "string", "xml": {"attribute": true}}, "molecule": {"type": "string", "xml": {"attribute": true}}, "type": {"type": "string", "xml": {"attribute": true}}, "xrefs": {"items": {"$ref": "#/components/schemas/DbReferenceObject"}, "type": "array"}}, "required": ["begin", "category", "end", "evidences", "type"], "type": "object"}, "FeatureType": {"properties": {"description": {"type": "string", "xml": {"attribute": true}}, "evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "id": {"type": "string", "xml": {"attribute": true}}, "location": {"$ref": "#/components/schemas/LocationType"}, "original": {"type": "string"}, "ref": {"type": "string", "xml": {"attribute": true}}, "status": {"type": "string", "xml": {"attribute": true}}, "type": {"type": "string", "xml": {"attribute": true}}, "variation": {"items": {"type": "string"}, "type": "array"}}, "required": ["location"], "type": "object"}, "GeneLocationType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "name": {"items": {"$ref": "#/components/schemas/StatusType"}, "type": "array"}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "GeneNameType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "type": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "GeneType": {"properties": {"name": {"items": {"$ref": "#/components/schemas/GeneNameType"}, "type": "array"}}, "required": ["name"], "type": "object"}, "GenomicLocationType": {"properties": {"chromosome": {"type": "string", "xml": {"attribute": true}}, "end": {"format": "int64", "type": "integer", "xml": {"attribute": true}}, "exon": {"items": {"$ref": "#/components/schemas/ExonMapType"}, "type": "array"}, "reverseStrand": {"default": false, "type": "boolean", "xml": {"attribute": true, "name": "reverse_strand"}}, "start": {"format": "int64", "type": "integer", "xml": {"attribute": true}}}, "required": ["exon"], "type": "object"}, "GnCoordinateType": {"properties": {"ensemblGeneId": {"type": "string", "xml": {"attribute": true, "name": "ensembl_gene_id"}}, "ensemblTranscriptId": {"type": "string", "xml": {"attribute": true, "name": "ensembl_transcript_id"}}, "ensemblTranslationId": {"type": "string", "xml": {"attribute": true, "name": "ensembl_translation_id"}}, "feature": {"items": {"$ref": "#/components/schemas/GnFeatureType"}, "type": "array"}, "genomicLocation": {"$ref": "#/components/schemas/GenomicLocationType"}}, "required": ["genomicLocation"], "type": "object"}, "GnEntry": {"properties": {"accession": {"type": "string"}, "gene": {"items": {"$ref": "#/components/schemas/GeneNameType"}, "type": "array"}, "gnCoordinate": {"items": {"$ref": "#/components/schemas/GnCoordinateType"}, "type": "array"}, "name": {"type": "string"}, "protein": {"$ref": "#/components/schemas/ProteinType"}, "sequence": {"type": "string"}, "taxid": {"format": "int32", "type": "integer"}}, "required": ["accession", "name", "protein", "sequence"], "type": "object", "xml": {"name": "gnEntry"}}, "GnFeatureType": {"properties": {"description": {"type": "string"}, "evidence": {"items": {"$ref": "#/components/schemas/EvidenceType"}, "type": "array"}, "genomeLocation": {"$ref": "#/components/schemas/LocationType"}, "id": {"type": "string", "xml": {"attribute": true}}, "location": {"$ref": "#/components/schemas/LocationType"}, "original": {"type": "string"}, "peptide": {"$ref": "#/components/schemas/PeptideType"}, "type": {"type": "string", "xml": {"attribute": true}}, "variant": {"$ref": "#/components/schemas/VariantType"}, "variation": {"items": {"type": "string"}, "type": "array"}, "xrefs": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}}, "required": ["description", "genomeLocation", "location"], "type": "object"}, "ImportedFromType": {"properties": {"dbReference": {"$ref": "#/components/schemas/DbReferenceType"}}, "required": ["dbReference"], "type": "object"}, "IntAct": {"properties": {"experiments": {"format": "int32", "type": "integer"}, "gene": {"type": "string"}, "id": {"type": "string"}, "interactionType": {"type": "string"}, "interactor1": {"type": "string"}, "interactor2": {"type": "string"}}, "required": ["id", "interactionType"], "type": "object"}, "InteractantType": {"properties": {"id": {"type": "string"}, "intactId": {"type": "string", "xml": {"attribute": true}}, "label": {"type": "string"}}, "type": "object"}, "IsoformType": {"properties": {"id": {"items": {"type": "string"}, "type": "array"}, "name": {"items": {"$ref": "#/components/schemas/Name"}, "type": "array"}, "sequence": {"$ref": "#/components/schemas/Sequence"}, "text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["id", "name", "sequence"], "type": "object"}, "JournalType": {"properties": {"dbReference": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}, "first": {"type": "string", "xml": {"attribute": true}}, "last": {"type": "string", "xml": {"attribute": true}}, "name": {"type": "string", "xml": {"attribute": true}}, "title": {"type": "string"}, "volume": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "KeywordType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "id": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "Kinetics": {"properties": {"km": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array", "xml": {"name": "KM"}}, "text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "vmax": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array", "xml": {"name": "Vmax"}}}, "type": "object"}, "Lineage": {"properties": {"taxon": {"items": {"type": "string"}, "type": "array"}}, "required": ["taxon"], "type": "object"}, "Link": {"properties": {"uri": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "LocationType": {"properties": {"begin": {"$ref": "#/components/schemas/PositionType"}, "end": {"$ref": "#/components/schemas/PositionType"}, "position": {"$ref": "#/components/schemas/PositionType"}, "sequence": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "MoleculeType": {"properties": {"id": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "Name": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "value": {"type": "string"}}, "type": "object"}, "NameListType": {"properties": {"consortiumOrPerson": {"items": {"type": "object"}, "type": "array"}}, "type": "object"}, "OrganismNameType": {"properties": {"type": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "OrganismType": {"properties": {"dbReference": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}, "evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "lineage": {"$ref": "#/components/schemas/Lineage"}, "name": {"items": {"$ref": "#/components/schemas/OrganismNameType"}, "type": "array"}}, "required": ["dbReference", "name"], "type": "object"}, "PLocation2GLocation": {"properties": {"accession": {"type": "string"}, "chromosome": {"type": "string"}, "ensemblTranslationId": {"type": "string"}, "geneEnd": {"format": "int64", "type": "integer"}, "geneStart": {"format": "int64", "type": "integer"}, "proteinEnd": {"format": "int32", "type": "integer"}, "proteinStart": {"format": "int32", "type": "integer"}, "taxid": {"format": "int32", "type": "integer"}}, "type": "object", "xml": {"name": "GenomeLocation"}}, "PLocation2GLocationCollection": {"properties": {"locations": {"items": {"$ref": "#/components/schemas/PLocation2GLocation"}, "type": "array"}}, "type": "object", "xml": {"name": "genomeLocation"}}, "PeptideType": {"properties": {"peptideSequence": {"type": "string"}, "unique": {"default": false, "type": "boolean", "xml": {"attribute": true}}}, "required": ["peptideSequence"], "type": "object"}, "PhDependence": {"properties": {"text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["text"], "type": "object"}, "PolyphenPredictionType": {"properties": {"predication": {"type": "string", "xml": {"attribute": true}}, "score": {"format": "double", "type": "number", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "PositionType": {"properties": {"evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "position": {"type": "integer", "xml": {"attribute": true}}, "status": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "PropertyType": {"properties": {"type": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "ProteinExistenceType": {"properties": {"type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "ProteinFeatureInfo": {"properties": {"accession": {"pattern": "(^([OPQ][0-9][A-Z,0-9]{3}[0-9])(-(\\d+))?$)|(^([A-NR-Z]([0-9][A-Z][A-Z0-9]{2}){1,2}[0-9])(-(\\d+))?$)", "type": "string", "xml": {"attribute": true}}, "entryName": {"pattern": "(^\\w+_\\w+$)", "type": "string", "xml": {"attribute": true}}, "features": {"items": {"$ref": "#/components/schemas/Feature"}, "type": "array"}, "geneName": {"type": "string", "xml": {"attribute": true}}, "geteGeneId": {"description": "Ensembl Gene ID", "type": "string", "xml": {"attribute": true}}, "geteProteinId": {"type": "string", "xml": {"attribute": true}}, "organismName": {"type": "string", "xml": {"attribute": true}}, "proteinExistence": {"type": "string", "xml": {"attribute": true}}, "proteinName": {"type": "string", "xml": {"attribute": true}}, "sequence": {"type": "string", "xml": {"attribute": true}}, "sequenceChecksum": {"type": "string", "xml": {"attribute": true}}, "sequenceVersion": {"format": "int32", "type": "integer", "xml": {"attribute": true}}, "taxid": {"description": "UniProt taxonomy ID", "format": "int32", "type": "integer", "xml": {"attribute": true}}, "version": {"type": "string"}}, "required": ["accession", "entryName", "features", "sequence", "version"], "type": "object"}, "ProteinNameType": {"properties": {"fullName": {"type": "string"}, "shortName": {"items": {"type": "string"}, "type": "array"}}, "required": ["fullName"], "type": "object"}, "ProteinType": {"properties": {"allergenName": {"$ref": "#/components/schemas/EvidencedStringType"}, "alternativeName": {"items": {"$ref": "#/components/schemas/AlternativeName"}, "type": "array"}, "biotechName": {"$ref": "#/components/schemas/EvidencedStringType"}, "cdAntigenName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "component": {"items": {"$ref": "#/components/schemas/Component"}, "type": "array"}, "domain": {"items": {"$ref": "#/components/schemas/Domain"}, "type": "array"}, "innName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "recommendedName": {"$ref": "#/components/schemas/RecommendedName"}, "submittedName": {"items": {"$ref": "#/components/schemas/SubmittedName"}, "type": "array"}}, "type": "object"}, "Proteome": {"properties": {"canonicalGene": {"items": {"$ref": "#/components/schemas/CanonicalGene"}, "type": "array"}, "component": {"items": {"$ref": "#/components/schemas/ComponentType"}, "type": "array"}, "dbReference": {"items": {"$ref": "#/components/schemas/DbReferenceType"}, "type": "array"}, "description": {"type": "string"}, "isReferenceProteome": {"default": false, "type": "boolean"}, "isRepresentativeProteome": {"default": false, "type": "boolean"}, "isolate": {"type": "string"}, "modified": {"format": "date-time", "type": "string", "xml": {"attribute": true}}, "name": {"type": "string"}, "redundantProteome": {"items": {"$ref": "#/components/schemas/RedundantProteomeType"}, "type": "array"}, "redundantTo": {"type": "string"}, "reference": {"items": {"$ref": "#/components/schemas/ReferenceType"}, "type": "array"}, "source": {"type": "string", "xml": {"attribute": true}}, "sourceTaxonomy": {"format": "int64", "type": "integer", "xml": {"attribute": true}}, "strain": {"type": "string"}, "superregnum": {"enum": ["EUKARYOTA", "BACTERIA", "VIRUSES", "ARCHAEA"], "type": "string", "xml": {"attribute": true}}, "taxonomy": {"format": "int64", "type": "integer", "xml": {"attribute": true}}, "upid": {"type": "string", "xml": {"attribute": true}}}, "required": ["component", "name"], "type": "object", "xml": {"name": "proteome"}}, "RecommendedName": {"properties": {"ecNumber": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "fullName": {"$ref": "#/components/schemas/EvidencedStringType"}, "shortName": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["fullName"], "type": "object"}, "RedoxPotential": {"properties": {"text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["text"], "type": "object"}, "RedundantProteomeType": {"properties": {"similarity": {"format": "float", "type": "number", "xml": {"attribute": true}}, "upid": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "ReferenceType": {"properties": {"citation": {"$ref": "#/components/schemas/CitationType"}, "evidence": {"items": {"format": "int32", "type": "integer"}, "type": "array"}, "key": {"type": "string", "xml": {"attribute": true}}, "scope": {"items": {"type": "string"}, "type": "array"}, "source": {"$ref": "#/components/schemas/SourceDataType"}}, "required": ["citation", "scope"], "type": "object"}, "SeqFeatureGroupType": {"properties": {"id": {"type": "string", "xml": {"attribute": true}}, "name": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "SeqFeatureType": {"properties": {"database": {"type": "string", "xml": {"attribute": true}}, "id": {"type": "string", "xml": {"attribute": true}}, "ipr": {"$ref": "#/components/schemas/SeqFeatureGroupType"}, "lcn": {"items": {"$ref": "#/components/schemas/LocationType"}, "type": "array"}}, "required": ["lcn"], "type": "object"}, "Sequence": {"properties": {"ref": {"type": "string", "xml": {"attribute": true}}, "type": {"type": "string", "xml": {"attribute": true}}}, "type": "object"}, "SequenceType": {"properties": {"checksum": {"type": "string", "xml": {"attribute": true}}, "fragment": {"type": "string", "xml": {"attribute": true}}, "length": {"format": "int32", "type": "integer", "xml": {"attribute": true}}, "mass": {"format": "int32", "type": "integer", "xml": {"attribute": true}}, "modified": {"format": "date-time", "type": "string", "xml": {"attribute": true}}, "precursor": {"default": false, "type": "boolean", "xml": {"attribute": true}}, "value": {"type": "string"}, "version": {"format": "int32", "type": "integer", "xml": {"attribute": true}}}, "type": "object"}, "SiftPredictionType": {"properties": {"predication": {"type": "string", "xml": {"attribute": true}}, "score": {"format": "double", "type": "number", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "SourceDataType": {"properties": {"strainOrPlasmidOrTransposon": {"items": {"type": "object"}, "type": "array"}}, "type": "object"}, "SourceType": {"properties": {"dbReference": {"$ref": "#/components/schemas/DbReferenceType"}, "ref": {"type": "integer", "xml": {"attribute": true}}}, "type": "object"}, "StatusType": {"properties": {"status": {"type": "string", "xml": {"attribute": true}}, "value": {"type": "string"}}, "type": "object"}, "SubcellLocationComment": {"properties": {"locations": {"items": {"$ref": "#/components/schemas/SubcellularLocation"}, "type": "array"}, "molecule": {"type": "string"}, "text": {"items": {"$ref": "#/components/schemas/EvidencedString"}, "type": "array"}, "type": {"enum": ["FUNCTION", "CATALYTIC_ACTIVITY", "COFACTOR", "ENZYME_REGULATION", "BIOPHYSICOCHEMICAL_PROPERTIES", "PATHWAY", "SUBUNIT", "INTERACTION", "SUBCELLULAR_LOCATION", "ALTERNATIVE_PRODUCTS", "TISSUE_SPECIFICITY", "DEVELOPMENTAL_STAGE", "INDUCTION", "DOMAIN", "PTM", "RNA_EDITING", "MASS_SPECTROMETRY", "POLYMORPHISM", "DISEASE", "DISRUPTION_PHENOTYPE", "ALLERGEN", "TOXIC_DOSE", "BIOTECHNOLOGY", "PHARMACEUTICAL", "MISCELLANEOUS", "SIMILARITY", "CAUTION", "SEQUENCE_CAUTION", "WEBRESOURCE", "PAGE", "UNKNOWN"], "type": "string"}}, "type": "object"}, "SubcellularLocation": {"properties": {"location": {"$ref": "#/components/schemas/EvidencedString"}, "orientation": {"$ref": "#/components/schemas/EvidencedString"}, "topology": {"$ref": "#/components/schemas/EvidencedString"}}, "type": "object"}, "SubcellularLocationType": {"properties": {"location": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "orientation": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "topology": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["location"], "type": "object"}, "SubmissionType": {"properties": {"citation": {"type": "string"}, "db": {"type": "string", "xml": {"attribute": true}}}, "required": ["citation"], "type": "object"}, "SubmittedName": {"properties": {"ecNumber": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}, "fullName": {"$ref": "#/components/schemas/EvidencedStringType"}}, "required": ["fullName"], "type": "object"}, "TemperatureDependence": {"properties": {"text": {"items": {"$ref": "#/components/schemas/EvidencedStringType"}, "type": "array"}}, "required": ["text"], "type": "object"}, "UPInteraction": {"properties": {"accession": {"type": "string"}, "diseases": {"items": {"$ref": "#/components/schemas/DiseaseComment"}, "type": "array"}, "interactions": {"items": {"$ref": "#/components/schemas/IntAct"}, "type": "array"}, "name": {"type": "string"}, "proteinExistence": {"type": "string"}, "subcellularLocations": {"items": {"$ref": "#/components/schemas/SubcellLocationComment"}, "type": "array"}, "taxonomy": {"format": "int64", "type": "integer"}}, "required": ["accession", "interactions", "name", "proteinExistence", "taxonomy"], "type": "object"}, "UniparcSequenceParam": {"properties": {"sequence": {"pattern": "[A-Z]+", "type": "string"}}, "required": ["sequence"], "type": "object", "xml": {"name": "body"}}, "VariantType": {"properties": {"association": {"items": {"$ref": "#/components/schemas/AssociationType"}, "type": "array"}, "clinicalSignificance": {"type": "string"}, "consequenceType": {"type": "string"}, "cytogeneticBand": {"type": "string"}, "frequency": {"format": "double", "type": "number"}, "genomicLocation": {"type": "string"}, "mutatedType": {"type": "string"}, "polyphenPrediction": {"$ref": "#/components/schemas/PolyphenPredictionType"}, "siftPrediction": {"$ref": "#/components/schemas/SiftPredictionType"}, "somaticStatus": {"default": false, "type": "boolean"}, "sourceType": {"type": "string", "xml": {"attribute": true}}, "wildType": {"type": "string"}}, "required": ["clinicalSignificance", "consequenceType", "cytogeneticBand", "genomicLocation", "mutatedType", "polyphenPrediction", "siftPrediction", "wildType"], "type": "object"}}, "x-bte-kgs-operations": {"gene_to_rhea_reaction": [{"inputs": [{"id": "UniProtKB", "semantic": "Gene"}], "outputs": [{"id": "RHEA", "semantic": "MolecularActivity"}], "parameters": {"accession": "{inputs[0]}"}, "predicate": "enables", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/rheaReaction"}, "source": "UniProtKB", "supportBatch": false}], "protein_to_rhea_reaction": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "RHEA", "semantic": "MolecularActivity"}], "parameters": {"accession": "{inputs[0]}"}, "predicate": "enables", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/rheaReaction"}, "source": "UniProtKB", "supportBatch": false}]}, "x-bte-response-mapping": {"rheaReaction": {"RHEA": "comments.reaction.dbReferences.id", "name": "comments.reaction.name"}}}, "info": {"contact": {"name": "UniProt (EBI)", "url": "https://www.ebi.ac.uk/proteins/api/doc/contact.html"}, "description": "The Proteins REST API provides access to key biological data from UniProt and data from Large Scale Studies (LSS) mapped to UniProt. The services provide sequence feature annotations from UniProtKB, variation data from UniProtKB and mapped from LSS (1000 Genomes, ExAC, ClinVar, TCGA, COSMIC, TOPMed and gnomAD), proteomics data mapped from MS-proteomics repositories (PeptideAtlas, MaxQB, EPD and ProteomicsDB), antigen sequences mapped from Human Protein Atlas (HPA), proteomes and taxonomy search and retrieval, reference genome coordinate mappings and data from UniParc. Go to https://www.ebi.ac.uk/proteins/api/doc/ to learn more.", "termsOfService": "https://www.ebi.ac.uk/about/terms-of-use/", "title": "EBI Proteins API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/antigen": {"get": {"description": "", "operationId": "searchAntigen", "parameters": [{"description": "Off-set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "Antigen sequence", "in": "query", "name": "antigen_sequence", "required": false, "schema": {"maxItems": 2147483647, "minItems": 4, "type": "string"}}, {"description": "Human Protein Atlas (HPA) antigen ID. Comma separated values accepted up to 20.", "in": "query", "name": "antigen_id", "required": false, "schema": {"maxItems": 2147483647, "minItems": 4, "type": "string"}}, {"description": "Ensembl IDs. Comma separated values accepted up to 20.", "in": "query", "name": "ensembl_ids", "required": false, "schema": {"maxItems": 2147483647, "minItems": 4, "type": "string"}}, {"description": "Minimum alignment score for the antigen sequence and the target protein sequence", "in": "query", "name": "match_score", "required": false, "schema": {"format": "int32", "maximum": 100, "minimum": 0, "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search antigens in UniProt", "tags": ["antigen"]}}, "/antigen/{accession}": {"get": {"description": "", "operationId": "getAntigenByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get antigen by UniProt accession", "tags": ["antigen"]}}, "/coordinates": {"get": {"description": "", "operationId": "searchCoordinates", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "Chromosome name, i.e. 1, 2, X, etc. Comma separated values accepted up to 20.", "in": "query", "name": "chromosome", "required": false, "schema": {"maxItems": 50, "minItems": 1, "type": "string"}}, {"description": "Ensembl gene ID, transcript ID or translation ID. Comma separated values accepted up to 20.", "in": "query", "name": "ensembl", "required": false, "schema": {"maxItems": 100, "minItems": 6, "type": "string"}}, {"description": "UniProt gene name. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "UniProt protein name", "in": "query", "name": "protein", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "Genome location range such as 58205437-58219305 (genome start to genome end)", "in": "query", "name": "location", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search genomic coordinates for UniProt entries", "tags": ["coordinates"]}}, "/coordinates/location/{accession}:{pPosition}": {"get": {"description": "", "operationId": "getGenomePositionByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}, {"in": "path", "name": "pPosition", "required": true, "schema": {"format": "int32", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PLocation2GLocationCollection"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/PLocation2GLocationCollection"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get genome coordinate by protein sequence position", "tags": ["coordinates"]}}, "/coordinates/location/{accession}:{pStart}-{pEnd}": {"get": {"description": "", "operationId": "getGenomeLocationByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}, {"in": "path", "name": "pStart", "required": true, "schema": {"format": "int32", "type": "integer"}}, {"in": "path", "name": "pEnd", "required": true, "schema": {"format": "int32", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PLocation2GLocationCollection"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/PLocation2GLocationCollection"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get genome coordinate by protein sequence position range", "tags": ["coordinates"]}}, "/coordinates/{accession}": {"get": {"description": "", "operationId": "getCoordinatesByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GnEntry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/GnEntry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get genomic coordinates for a UniProt accession", "tags": ["coordinates"]}}, "/coordinates/{dbtype}:{dbid}": {"get": {"description": "", "operationId": "getByDbXRef", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Cross-reference database type: Ensembl, CCDC, HGNC or RefSeq", "in": "path", "name": "dbtype", "required": true, "schema": {"type": "string"}}, {"description": "Cross reference ID, such as ENSP00000351276 for Ensembl, NP_083392 for RefSeq, CCDS52493 for CCDS, 26588 for HGNC, (case insensitive).", "in": "path", "name": "dbid", "required": true, "schema": {"maxItems": 50, "minItems": 4, "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search UniProt entries by genomic database cross reference IDs: Ensembl, CCDS, HGNC or RefSeq", "tags": ["coordinates"]}}, "/coordinates/{taxonomy}/{locations}": {"get": {"description": "", "operationId": "getByLocation", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Organism taxon ID", "in": "path", "name": "taxonomy", "required": true, "schema": {"type": "string"}}, {"description": "genomic locations such as x:58205437-58219305,12452535-12452536,2:32452, before colon is the chromosome such as x:58205437-58219305, or without chromosome such as 12452535-12452536, means any chromosome", "in": "path", "name": "locations", "required": true, "schema": {"type": "string"}}, {"description": "When it is set to true for location search, only those entries that are in the range will be retrieved", "in": "query", "name": "in_range", "required": false, "schema": {"type": "boolean"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/GnEntry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search UniProt entries by taxonomy and genomic coordinates", "tags": ["coordinates"]}}, "/features": {"get": {"description": "", "operationId": "searchFeatures", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "The reviewed parameter can only be true or false", "in": "query", "name": "reviewed", "required": false, "schema": {"type": "string"}}, {"description": "UniProt gene name. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"maxItems": 100, "minItems": 3, "type": "string"}}, {"description": "UniProt exact gene name. Comma separated values accepted up to 20.", "in": "query", "name": "exact_gene", "required": false, "schema": {"maxItems": 100, "minItems": 3, "type": "string"}}, {"description": "UniProt protein name", "in": "query", "name": "protein", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism name", "in": "query", "name": "organism", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "Category type(s): MOLECULE_PROCESSING, TOPOLOGY, SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS, MUTAGENESIS. Comma separated values accepted up to 20", "in": "query", "name": "categories", "required": false, "schema": {"type": "string"}}, {"description": "Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE, TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND, NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING, SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK, VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER, HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to 20", "in": "query", "name": "types", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search protein sequence features in UniProt", "tags": ["features"]}}, "/features/type/{type}": {"get": {"description": "", "operationId": "searchFeatureType", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Feature type: INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE, TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND, NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING, SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK, VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER, HELIX, TURN, STRAND, INTRAMEM", "in": "path", "name": "type", "required": true, "schema": {"type": "string"}}, {"description": "Category type(s): MOLECULE_PROCESSING, TOPOLOGY, SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS, MUTAGENESIS. Comma separated values accepted up to 20", "explode": true, "in": "query", "name": "categories", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}}, {"description": "Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE, TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND, NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING, SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK, VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER, HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to 20", "explode": true, "in": "query", "name": "types", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}}, {"description": "Search for term(s) that appear in feature description for your specified feature type. For example, you can search by type=DOMAIN and Term=Kinase.  Comma separated values accepted up to 20.", "explode": true, "in": "query", "name": "terms", "required": true, "schema": {"items": {"type": "string"}, "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search protein sequence features of a given type in UniProt", "tags": ["features"]}}, "/features/{accession}": {"get": {"description": "", "operationId": "getFeaturesByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}, {"description": "Category type(s): MOLECULE_PROCESSING, TOPOLOGY, SEQUENCE_INFORMATION, STRUCTURAL, DOMAINS_AND_SITES, PTM, VARIANTS, MUTAGENESIS. Comma separated values accepted up to 20", "explode": true, "in": "query", "name": "categories", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}}, {"description": "Feature type(s): INIT_MET, SIGNAL, PROPEP, TRANSIT, CHAIN, PEPTIDE, TOPO_DOM, TRANSMEM, DOMAIN, REPEAT, CA_BIND, ZN_FING, DNA_BIND, NP_BIND, REGION, COILED, MOTIF, COMPBIAS, ACT_SITE, METAL, BINDING, SITE, NON_STD, MOD_RES, LIPID, CARBOHYD, DISULFID, CROSSLNK, VAR_SEQ, VARIANT, MUTAGEN, UNSURE, CONFLICT, NON_CONS, NON_TER, HELIX, TURN, STRAND, INTRAMEM. Comma separated values accepted up to 20", "explode": true, "in": "query", "name": "types", "required": false, "schema": {"items": {"type": "string"}, "type": "array"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt protein sequence features by accession ", "tags": ["features"]}}, "/genecentric": {"get": {"description": "", "operationId": "getGeneCentricByUpid", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt proteome UPID(s). Comma separated values accepted up to 100.", "in": "query", "name": "upid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "It is a unique gene identifier found in MOD, Ensembl, Ensembl Genomes, OLN ,ORF or UniProt Gene Name database. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CanonicalGene"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/CanonicalGene"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search gene centric proteins", "tags": ["genecentric"]}}, "/genecentric/{accession}": {"get": {"description": "", "operationId": "getGeneCentricByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CanonicalGene"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/CanonicalGene"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get gene centric proteins by Uniprot accession", "tags": ["genecentric"]}}, "/proteins": {"get": {"description": "", "operationId": "searchProteins", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "Reviewed(true) or not Reviewed (false)", "in": "query", "name": "reviewed", "required": false, "schema": {"type": "string"}}, {"description": "0 for excluding isoform, 1 for isoform only and 2 for both canonical and isoform", "in": "query", "name": "isoform", "required": false, "schema": {"format": "int32", "type": "integer"}}, {"description": "GO ontology terms", "in": "query", "name": "goterms", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "UniProt keywords", "in": "query", "name": "keywords", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "UniProt EC number. Comma separated values accepted up to 20.", "in": "query", "name": "ec", "required": false, "schema": {"type": "string"}}, {"description": "UniProt gene name. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "UniProt exact gene name. Comma separated values accepted up to 20.", "in": "query", "name": "exact_gene", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "UniProt protein name", "in": "query", "name": "protein", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism name", "in": "query", "name": "organism", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt reference PubMed ID. Comma separated values accepted up to 20.", "in": "query", "name": "pubmed", "required": false, "schema": {"type": "string"}}, {"description": "Sequence length. Sequence length can be a single length value such as 123 or range 123-234", "in": "query", "name": "seqLength", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Sequence md5 value.", "in": "query", "name": "md5", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search UniProt entries", "tags": ["proteins"]}}, "/proteins/covid-19/entries": {"get": {"description": "", "operationId": "covidProteins", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt entries by UniProt cross reference and its ID", "tags": ["proteins"]}}, "/proteins/interaction/{accession}": {"get": {"description": "", "operationId": "getAllInteractionEntries", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/UPInteraction"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/UPInteraction"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt interactions by accession", "tags": ["proteins"]}}, "/proteins/{accession}": {"get": {"description": "", "operationId": "getProteinsByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Entry"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/Entry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt entry by accession", "tags": ["proteins"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene_to_rhea_reaction"}, {"$ref": "#/components/x-bte-kgs-operations/protein_to_rhea_reaction"}]}}, "/proteins/{accession}/isoforms": {"get": {"description": "", "operationId": "getEntriesForIsoforms", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt isoform entries from parent entry accession", "tags": ["proteins"]}}, "/proteins/{dbtype}:{dbid}": {"get": {"description": "", "operationId": "getByCrossReference", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Cross reference database type, e.g, Ensembl, PDBe, etc. ", "in": "path", "name": "dbtype", "required": true, "schema": {"type": "string"}}, {"description": "Cross-reference ID, e.g. ENSP00000351276 for Ensembl", "in": "path", "name": "dbid", "required": true, "schema": {"maxItems": 50, "minItems": 4, "type": "string"}}, {"description": "Reviewed(true) or not Reviewed (false)", "in": "query", "name": "reviewed", "required": false, "schema": {"type": "string"}}, {"description": "0 for exclude isoform only and 1 for isoform only", "in": "query", "name": "isoform", "required": false, "schema": {"format": "int32", "type": "integer"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniProt entries by UniProt cross reference and its ID", "tags": ["proteins"]}}, "/proteomes": {"get": {"description": "", "operationId": "searchProteomes", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt proteome UPID(s). Comma separated values accepted up to 100.", "in": "query", "name": "upid", "required": false, "schema": {"type": "string"}}, {"description": "Search proteome name", "in": "query", "name": "name", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "Terms the proteome contains", "in": "query", "name": "keyword", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Proteome cross references such as Genome assembly ID or Biosample ID. Comma separated values accepted up to 20.", "in": "query", "name": "xref", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Genome accession. Comma separated values accepted up to 20.", "in": "query", "name": "genome_acc", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Reference Proteome(true) or not reference proteome (false)", "in": "query", "name": "is_ref_proteome", "required": false, "schema": {"type": "string"}}, {"description": "Redundant Proteome(true) or non redundant proteome (false)", "in": "query", "name": "is_redundant", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Proteome"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Proteome"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search proteomes in UniProt", "tags": ["proteomes"]}}, "/proteomes/genecentric/{upid}": {"get": {"deprecated": true, "description": "", "operationId": "getGeneCentricByUpidDeprecated", "parameters": [{"description": "UniProt Proteome UPID", "in": "path", "name": "upid", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Proteome"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Proteome"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid upid parameter. The value format should match the regular expression UP[0-9]{9}."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get gene centric proteins by proteome UPID is deprecated, please use new /genecentric?upid= endpoint", "tags": ["proteomes"]}}, "/proteomes/proteins/{upid}": {"get": {"description": "", "operationId": "getProteinsByUpid", "parameters": [{"description": "UniProt Proteome UPID", "in": "path", "name": "upid", "required": true, "schema": {"type": "string"}}, {"description": "Reviewed(true) or not Reviewed (false)", "in": "query", "name": "reviewed", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Proteome"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Proteome"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid upid parameter. The value format should match the regular expression UP[0-9]{9}."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get proteins by proteome UPID", "tags": ["proteomes"]}}, "/proteomes/{upid}": {"get": {"description": "", "operationId": "getByUpid", "parameters": [{"description": "UniProt Proteome UPID", "in": "path", "name": "upid", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Proteome"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Proteome"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid upid parameter. The value format should match the regular expression UP[0-9]{9}."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get proteome by proteome UPID", "tags": ["proteomes"]}}, "/proteomics": {"get": {"description": "", "operationId": "searchProteomics", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt proteome UPID(s). Comma separated values accepted up to 100.", "in": "query", "name": "upid", "required": false, "schema": {"type": "string"}}, {"description": "Proteomics data source(s): Proteomics data source(s): MaxQB, PeptideAtlas, EPD or ProteomicsDB. Comma separated values accepted up to 2.", "in": "query", "name": "datasource", "required": false, "schema": {"maxItems": 2147483647, "minItems": 3, "type": "string"}}, {"description": "Peptide sequence. Comma separated values accepted up to 20.", "in": "query", "name": "peptide", "required": false, "schema": {"maxItems": 2147483647, "minItems": 4, "type": "string"}}, {"description": "Peptide uniqueness (unique peptides map to one gene group only). Values can be true or false.", "in": "query", "name": "unique", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search proteomics peptides in UniProt", "tags": ["proteomics"]}}, "/proteomics/{accession}": {"get": {"description": "", "operationId": "getProteomicsByAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get proteomics peptides mapped to UniProt by accession", "tags": ["proteomics"]}}, "/uniparc": {"get": {"description": "", "operationId": "searchUniParc", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "UniParc ID (UPI). Comma separated values accepted up to 100", "in": "query", "name": "upi", "required": false, "schema": {"type": "string"}}, {"description": "Search by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc.", "in": "query", "name": "dbtype", "required": false, "schema": {"type": "string"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "All UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted up to 100.", "in": "query", "name": "dbid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt gene name. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"type": "string"}}, {"description": "UniProt protein name", "in": "query", "name": "protein", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "Organism name", "in": "query", "name": "organism", "required": false, "schema": {"maxItems": 50, "minItems": 3, "type": "string"}}, {"description": "Sequence CRC64 checksum. eg 4104A3A57D1B08E3", "in": "query", "name": "sequencechecksum", "required": false, "schema": {"type": "string"}}, {"description": "Search by InterPro identifier(s). Comma separated values accepted up to 20.", "in": "query", "name": "ipr", "required": false, "schema": {"type": "string"}}, {"description": "Search by signature database type, e.g. SMART, SUPFAM, Pfam, PIRSF, PROSITE, etc. Comma separated values accepted up to 20.", "in": "query", "name": "signaturetype", "required": false, "schema": {"type": "string"}}, {"description": "Search by signature database id, e.g. SM00044, SSF55073, PF00211, PIRSF039050, PS00452, etc. Comma separated values accepted up to 20.", "in": "query", "name": "signatureid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt proteome UPID(s). Comma separated values accepted up to 100.", "in": "query", "name": "upid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}}, "summary": "Search UniParc entries", "tags": ["uniparc"]}}, "/uniparc/accession/{accession}": {"get": {"description": "", "operationId": "getUniParcEntryByUniprotAccession", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}, {"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Entry"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/Entry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniParc entry only by UniProt accession", "tags": ["uniparc"]}}, "/uniparc/bestguess": {"get": {"description": "For a given user input (request parameters), Best Guess returns the UniParcEntry with a cross-reference to the longest active UniProtKB sequence (preferably from Swiss-Prot and if not then TrEMBL). It also returns the sequence and related information. If it finds more than one longest active UniProtKB sequence it returns 400 (Bad Request) error response with the list of cross references found.", "operationId": "getUniParcBestGuess", "parameters": [{"description": "UniParc ID (UPI). Comma separated values accepted up to 100", "in": "query", "name": "upi", "required": false, "schema": {"type": "string"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "All UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted up to 100.", "in": "query", "name": "dbid", "required": false, "schema": {"type": "string"}}, {"description": "UniProt gene name. Comma separated values accepted up to 20.", "in": "query", "name": "gene", "required": false, "schema": {"type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Entry"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/Entry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Could not find best guess for the requested filter"}}, "summary": "Get UniParc longest sequence for entries.", "tags": ["uniparc"]}}, "/uniparc/dbreference/{dbid}": {"get": {"description": "", "operationId": "getUniParcByUniparcAccessions", "parameters": [{"description": "All UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq).", "in": "path", "name": "dbid", "required": true, "schema": {"type": "string"}}, {"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniParc entries by all UniParc cross reference accessions", "tags": ["uniparc"]}}, "/uniparc/proteome/{upid}": {"get": {"description": "", "operationId": "getByProteomeId", "parameters": [{"description": "UniProt Proteome UPID", "in": "path", "name": "upid", "required": true, "schema": {"type": "string"}}, {"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}, "text/x-fasta": {"schema": {"items": {"$ref": "#/components/schemas/Entry"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniParc entries by Proteome UPID", "tags": ["uniparc"]}}, "/uniparc/sequence": {"post": {"description": "", "operationId": "getBySequence", "parameters": [{"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UniparcSequenceParam"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/UniparcSequenceParam"}}, "text/plain": {"schema": {"$ref": "#/components/schemas/UniparcSequenceParam"}}}, "description": "Post uniparc Sequence in text, json or xml content type. Look the expected model in Data Type column", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Entry"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/Entry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniParc entries by sequence", "tags": ["uniparc"]}}, "/uniparc/upi/{upi}": {"get": {"description": "", "operationId": "getUniParcEntryByUpId", "parameters": [{"description": "UniParc ID (UPI)", "in": "path", "name": "upi", "required": true, "schema": {"type": "string"}}, {"description": "Response filter by Cross reference database type, e.g EMBL, RefSeq, Ensembl, etc. Comma separated values accepted.", "in": "query", "name": "rfDdtype", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by all UniParc cross reference accessions, eg. AAC02967 (EMBL) or  XP_006524055 (RefSeq). Comma separated values accepted.", "in": "query", "name": "rfDbid", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by Active(true) or not Active(false) Cross reference.", "in": "query", "name": "rfActive", "required": false, "schema": {"type": "string"}}, {"description": "Response filter by organism taxon ID. Comma separated values accepted.", "in": "query", "name": "rfTaxId", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Entry"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/Entry"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/Entry"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid upid parameter. The value format should match the regular expression UPI[\\w]{10}."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-fasta": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get UniParc entry by UniParc UPI", "tags": ["uniparc"]}}, "/variation": {"get": {"description": "Among the available response content types, PEFF format (PSI Extended FASTA Format from the Human Proteome Organisation - Proteomics Standards Initiative, HUPO-PSI) is provided with only variants reported in the output.", "operationId": "searchVariation", "parameters": [{"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Filter by the sourceType for variants: uniprot, large scale study and mixed. Comma separated values accepted up to 2.", "in": "query", "name": "sourcetype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by consequenceType for variants: missense, stop gained or stop lost. Comma separated values accepted up to 2.", "in": "query", "name": "consequencetype", "required": false, "schema": {"type": "string"}}, {"description": "Search by specific wildType amino acid. Options: Any single letter amino acid and * for stop codon. Comma separated values accepted up to 20.", "in": "query", "name": "wildtype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the alternativeSequence amino acid. Any single letter amino acid and * for stopcodon and - for deletions. Comma separated values accepted up to 20.", "in": "query", "name": "alternativesequence", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the amino acid range position in the sequence(s). Any valid amino acid range position within the length of the protein sequence such as 10-60 (start position to end position)", "in": "query", "name": "location", "required": false, "schema": {"type": "string"}}, {"description": "UniProt accession(s). Comma separated values accepted up to 100.", "in": "query", "name": "accession", "required": false, "schema": {"type": "string"}}, {"description": "Search by disease name/ acronym for associated variants , e.g. alzheimer disease 1 or AD1. Partial names allowed.", "in": "query", "name": "disease", "required": false, "schema": {"maxItems": 60, "minItems": 2, "type": "string"}}, {"description": "Search by MIM ID, e.g. 104300. Comma separated values accepted up to 20.", "in": "query", "name": "omim", "required": false, "schema": {"type": "string"}}, {"description": "Search by PubMed ID, e.g. 22472873. Comma separated values accepted up to 20.", "in": "query", "name": "evidence", "required": false, "schema": {"type": "string"}}, {"description": "Organism taxon ID. Comma separated values accepted up to 20.", "in": "query", "name": "taxid", "required": false, "schema": {"type": "string"}}, {"description": "Cross reference database type, e.g, dbSNP, cosmic curate or ClinVar. Comma separated values accepted up to 2.", "in": "query", "name": "dbtype", "required": false, "schema": {"type": "string"}}, {"description": "Cross-reference database ID, e.g. rs121918508 for dbSNP, COSM29836 for cosmic curated, rcv61200 for ClinVar. Comma separated values accepted up to 20.", "in": "query", "name": "dbid", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Search natural variants in UniProt", "tags": ["variation"]}}, "/variation/dbsnp/{dbid}": {"get": {"description": "", "operationId": "searchByDbSNP", "parameters": [{"description": "Cross-reference NIH-NCBI SNP database identifier, e.g. rs121918508", "in": "path", "name": "dbid", "required": true, "schema": {"type": "string"}}, {"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Filter by the sourceType for variants: uniprot, large scale study and mixed. Comma separated values accepted up to 2.", "in": "query", "name": "sourcetype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by consequenceType for variants: missense, stop gained or stop lost. Comma separated values accepted up to 2.", "in": "query", "name": "consequencetype", "required": false, "schema": {"type": "string"}}, {"description": "Search by specific wildType amino acid. Options: Any single letter amino acid and * for stop codon. Comma separated values accepted up to 20.", "in": "query", "name": "wildtype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the alternativeSequence amino acid. Any single letter amino acid and * for stopcodon and - for deletions. Comma separated values accepted up to 20.", "in": "query", "name": "alternativesequence", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the amino acid range position in the sequence(s). Any valid amino acid range position within the length of the protein sequence such as 10-60 (start position to end position)", "in": "query", "name": "location", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get natural variants in UniProt by NIH-NCBI SNP database identifier", "tags": ["variation"]}}, "/variation/hgvs/{hgvs}": {"get": {"description": "", "operationId": "searchByHGVS", "parameters": [{"description": "Human Genome Variation Society representation, e.g. NC_000017.11:g.58219213C>T", "in": "path", "name": "hgvs", "required": true, "schema": {"type": "string"}}, {"description": "Off set, page starting point, with default value 0", "in": "query", "name": "offset", "required": false, "schema": {"default": 0, "format": "int32", "minimum": 0, "type": "integer"}}, {"description": "Page size with default value 100. When page size is -1, it returns all records and offset will be ignored", "in": "query", "name": "size", "required": false, "schema": {"default": 100, "format": "int32", "type": "integer"}}, {"description": "Filter by the sourceType for variants: uniprot, large scale study and mixed. Comma separated values accepted up to 2.", "in": "query", "name": "sourcetype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by consequenceType for variants: missense, stop gained or stop lost. Comma separated values accepted up to 2.", "in": "query", "name": "consequencetype", "required": false, "schema": {"type": "string"}}, {"description": "Search by specific wildType amino acid. Options: Any single letter amino acid and * for stop codon. Comma separated values accepted up to 20.", "in": "query", "name": "wildtype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the alternativeSequence amino acid. Any single letter amino acid and * for stopcodon and - for deletions. Comma separated values accepted up to 20.", "in": "query", "name": "alternativesequence", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the amino acid range position in the sequence(s). Any valid amino acid range position within the length of the protein sequence such as 10-60 (start position to end position)", "in": "query", "name": "location", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "application/xml": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}, "text/x-gff": {"schema": {"items": {"$ref": "#/components/schemas/ProteinFeatureInfo"}, "type": "array"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid request Parameter."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get natural variants in UniProt by HGVS expression", "tags": ["variation"]}}, "/variation/{accession}": {"get": {"description": "", "operationId": "getVariation", "parameters": [{"description": "UniProt accession", "in": "path", "name": "accession", "required": true, "schema": {"type": "string"}}, {"description": "Filter by the sourceType for variants: uniprot, large scale study and mixed. Comma separated values accepted up to 2.", "in": "query", "name": "sourcetype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by consequenceType for variants: missense, stop gained or stop lost. Comma separated values accepted up to 2.", "in": "query", "name": "consequencetype", "required": false, "schema": {"type": "string"}}, {"description": "Search by specific wildType amino acid. Options: Any single letter amino acid and * for stop codon. Comma separated values accepted up to 20.", "in": "query", "name": "wildtype", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the alternativeSequence amino acid. Any single letter amino acid and * for stopcodon and - for deletions. Comma separated values accepted up to 20.", "in": "query", "name": "alternativesequence", "required": false, "schema": {"type": "string"}}, {"description": "Filter by the amino acid range position in the sequence(s). Any valid amino acid range position within the length of the protein sequence such as 10-60 (start position to end position)", "in": "query", "name": "location", "required": false, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ProteinFeatureInfo"}}}, "description": "successful operation"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Invalid accession parameter. The values's format should be a valid UniProtKB accession."}, "404": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "application/xml": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}, "text/x-gff": {"schema": {"$ref": "#/components/schemas/ErrorMessage"}}}, "description": "Resources not found"}}, "summary": "Get natural variants by UniProt accession", "tags": ["variation"]}}}, "servers": [{"url": "https://www.ebi.ac.uk/proteins/api"}], "tags": [{"name": "coordinates"}, {"name": "antigen"}, {"name": "uniparc"}, {"name": "proteomics"}, {"name": "features"}, {"name": "proteomes"}, {"name": "variation"}, {"name": "genecentric"}, {"name": "proteins"}, {"name": "translator"}]}, {"_id": "a49ee52f6fb81a71cca84e9806732b76", "_meta": {"date_created": "2021-01-26T00:02:43.141214+00:00", "last_updated": "2021-05-06T07:05:02.816097+00:00", "url": "https://automat.renci.org/foodb/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:05:43+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:05:44.322652"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph of the food/chemical relationships in [foodb.ca](foodb.ca).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Foodb&provider_long=RENCI", "title": "Automat Foodb", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/foodb"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "1c0aff2a70b1ed677867c0db8011746f", "_meta": {"date_created": "2021-02-03T16:03:16.375825+00:00", "last_updated": "2021-05-06T07:01:16.810481+00:00", "url": "https://automat.renci.org/ontological-hierarchy/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:00:55+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:13.775442"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph for ontological hierarchy extracted from Uberongraph.", "termsOfService": "http://linkmissing", "title": "Automat Ontological Hierarchy", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/ontological-hierarchy"}], "tags": [{"name": "translator"}, {"name": "Automat"}]}, {"_id": "415c3b1a85ead4ceb58caf00dee9b24e", "_meta": {"date_created": "2021-02-02T02:37:11.215923+00:00", "last_updated": "2021-03-08T20:59:28.486729+00:00", "url": "https://raw.githubusercontent.com/suihuanglab/improving-agent/main/app/improving-agent.yaml", "username": "brettasmi"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:00:54+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:01.171474"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Generic attribute for a node or an edge that expands key-value pair concept by including a type of this attribute from a suitable ontology, a source of this attribute, and (optionally) a url with additional information about this attribute.", "properties": {"name": {"description": "Human-readable name or label for the attribute. If appropriate, should be the name of the semantic type term.", "example": "PubMed Identifier", "nullable": true, "type": "string"}, "source": {"description": "Source of the attribute, preferably as a CURIE prefix.", "example": "UniProtKB", "nullable": true, "type": "string"}, "type": {"$ref": "#/components/schemas/CURIE", "description": "CURIE of the semantic type of the attribute. For properties defined by the Biolink model this should be a biolink CURIE, otherwise, if possible, from the EDAM ontology. If a suitable identifier does not exist, enter a descriptive phrase here and submit the new type for consideration by the appropriate authority.", "example": "EDAM:data_1187"}, "url": {"description": "Human-consumable URL to link out and provide additional information about the attribute (not the node or the edge).", "example": "https://pubmed.ncbi.nlm.nih.gov/32529952", "nullable": true, "type": "string"}, "value": {"description": "Value of the attribute. May be any data type, including a list.", "example": 32529952}}, "required": ["type", "value"], "type": "object"}, "BiolinkEntity": {"description": "Compact URI (CURIE) for a Biolink class, biolink:NamedThing or a child thereof. The CURIE must use the prefix 'biolink:' followed by the PascalCase class name.", "example": "biolink:PhenotypicFeature", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "pattern": "^biolink:[A-Z][a-zA-Z]*$", "type": "string"}, "BiolinkPredicate": {"description": "CURIE for a Biolink 'predicate' slot, taken from the Biolink slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate defines the Biolink relationship between the subject and object nodes of a biolink:Association defining a knowledge graph edge.", "example": "biolink:interacts_with", "externalDocs": {"description": "Biolink model predicates", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "pattern": "^biolink:[a-z][a-z_]*$", "type": "string"}, "CURIE": {"description": "A Compact URI, consisting of a prefix and a reference separated by a colon, such as UniProtKB:P00738. Via an external context definition, the CURIE prefix and colon may be replaced by a URI prefix, such as http://identifiers.org/uniprot/, to form a full URI.", "externalDocs": {"url": "https://www.w3.org/TR/2010/NOTE-curie-20101216/"}, "type": "string"}, "Edge": {"additionalProperties": false, "description": "A specification of the semantic relationship linking two concepts that are expressed as nodes in the knowledge \"thought\" graph resulting from a query upon the underlying knowledge source.", "properties": {"attributes": {"description": "A list of additional attributes for this edge", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "object": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the object concept node of this relationship edge.", "example": "UniProtKB:P00738"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true}, "relation": {"description": "The relationship type term of this edge, originally specified by, or curated by inference from, the original source of knowledge. This should generally be specified as predicate ontology CURIE.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"$ref": "#/components/schemas/CURIE", "description": "Corresponds to the map key CURIE of the subject concept node of this relationship edge.", "example": "OMIM:603903"}}, "required": ["subject", "object"], "type": "object"}, "EdgeBinding": {"additionalProperties": true, "description": "A instance of EdgeBinding is a single KnowledgeGraph Edge mapping, identified by the corresponding 'id' object key identifier of the Edge within the Knowledge Graph. Instances of EdgeBinding may include extra annotation (such annotation is not yet fully standardized).", "properties": {"id": {"description": "The key identifier of a specific KnowledgeGraph Edge.", "type": "string"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"additionalProperties": true, "description": "The knowledge graph associated with a set of results. The instances of Node and Edge defining this graph represent instances of biolink:NamedThing (concept nodes) and biolink:Association (relationship edges) representing (Attribute) annotated knowledge returned from the knowledge sources and inference agents wrapped by the given TRAPI implementation.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "description": "Dictionary of Edge instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "description": "Dictionary of Node instances used in the KnowledgeGraph, referenced elsewhere in the TRAPI output by the dictionary key.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"additionalProperties": true, "description": "The LogEntry object contains information useful for tracing and debugging across Translator components.  Although an individual component (for example, an ARA or KP) may have its own logging and debugging infrastructure, this internal information is not, in general, available to other components. In addition to a timestamp and logging level, LogEntry includes a string intended to be read by a human, along with one of a standardized set of codes describing the condition of the component sending the message.", "properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "nullable": true, "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "type": "string"}, "message": {"description": "A human-readable log message", "nullable": true, "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "nullable": true, "type": "string"}}, "type": "object"}, "Message": {"additionalProperties": false, "description": "The message object holds the main content of a Query or a Response in three properties: query_graph, results, and knowledge_graph. The query_graph property contains the query configuration, the results property contains any answers that are returned by the service, and knowledge_graph property contains lists of edges and nodes in the thought graph corresponding to this message. The content of these properties is context-dependent to the encompassing object and the TRAPI operation requested.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "description": "KnowledgeGraph object that contains lists of nodes and edges in the thought graph corresponding to the message", "nullable": true}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "nullable": true}, "results": {"description": "List of all returned Result objects for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "type": "array"}}, "type": "object"}, "Node": {"additionalProperties": false, "description": "A node in the KnowledgeGraph which represents some biomedical concept. Nodes are identified by the keys in the KnowledgeGraph Node mapping.", "properties": {"attributes": {"description": "A list of attributes describing the node", "items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "type": "array"}, "category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "nullable": true, "type": "string"}}, "type": "object"}, "NodeBinding": {"additionalProperties": true, "properties": {"id": {"$ref": "#/components/schemas/CURIE", "description": "An instance of NodeBinding is a single KnowledgeGraph Node mapping, identified by the corresponding 'id' object key identifier of the Node within the Knowledge Graph. Instances of NodeBinding may include extra annotation (such annotation is not yet fully standardized)."}}, "required": ["id"], "type": "object"}, "QEdge": {"additionalProperties": true, "description": "An edge in the QueryGraph used as an filter pattern specification in a query. If optional predicate or relation properties are not specified, they are assumed to be wildcard matches to the target knowledge space. If specified, the ontological inheritance hierarchy associated with the terms provided is assumed, such that edge bindings returned may be an exact match to the given QEdge predicate or relation term ('class'), or to a term which is a subclass of the QEdge specified term.", "properties": {"object": {"description": "Corresponds to the map key identifier of the object concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "predicate": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}]}, "relation": {"description": "Query constraint against the relationship type term of this edge, as originally specified by, or curated by inference from, the original external source of knowledge. Note that this should often be specified as predicate ontology term CURIE, although this may not be strictly enforced.", "example": "RO:0002447", "nullable": true, "type": "string"}, "subject": {"description": "Corresponds to the map key identifier of the subject concept node anchoring the query filter pattern for the query relationship edge.", "example": "https://omim.org/entry/603903", "type": "string"}}, "required": ["subject", "object"], "type": "object"}, "QNode": {"additionalProperties": true, "description": "A node in the QueryGraph used to represent an entity in a query. If a CURIE is not specified, any nodes matching the category of the QNode will be returned in the Results.", "properties": {"category": {"nullable": true, "oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}, "id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "nullable": true, "oneOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}]}, "is_set": {"default": false, "description": "Boolean that if set to true, indicates that this QNode MAY have multiple KnowledgeGraph Nodes bound to it within each Result. The nodes in a set should be considered as a set of independent nodes, rather than a set of dependent nodes, i.e., the answer would still be valid if the nodes in the set were instead returned individually. Multiple QNodes may have is_set=True. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=False, each n1 must be connected to n2. If a QNode (n1) with is_set=True is connected to a QNode (n2) with is_set=True, each n1 must be connected to at least one n2.", "type": "boolean"}}, "type": "object"}, "Query": {"additionalProperties": true, "description": "The Query class is used to package a user request for information. A Query object consists of a required Message object with optional additional properties. Additional properties are intended to convey implementation-specific or query-independent parameters. For example, an additional property specifying a log level could allow a user to override the default log level in order to receive more fine-grained log information when debugging an issue.", "properties": {"max_results": {"default": 200, "description": "The maximum number of results to return. Currently, this is hardcoded to 200 in the imProving Agent internals, but you can request fewer results for testing. The maximum number internally will certainly increase going forward.", "type": "integer"}, "message": {"$ref": "#/components/schemas/Message", "description": "The query Message is a serialization of the user request. Content of the Message object depends on the intended TRAPI operation. For example, the fill operation requires a non-empty query_graph field as part of the Message, whereas other operations, e.g. overlay, require non-empty results and knowledge_graph fields."}, "psev_context": {"$ref": "#/components/schemas/CURIE", "description": "A CURIE from Disease Ontology, e.g. DOID:0000, for which a propagated SPOKE entry vector (PSEV) has been calculated. Eventually, this will be expanded to any clinical concept, but currently, the options are as follows: DOID:9351, DOID:9970, DOID:10763, DOID:14330, DOID:3393, DOID:2377, DOID:7148, DOID:3083, DOID:0060224, DOID:2800, DOID:9617"}, "query_kps": {"default": false, "description": "A boolean value as to whether or not to attempt to query Translator Knowledge Providers for additional data that is not found in SPOKE. Note that choosing true may increase the processing time for your request significantly.", "type": "boolean"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"additionalProperties": true, "description": "A graph representing a biomedical question. It serves as a template for each result (answer), where each bound knowledge graph node/edge is expected to obey the constraints of the associated query graph element.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "description": "The edge specifications. The keys of this map are unique edge identifiers and the corresponding values include the constraints on bound edges, in addition to specifying the subject and object QNodes.", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "description": "The node specifications. The keys of this map are unique node identifiers and the corresponding values include the constraints on bound nodes.", "type": "object"}}, "required": ["nodes", "edges"], "type": "object"}, "Response": {"additionalProperties": true, "description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "nullable": true, "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "nullable": true, "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"additionalProperties": true, "description": "A Result object specifies the nodes and edges in the knowledge graph that satisfy the structure or conditions of a user-submitted query graph. It must contain a NodeBindings object (list of query graph node to knowledge graph node mappings) and an EdgeBindings object (list of query graph edge to knowledge graph edge mappings).", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph edge bindings where the dictionary keys are the key identifiers of the Query Graph edges and the associated values of those keys are instances of EdgeBinding schema type (see below). This value is an array of EdgeBindings since a given query edge may resolve to multiple knowledge graph edges in the result.", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "description": "The dictionary of Input Query Graph to Result Knowledge Graph node bindings where the dictionary keys are the key identifiers of the Query Graph nodes and the associated values of those keys are instances of NodeBinding schema type (see below). This value is an array of NodeBindings since a given query node may have multiple knowledge graph Node bindings in the result.", "type": "object"}, "score": {"description": "The 'imProving Agent Score' that is the sum of the various scores calculated from PSEVs, KP metadata, etc. Individual scores should be visible as attributes on Nodes and Edges", "example": 1.234, "format": "float", "type": "number"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "externalDocs": {"description": "Code repository and example notebook", "url": "https://github.com/suihuanglab/improving-agent"}, "info": {"contact": {"email": "brett.smith@isbscience.org", "x-role": "responsible developer"}, "description": "imProving Agent OpenAPI TRAPI Specification", "license": {"name": "Apache 2.0", "url": "http://www.apache.org/licenses/LICENSE-2.0.html"}, "termsOfService": "https://spoke.rbvi.ucsf.edu/license.html", "title": "imProving Agent", "version": "1.0.0", "x-translator": {"component": "ARA", "team": ["imProving Agent"]}, "x-trapi": {"version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates"]}}, "/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query reasoner via one of several inputs", "tags": ["query"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}}, "servers": [{"url": "https://evidara.healthdatascience.cloud/api/v1/"}], "tags": [{"description": "Get supported relationships by source and target", "name": "predicates"}, {"description": "Query reasoner using a predefined question type", "name": "query"}, {"name": "translator"}, {"name": "reasoner"}, {"externalDocs": {"description": "Documentation of SPOKE data", "url": "https://spoke.rbvi.ucsf.edu/docs/index.html"}, "name": "SPOKE"}]}, {"_id": "978fe380a147a8641caf72320862697b", "_meta": {"date_created": "2021-01-14T20:06:05.747171+00:00", "last_updated": "2021-05-14T07:00:54.634568+00:00", "slug": "text-mining-target-assoc", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/text_mining/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:54+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:01.390299"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"chemical-gene-negative": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Gene"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "chemical-gene-positive": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Gene"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "chemical-geneorgeneproduct-negative": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "GeneOrGeneProduct"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "chemical-geneorgeneproduct-positive": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "GeneOrGeneProduct"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "chemical-protein-negative": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "chemical-protein-positive": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object.PR,association.evidence", "q": "subject.CHEBI:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulates_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Text Mining KP", "supportBatch": false}], "gene-chemical-negative": [{"inputs": [{"id": "PR", "semantic": "Gene"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}], "gene-chemical-positive": [{"inputs": [{"id": "PR", "semantic": "Gene"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}], "geneorgeneproduct-chemical-negative": [{"inputs": [{"id": "PR", "semantic": "GeneOrGeneProduct"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}], "geneorgeneproduct-chemical-positive": [{"inputs": [{"id": "PR", "semantic": "GeneOrGeneProduct"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}], "protein-chemical-negative": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:negatively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_negatively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}], "protein-chemical-positive": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject.CHEBI,association.evidence", "q": "object.PR:\"{inputs[0]}\" AND association.edge_label:positively_regulates_entity_to_entity", "size": 1000}, "predicate": "entity_positively_regulated_by_entity", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Text Mining KP", "supportBatch": false}]}, "x-bte-response-mapping": {"chemical-gene": {"PR": "hits.object.PR", "object_spans": "hits.association.evidence.object_spans", "pubmed": "hits.association.evidence.publications", "relation_spans": "hits.association.evidence.relation_spans", "score": "hits.association.evidence.score", "sentence": "hits.association.evidence.sentence", "subject_spans": "hits.association.evidence.subject_spans"}, "gene-chemical": {"CHEBI": "hits.subject.CHEBI", "object_spans": "hits.association.evidence.object_spans", "pubmed": "hits.association.evidence.publications", "relation_spans": "hits.association.evidence.relation_spans", "score": "hits.association.evidence.score", "sentence": "hits.association.evidence.sentence", "subject_spans": "hits.association.evidence.subject_spans"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Text Mining Targeted Association query web services.", "termsOfService": "https://biothings.io/about", "title": "Text Mining Targeted Association API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Text Mining Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "275bfadd2b4c60c3", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "object.id:CHEMBL.COMPOUND\\:CHEMBL26", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/chemical-gene-positive"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-gene-negative"}, {"$ref": "#/components/x-bte-kgs-operations/gene-chemical-positive"}, {"$ref": "#/components/x-bte-kgs-operations/gene-chemical-negative"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-protein-positive"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-protein-negative"}, {"$ref": "#/components/x-bte-kgs-operations/protein-chemical-positive"}, {"$ref": "#/components/x-bte-kgs-operations/protein-chemical-negative"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-geneorgeneproduct-positive"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-geneorgeneproduct-negative"}, {"$ref": "#/components/x-bte-kgs-operations/geneorgeneproduct-chemical-positive"}, {"$ref": "#/components/x-bte-kgs-operations/geneorgeneproduct-chemical-negative"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/text_mining_targeted_association"}, {"description": "Production server", "url": "http://biothings.ncats.io/text_mining_targeted_association"}], "tags": [{"name": "gene"}, {"name": "chemical"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "f339b28426e7bf72028f60feefcd7465", "_meta": {"date_created": "2020-12-07T23:01:11.475174+00:00", "last_updated": "2021-05-14T07:00:49.626472+00:00", "slug": "go_cc", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/go_cc/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:49+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:01.931186"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Geneset": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Geneset"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"has_part": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "_id"}, "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "part_of.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_part"}, "source": "Gene Ontology", "supportBatch": true}], "has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "children"}, "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "Gene Ontology", "supportBatch": true}], "part_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "part_of.go"}, "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/part_of"}, "source": "Gene Ontology", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "parents"}, "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "Gene Ontology", "supportBatch": true}]}, "x-bte-response-mapping": {"has_part": {"GO": "_id"}, "has_subclass": {"GO": "children"}, "part_of": {"GO": "part_of.go"}, "subclass_of": {"GO": "parents"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Gene Ontology Cellular Component query web services.", "termsOfService": "https://biothings.io/about", "title": "Gene Ontology Cellular Component API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/geneset": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}}}, "description": "A list of matching geneset objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of geneset IDs, return the matching geneset object", "tags": ["geneset"]}}, "/geneset/{genesetid}": {"get": {"parameters": [{"description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.", "example": "GO:0098791", "in": "path", "name": "genesetid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Geneset"}}}, "description": "A matching geneset object"}, "404": {"description": "A response indicating an unknown geneset ID"}}, "summary": "Retrieve geneset objects based on ID", "tags": ["geneset"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "DISEASES metadata object"}}, "summary": "Get metadata about the data available from DISEASES", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "DISEASES metadata fields object"}}, "summary": "Get metadata about the data fields available object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "parents:\"GO:0098791\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch geneset queries and return matching geneset hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}, {"$ref": "#/components/x-bte-kgs-operations/part_of"}, {"$ref": "#/components/x-bte-kgs-operations/has_part"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/go_cc"}, {"description": "Production server", "url": "http://biothings.ncats.io/go_cc"}], "tags": [{"name": "ontology"}, {"name": "cellular component"}, {"name": "geneset"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "dc91716f44207d2e1287c727f281d339", "_meta": {"date_created": "2021-03-11T18:52:08.763346+00:00", "last_updated": "2021-05-14T07:00:52.171518+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biothings_explorer/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:51+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:02.786742"}, "components": {"schemas": {"BiolinkEntity": {"description": "A subclass of named_thing (snake_case)", "example": "disease", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "type": "string"}, "BiolinkRelation": {"description": "A relation, i.e. child of related_to (snake_case)", "example": "affects", "externalDocs": {"description": "Biolink model relations", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "type": "string"}, "Credentials": {"description": "Credentials needed for programmatic access to the remote knowledge graph", "properties": {"password": {"description": "Password needed for programmatic access to the remote knowledge graph", "type": "string"}, "username": {"description": "Username needed for programmatic access to the remote knowledge graph", "type": "string"}}, "required": ["username", "password"], "type": "object"}, "EdgeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "KEdge": {"description": "An edge in the thought subgraph linking two nodes", "properties": {"id": {"description": "Local identifier for this node which is unique within this KnowledgeGraph, and perhaps within the source reasoner's knowledge graph", "example": "553903", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "type": {"$ref": "#/components/schemas/BiolinkRelation"}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "KNode": {"description": "A node in the thought subgraph", "properties": {"id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "type": "string"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "type": "string"}, "type": {"description": "Entity type of this node (e.g., protein, disease, etc.)", "example": ["protein"], "items": {"type": "string"}, "type": "array"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"description": "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included.", "properties": {"edges": {"description": "List of edges in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "LogEntry": {"properties": {"code": {"description": "One of a standardized set of short codes e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed", "type": "string"}, "level": {"description": "Logging level", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "type": "string"}, "message": {"description": "A human-readable log message", "type": "string"}, "timestamp": {"description": "Timestamp in ISO 8601 format", "example": "2020-09-03T18:13:49+00:00", "format": "date-time", "type": "string"}}, "type": "object"}, "Message": {"properties": {"knowledge_graph": {"description": "KnowledgeGraph object that contains all the nodes and edges referenced in any of the possible answers to the query OR connection information for a remote knowledge graph", "oneOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}, {"$ref": "#/components/schemas/RemoteKnowledgeGraph"}], "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "type": "object"}, "results": {"description": "List of all returned potential answers for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "type": "array"}}, "type": "object"}, "NodeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "QEdge": {"description": "An edge in the QueryGraph", "properties": {"id": {"description": "QueryGraph internal identifier for this QEdge. Recommended form: e00, e01, e02, etc.", "example": "e00", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkRelation"}, {"items": {"$ref": "#/components/schemas/BiolinkRelation"}, "type": "array"}]}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "QNode": {"description": "A node in the QueryGraph", "properties": {"curie": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "id": {"description": "QueryGraph internal identifier for this QNode. Recommended form: n00, n01, n02, etc.", "example": "n00", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"description": "Entity types of this node (e.g., protein, disease, etc.)", "example": ["disease", "genetic_condition"], "items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}}, "required": ["id"], "type": "object"}, "Query": {"properties": {"message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"description": "A graph intended to be the thought path to be followed by a reasoner to answer the question. This graph is a representation of a question.", "properties": {"edges": {"description": "List of edges in the QueryGraph", "items": {"$ref": "#/components/schemas/QEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the QueryGraph", "items": {"$ref": "#/components/schemas/QNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "RemoteKnowledgeGraph": {"description": "A thought graph associated with this result that is not repeated here, but stored elsewhere in a way that can be remotely accessed by the reader of this Message", "properties": {"credentials": {"$ref": "#/components/schemas/Credentials", "description": "Credentials needed for programmatic access to the remote knowledge graph", "type": "object"}, "url": {"description": "URL that provides programmatic access to the remote knowledge graph", "example": "http://robokop.renci.org/api/kg", "type": "string"}}, "required": ["url", "credentials"], "type": "object"}, "Response": {"description": "The Response object contains the main payload when a TRAPI query endpoint interprets and responds to the submitted query successfully (i.e., HTTP Status Code 200). The message property contains the knowledge of the response (query graph, knowledge graph, and results). The status, description, and logs properties provide additional details about the response.", "properties": {"description": {"description": "A brief human-readable description of the outcome", "example": "Success. 42 results found.", "type": "string"}, "logs": {"description": "Log entries containing errors, warnings, debugging information, etc", "items": {"$ref": "#/components/schemas/LogEntry"}, "type": "array"}, "message": {"$ref": "#/components/schemas/Message", "description": "Contains the knowledge of the response (query graph, knowledge graph, and results)."}, "status": {"description": "One of a standardized set of short codes, e.g. Success, QueryNotTraversable, KPsNotAvailable", "example": "Success", "type": "string"}}, "required": ["message"], "type": "object"}, "Result": {"description": "One of potentially several results or answers for a query", "properties": {"edge_bindings": {"description": "List of QEdge-KEdge bindings.", "items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "node_bindings": {"description": "List of QNode-KNode bindings.", "items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "type": "number"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "kevinxin@scripps.edu", "name": "Jiwen Xin", "url": "https://github.com/kevinxin90"}, "description": "A ReasonerStdAPI for BioThings Explorer", "termsOfService": "https://biothings.io/about", "title": "BioThings Explorer ReasonerStdAPI", "version": "1.0.0", "x-translator": {"component": "ARA", "team": ["Exploring Agent"]}, "x-trapi": {"version": "1.0.0"}}, "openapi": "3.0.1", "paths": {"/metakg": {"get": {"parameters": [{"description": "The subject type of the association, e.g. Gene", "example": "Gene", "in": "query", "name": "subject", "schema": {"type": "string"}}, {"description": "The object type of the association, e.g. ChemicalSubstance", "example": "ChemicalSubstance", "in": "query", "name": "object", "schema": {"type": "string"}}, {"description": "The predicate of the association, e.g. Gene", "example": "physically_interacts_with", "in": "query", "name": "predicate", "schema": {"type": "string"}}, {"description": "The API providing the association, e.g. MyChem.info API", "example": "MyChem.info API", "in": "query", "name": "api", "schema": {"type": "string"}}, {"description": "The data source providing the association, e.g. drugbank", "example": "drugbank", "in": "query", "name": "provided_by", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"description": "Array of all associations", "items": {"properties": {"api": {"description": "The api providing the association, e.g. MyChem.info", "properties": {"name": {"description": "The api providing the association, e.g. MyChem.info", "example": "MyChem.info API", "type": "string"}, "smartapi": {"description": "smartapi related data", "properties": {"id": {"description": "unique smartapi id for the api", "example": "8f08d1446e0bb9c2b323713ce83e2bd3", "type": "string"}, "metadata": {"description": "the url for smartapi specification", "example": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml", "type": "string"}, "ui": {"description": "the web UI url for the API", "example": "https://smart-api.info/ui/8f08d1446e0bb9c2b323713ce83e2bd3", "type": "string"}}, "type": "object"}}, "type": "object"}, "object": {"description": "The object type of the association, e.g. ChemicalSubstance", "example": "ChemicalSubstance", "type": "string"}, "predicate": {"description": "The predicate of the association, e.g. physically_interacts_with", "example": "physically_interacts_with", "type": "string"}, "provided_by": {"description": "The data source providing the association, e.g. ChEMBL", "example": "ChEMBL", "type": "string"}, "subject": {"description": "The subject type of the association, e.g. Gene", "example": "Gene", "type": "string"}}, "type": "object"}, "type": "array"}}}, "description": "Association information including subject, object, predicate, api, provided_by and smartapi info."}}, "summary": "retrieve associations within smartapi, if no parameters provided, will return all associations", "tags": ["metadata"]}}, "/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"chemical_substance": {"chemical_substance": ["correlated_with"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["metadata", "0.9.2"]}}, "/v1/predicates": {"get": {"responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target", "tags": ["predicates", "1.0.0"]}}, "/v1/smartapi/{smartapi_id}/predicates": {"get": {"parameters": [{"description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry", "example": "978fe380a147a8641caf72320862697b", "in": "path", "name": "smartapi_id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target for individual smartAPI", "tags": ["predicates", "1.0.0"]}}, "/v1/team/{team_name}/predicates": {"get": {"parameters": [{"description": "Translator Team Name, e.g. Service Provider, Multiomics Provider", "example": "Multiomics Provider", "in": "path", "name": "team_name", "required": true, "schema": {"enum": ["Multiomics Provider", "Text Mining Provider", "Service Provider"], "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"description": "Array of predicates", "items": {"type": "string"}, "type": "array"}, "description": "Target map", "type": "object"}, "description": "Source map", "example": {"biolink:ChemicalSubstance": {"biolink:Gene": ["biolink:directly_interacts_with", "biolink:decreases_activity_of"]}}, "type": "object"}}}, "description": "Predicates by source and target"}}, "summary": "Get supported relationships by source and target for a KP/ARA team", "tags": ["predicates", "1.0.0"]}}, "/v1/query": {"post": {"description": "", "operationId": "query", "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Disease", "id": "MONDO:0005737"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query BioThings Explorer TRAPI API as ARA", "tags": ["query", "1.0.0"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}, "/v1/smartapi/{smartapi_id}/query": {"post": {"description": "", "operationId": "querySmartAPI", "parameters": [{"description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry", "example": "978fe380a147a8641caf72320862697b", "in": "path", "name": "smartapi_id", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Gene", "id": "NCBIGene:1017"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query individual SmartAPI as TRAPI service using SmartAPI ID", "tags": ["query", "1.0.0"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}, "/v1/team/{team_name}/query": {"post": {"description": "", "operationId": "queryTeam", "parameters": [{"description": "Translator Team Name, e.g. Service Provider, Multiomics Provider", "example": "Text Mining Provider", "in": "path", "name": "team_name", "required": true, "schema": {"enum": ["Multiomics Provider", "Text Mining Provider", "Service Provider"], "type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": {"e00": {"object": "n01", "subject": "n00"}}, "nodes": {"n00": {"category": "biolink:Gene", "id": "NCBIGene:1017"}, "n01": {"category": "biolink:ChemicalSubstance"}}}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Query information to be submitted", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "OK. There may or may not be results. Note that some of the provided identifiers may not have been recognized."}, "400": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Bad request. The request is invalid according to this OpenAPI schema OR a specific identifier is believed to be invalid somehow (not just unrecognized)."}, "500": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Internal server error."}, "501": {"content": {"application/json": {"schema": {"type": "string"}}}, "description": "Not implemented."}}, "summary": "Query individual Translator team as individual TRAPI service using team name", "tags": ["query", "1.0.0"], "x-swagger-router-controller": "swagger_server.controllers.query_controller"}}, "/query/": {"post": {"requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": [{"id": "e00", "source_id": "n00", "target_id": "n01"}, {"id": "e01", "source_id": "n01", "target_id": "n02"}], "nodes": [{"curie": "MONDO:0005737", "id": "n00", "type": "disease"}, {"id": "n01", "set": true, "type": "gene"}, {"id": "n02", "type": "chemical_substance"}]}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question", "tags": ["0.9.2", "query"]}}, "/smartapi/{smartapi_id}/query/": {"post": {"parameters": [{"description": "SmartAPI ID of an API, you can get it from https://smart-api.info/registry", "example": "978fe380a147a8641caf72320862697b", "in": "path", "name": "smartapi_id", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": [{"id": "e00", "source_id": "n00", "target_id": "n01"}], "nodes": [{"curie": "NCBIGene:1017", "id": "n00", "type": "gene"}, {"id": "n01", "type": "chemical_substance"}]}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question using a specific API", "tags": ["0.9.2", "query"]}}, "/source/{source_name}/query/": {"post": {"parameters": [{"description": "The name of the data source", "example": "drugbank", "in": "path", "name": "source_name", "required": true, "schema": {"type": "string"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": [{"id": "e00", "source_id": "n00", "target_id": "n01"}], "nodes": [{"curie": "NCBIGene:1017", "id": "n00", "type": "gene"}, {"id": "n01", "type": "chemical_substance"}]}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question using a specific data source.", "tags": ["0.9.2", "query"]}}}, "servers": [{"url": "https://api.bte.ncats.io"}], "tags": [{"name": "1.0.0"}, {"name": "0.9.2"}, {"name": "translator"}, {"name": "trapi"}, {"name": "biothings"}, {"name": "metadata"}, {"name": "query"}]}, {"_id": "2dffb89df7f970b6a07e816e255d33ec", "_meta": {"date_created": "2020-12-07T22:59:15.759070+00:00", "last_updated": "2021-05-14T07:00:53.195257+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_phenotype.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:52+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:06:58.723101"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"PhenotypicFeature-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affects-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-Cell"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affects-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupted_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupts-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupts-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-Cell"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupts-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-disrupts-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-disrupts-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_part-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "has_part"}, "path": "/query", "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_part-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "has_part"}, "path": "/query", "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_part-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "has_part"}, "path": "/query", "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_part-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "has_part"}, "path": "/query", "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_part-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_subclass-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "has_subclass"}, "path": "/query", "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_subclass-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-has_subclass-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "has_subclass"}, "path": "/query", "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-has_subclass-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-located_in-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "located_in"}, "path": "/query", "predicate": "located_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-located_in-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "located_in"}, "path": "/query", "predicate": "located_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-Cell"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-located_in-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "located_in"}, "path": "/query", "predicate": "located_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-located_in-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-manifestation_of-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "manifestation_of"}, "path": "/query", "predicate": "manifestation_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-manifestation_of-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "manifestation_of"}, "path": "/query", "predicate": "manifestation_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-manifestation_of-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "manifestation_of"}, "path": "/query", "predicate": "manifestation_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifestation_of-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-manifested_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "manifested_by"}, "path": "/query", "predicate": "manifested_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-manifested_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-part_of-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "part_of"}, "path": "/query", "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-part_of-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "part_of"}, "path": "/query", "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-Cell"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-part_of-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "part_of"}, "path": "/query", "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-part_of-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "part_of"}, "path": "/query", "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-part_of-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "part_of"}, "path": "/query", "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-part_of-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-physically_interacts_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-preceded_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "preceded_by"}, "path": "/query", "predicate": "preceded_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-preceded_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-preceded_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "preceded_by"}, "path": "/query", "predicate": "preceded_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-preceded_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-precedes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "precedes"}, "path": "/query", "predicate": "precedes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-precedes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-predisposes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "predisposes"}, "path": "/query", "predicate": "predisposes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-predisposes-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produced_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produced_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produces-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produces-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-produces-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-produces-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-Disease"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-Gene"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-subclass_of-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subclass_of"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-subclass_of-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "PhenotypicFeature-treats-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treats"}, "path": "/query", "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-treats-Disease"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"PhenotypicFeature-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "PhenotypicFeature-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "PhenotypicFeature-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "PhenotypicFeature-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "PhenotypicFeature-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "PhenotypicFeature-affects-Cell": {"pmid": "affects.pmid", "umls": "affects.umls"}, "PhenotypicFeature-affects-CellularComponent": {"pmid": "affects.pmid", "umls": "affects.umls"}, "PhenotypicFeature-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "PhenotypicFeature-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "PhenotypicFeature-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "PhenotypicFeature-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "PhenotypicFeature-disrupted_by-Disease": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "PhenotypicFeature-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "PhenotypicFeature-disrupts-BiologicalProcess": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "PhenotypicFeature-disrupts-Cell": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "PhenotypicFeature-disrupts-CellularComponent": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "PhenotypicFeature-disrupts-Disease": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "PhenotypicFeature-has_part-CellularComponent": {"pmid": "has_part.pmid", "umls": "has_part.umls"}, "PhenotypicFeature-has_part-ChemicalSubstance": {"pmid": "has_part.pmid", "umls": "has_part.umls"}, "PhenotypicFeature-has_part-Disease": {"pmid": "has_part.pmid", "umls": "has_part.umls"}, "PhenotypicFeature-has_part-Gene": {"pmid": "has_part.pmid", "umls": "has_part.umls"}, "PhenotypicFeature-has_subclass-Disease": {"pmid": "has_subclass.pmid", "umls": "has_subclass.umls"}, "PhenotypicFeature-has_subclass-PhenotypicFeature": {"pmid": "has_subclass.pmid", "umls": "has_subclass.umls"}, "PhenotypicFeature-located_in-AnatomicalEntity": {"pmid": "located_in.pmid", "umls": "located_in.umls"}, "PhenotypicFeature-located_in-Cell": {"pmid": "located_in.pmid", "umls": "located_in.umls"}, "PhenotypicFeature-located_in-CellularComponent": {"pmid": "located_in.pmid", "umls": "located_in.umls"}, "PhenotypicFeature-manifestation_of-BiologicalProcess": {"pmid": "manifestation_of.pmid", "umls": "manifestation_of.umls"}, "PhenotypicFeature-manifestation_of-Disease": {"pmid": "manifestation_of.pmid", "umls": "manifestation_of.umls"}, "PhenotypicFeature-manifestation_of-Gene": {"pmid": "manifestation_of.pmid", "umls": "manifestation_of.umls"}, "PhenotypicFeature-manifested_by-Disease": {"pmid": "manifested_by.pmid", "umls": "manifested_by.umls"}, "PhenotypicFeature-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "PhenotypicFeature-negatively_regulated_by-Gene": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "PhenotypicFeature-negatively_regulates-BiologicalProcess": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "PhenotypicFeature-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "PhenotypicFeature-negatively_regulates-Disease": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "PhenotypicFeature-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "PhenotypicFeature-part_of-AnatomicalEntity": {"pmid": "part_of.pmid", "umls": "part_of.umls"}, "PhenotypicFeature-part_of-Cell": {"pmid": "part_of.pmid", "umls": "part_of.umls"}, "PhenotypicFeature-part_of-CellularComponent": {"pmid": "part_of.pmid", "umls": "part_of.umls"}, "PhenotypicFeature-part_of-ChemicalSubstance": {"pmid": "part_of.pmid", "umls": "part_of.umls"}, "PhenotypicFeature-part_of-Disease": {"pmid": "part_of.pmid", "umls": "part_of.umls"}, "PhenotypicFeature-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "PhenotypicFeature-physically_interacts_with-Disease": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "PhenotypicFeature-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "PhenotypicFeature-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "PhenotypicFeature-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "PhenotypicFeature-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "PhenotypicFeature-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "PhenotypicFeature-preceded_by-BiologicalProcess": {"pmid": "preceded_by.pmid", "umls": "preceded_by.umls"}, "PhenotypicFeature-preceded_by-Disease": {"pmid": "preceded_by.pmid", "umls": "preceded_by.umls"}, "PhenotypicFeature-precedes-BiologicalProcess": {"pmid": "precedes.pmid", "umls": "precedes.umls"}, "PhenotypicFeature-predisposes-Disease": {"pmid": "predisposes.pmid", "umls": "predisposes.umls"}, "PhenotypicFeature-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "PhenotypicFeature-produced_by-BiologicalProcess": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produced_by-Cell": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produced_by-CellularComponent": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produced_by-ChemicalSubstance": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produced_by-Disease": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produced_by-Gene": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "PhenotypicFeature-produces-ChemicalSubstance": {"pmid": "produces.pmid", "umls": "produces.umls"}, "PhenotypicFeature-produces-Gene": {"pmid": "produces.pmid", "umls": "produces.umls"}, "PhenotypicFeature-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "PhenotypicFeature-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "PhenotypicFeature-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "PhenotypicFeature-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "PhenotypicFeature-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "PhenotypicFeature-subclass_of-AnatomicalEntity": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-subclass_of-BiologicalProcess": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-subclass_of-ChemicalSubstance": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-subclass_of-Disease": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-subclass_of-Gene": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-subclass_of-PhenotypicFeature": {"pmid": "subclass_of.pmid", "umls": "subclass_of.umls"}, "PhenotypicFeature-treats-Disease": {"pmid": "treats.pmid", "umls": "treats.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Phenotype API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/phenotype": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/phenotype/{phenotypeid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "phenotypeid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-affects-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-disrupts-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_part-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_subclass-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-has_subclass-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-located_in-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifestation_of-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-manifested_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-part_of-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-preceded_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-preceded_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-precedes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-predisposes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produced_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produces-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-produces-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-subclass_of-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-treats-Disease"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmedphenotype"}], "tags": [{"name": "phenotype"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "4208a6c85c109f7e770219d3234d12a2", "_meta": {"date_created": "2021-05-06T18:44:07.060054+00:00", "last_updated": "2021-05-14T07:00:58.166714+00:00", "url": "https://automat.renci.org/covid-phenotypes/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:58+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:07:14.837567"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A hand-curated graph of phenotypes of covid-19.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Covid Phenotypes&provider_long=RENCI", "title": "Automat Covid Phenotypes (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/covid-phenotypes"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "adf20dd6ff23dfe18e8e012bde686e31", "_meta": {"date_created": "2020-12-07T23:04:56.997349+00:00", "last_updated": "2021-05-14T07:00:58.500123+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/drug_response_kp/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:58+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:14.958626"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"chemical-gene": [{"inputs": [{"id": "PUBCHEM", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "association.context.disease.mondo,subject.NCBIGene,association.effect_size,association.pvalue", "q": "object.PUBCHEM:{inputs[0]} AND association.effect_size:<0 AND association.pvalue:<0.05", "size": "1000", "sort": "association.pvalue"}, "predicate": "gene_has_variant_that_contributes_to_drug_response_association", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "Multiomics Provider", "supportBatch": false}], "gene-chemical": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "PUBCHEM", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "association.context.disease.mondo,object.PUBCHEM,association.effect_size,association.pvalue", "q": "subject.NCBIGene:{inputs[0]} AND association.effect_size:<0 AND association.pvalue:<0.05", "size": "1000", "sort": "association.pvalue"}, "predicate": "gene_has_variant_that_contributes_to_drug_response_association", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "Multiomics Provider", "supportBatch": false}]}, "x-bte-response-mapping": {"chemical-gene": {"NCBIGene": "hits.subject.NCBIGene", "disease_context": "hits.association.context.disease.mondo", "effect_size": "hits.association.effect_size", "pvalue": "hits.association.pvalue"}, "gene-chemical": {"PUBCHEM": "hits.object.PUBCHEM", "disease_context": "hits.association.context.disease.mondo", "effect_size": "hits.association.effect_size", "pvalue": "hits.association.pvalue"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Drug Response KP query web services.", "termsOfService": "https://biothings.io/about", "title": "Drug Response KP API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Multiomics Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "NRAS-TCGA-LUAD", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "subject.NCBIGene:51742", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/chemical-gene"}, {"$ref": "#/components/x-bte-kgs-operations/gene-chemical"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/drug_response_kp"}, {"description": "Production server", "url": "http://biothings.ncats.io/drug_response_kp"}], "tags": [{"name": "gene"}, {"name": "disease"}, {"name": "chemical"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "dca415f2d792976af9d642b7e73f7a41", "_meta": {"date_created": "2020-12-07T23:08:24.199007+00:00", "last_updated": "2021-05-14T07:01:24.352181+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/litvar/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:24+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:53.331878"}, "components": {"x-bte-kgs-operations": {"variant_located_in_gene": [{"inputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"variantid": "{inputs[0]}%23%23"}, "predicate": "located_in", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/variant_located_in_gene"}, "source": "dbsnp", "supportBatch": false}]}, "x-bte-response-mapping": {"variant_located_in_gene": {"SYMBOL": "gene.name"}}}, "info": {"contact": {"email": "luzh@ncbi.nlm.nih.gov", "name": "Zhiyong Lu"}, "description": "LitVar allows the search and retrieval of variant relevant information from the biomedical literature and shows key biological relations between a variant and its close related entities (e.g. genes, diseases, and drugs). The LitVar results are automatically extracted (with regular updates) from over 27 million PubMed articles as well as applicable full-text articles in PubMed Central.", "termsOfService": "https://www.ncbi.nlm.nih.gov/home/about/policies/", "title": "LitVar API", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/entity/litvar/{variantid}": {"get": {"parameters": [{"description": "rsid", "example": "rs121913527", "in": "path", "name": "variantid", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "publications mentioned the submitted variant"}}, "summary": "Retrieve PMIDs of publications mentioning submitted variants", "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/variant_located_in_gene"}]}}}, "servers": [{"description": "Production server", "url": "https://www.ncbi.nlm.nih.gov/research/bionlp/litvar/api/v1"}], "tags": [{"name": "variant"}, {"name": "translator"}]}, {"_id": "57539ea28b4e19ecd36074566ca2cd56", "_meta": {"date_created": "2021-01-26T00:07:34.730271+00:00", "last_updated": "2021-05-06T07:03:05.397273+00:00", "url": "https://automat.renci.org/gtex/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:30+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:56.166860"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph containing eqtl and sqtl information from [GTEx Portal (https://gtexportal.org/home/)](https://gtexportal.org/home/). Also includes genes that the variants lie within or near.", "termsOfService": "https://http://robokop.renci.org:7055/tos?service_long=Automat GTEx&provider_long=RENCI", "title": "Automat GTEx", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/gtex"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "edeb26858bd27d0322af93e7a9e08761", "_meta": {"date_created": "2020-12-07T23:07:08.266867+00:00", "last_updated": "2021-05-14T07:01:08.806620+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/pfocr/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:08+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:51.314221"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/geneset"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Chem"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "geneset": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"associatedWith": {"inputSeparator": ",", "inputs": [{"id": "pathwayFigureID", "semantic": "Pathway"}], "outputs": [{"id": "entrez", "semantic": "Gene"}], "parameters": {"dotfield": false, "fields": "associatedWith"}, "requestBody": {"body": {"q": "{input1}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "supportBatch": true}}, "x-bte-response-mapping": {"query-post": {"@context": "http://schema.org", "@type": "Pathway", "bts:associatedWith": {"$input": "bts:pathwayFigureID", "$source": "PFOCR", "@type": "Gene", "bts:entrez": "associatedWith.genes", "bts:pmc": "associatedWith.pmc"}, "bts:pathwayFigureID": "_id"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the pfocr query web services.", "termsOfService": "https://biothings.io/about", "title": "pfocr API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/geneset": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}}}, "description": "A list of matching geneset objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of geneset IDs, return the matching geneset object", "tags": ["geneset"]}}, "/geneset/{genesetid}": {"get": {"parameters": [{"description": "Retrieve geneset objects based on geneset ID  Supports JSONP and CORS as well.", "example": "PMC2673547__nihms99366f8.jpg", "in": "path", "name": "genesetid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/geneset"}}}, "description": "A matching geneset object"}, "404": {"description": "A response indicating an unknown geneset ID"}}, "summary": "Retrieve geneset objects based on ID", "tags": ["geneset"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "pfocr metadata object"}}, "summary": "Get metadata about the data available from pfocr", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "pfocr metadata fields object"}}, "summary": "Get metadata about the data fields available from a pfocr geneset object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "associatedWith.genes:1378", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/query-post"}}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch geneset queries and return matching geneset hits", "tags": ["query"], "x-bte-kgs-operations": {"associatedWith": {"$ref": "#/components/x-bte-kgs-operations/associatedWith"}}}}}, "servers": [{"description": "Encrypted Production server", "url": "https://pending.biothings.io/pfocr"}, {"description": "Production server", "url": "http://pending.biothings.io/pfocr"}], "tags": [{"name": "geneset"}, {"name": "gene"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "a3cfb0c18f630ce73ccf86b1db5117db", "_meta": {"date_created": "2021-02-03T00:00:38.618714+00:00", "last_updated": "2021-05-06T07:03:50.896842+00:00", "url": "https://automat.renci.org/panther/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:09+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:52.077846"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " A graph of gene families and pathways from [Panther (pantherdb.org)](pantherdb.org)", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Panther&provider_long=RENCI", "title": "Automat Panther", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/panther"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "34bad236d77bea0a0ee6c6cba5be54a6", "_meta": {"date_created": "2020-12-07T23:05:11.871445+00:00", "last_updated": "2021-05-14T07:01:18.632746+00:00", "slug": "go_ma", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/go_mf/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:18+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:52.203841"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Geneset": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Geneset"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"has_part": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "_id"}, "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "part_of.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_part"}, "source": "Gene Ontology", "supportBatch": true}], "has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "children"}, "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "Gene Ontology", "supportBatch": true}], "part_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "part_of.go"}, "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/part_of"}, "source": "Gene Ontology", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "parents"}, "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "Gene Ontology", "supportBatch": true}]}, "x-bte-response-mapping": {"has_part": {"GO": "_id"}, "has_subclass": {"GO": "children"}, "part_of": {"GO": "part_of.go"}, "subclass_of": {"GO": "parents"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Gene Ontology Molecular Activity query web services.", "termsOfService": "https://biothings.io/about", "title": "Gene Ontology Molecular Activity API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/geneset": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}}}, "description": "A list of matching geneset objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of geneset IDs, return the matching geneset object", "tags": ["geneset"]}}, "/geneset/{genesetid}": {"get": {"parameters": [{"description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.", "example": "GO:0018672", "in": "path", "name": "genesetid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Geneset"}}}, "description": "A matching geneset object"}, "404": {"description": "A response indicating an unknown geneset ID"}}, "summary": "Retrieve geneset objects based on ID", "tags": ["geneset"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "DISEASES metadata object"}}, "summary": "Get metadata about the data available from DISEASES", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "DISEASES metadata fields object"}}, "summary": "Get metadata about the data fields available object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "parents:\"GO:0016705\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch geneset queries and return matching geneset hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}, {"$ref": "#/components/x-bte-kgs-operations/part_of"}, {"$ref": "#/components/x-bte-kgs-operations/has_part"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/go_mf"}, {"description": "Production server", "url": "http://biothings.ncats.io/go_mf"}], "tags": [{"name": "ontology"}, {"name": "molecular activity"}, {"name": "geneset"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "ec6d76016ef40f284359d17fbf78df20", "_meta": {"date_created": "2020-12-07T23:01:49.428353+00:00", "last_updated": "2021-05-14T07:01:19.012386+00:00", "slug": "uberon", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/uberon/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:18+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:52.350656"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Phenotype": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Phenotype"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Phenotype"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"develops_from": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "develops_from.uberon"}, "predicate": "develops_from", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/develops_from"}, "source": "UBERON Ontology", "supportBatch": true}], "has_part": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "_id"}, "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "part_of.uberon"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_part"}, "source": "UBERON Ontology", "supportBatch": true}], "has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "children"}, "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "UBERON Ontology", "supportBatch": true}], "located_in": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "located_in.uberon"}, "predicate": "located_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/located_in"}, "source": "UBERON Ontology", "supportBatch": true}], "location_of": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "location_of.uberon"}, "predicate": "location_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/location_of"}, "source": "UBERON Ontology", "supportBatch": true}], "part_of": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "part_of.uberon"}, "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/part_of"}, "source": "UBERON Ontology", "supportBatch": true}], "produced_by": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "produced_by.uberon"}, "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/produced_by"}, "source": "UBERON Ontology", "supportBatch": true}], "produces": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "_id"}, "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "produced_by.uberon"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/produces"}, "source": "UBERON Ontology", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "parents"}, "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "UBERON Ontology", "supportBatch": true}]}, "x-bte-response-mapping": {"develops_from": {"UBERON": "develops_from.uberon"}, "has_part": {"UBERON": "_id"}, "has_subclass": {"UBERON": "children"}, "located_in": {"UBERON": "located_in.uberon"}, "location_of": {"UBERON": "location_of.uberon"}, "part_of": {"UBERON": "part_of.uberon"}, "produced_by": {"UBERON": "produced_by.uberon"}, "produces": {"UBERON": "_id"}, "subclass_of": {"UBERON": "parents"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the UBERON query web services.", "termsOfService": "https://biothings.io/about", "title": "UBERON Ontology API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/anatomy": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple UBERON anatomy IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Phenotype"}, "type": "array"}}}, "description": "A list of matching anatomy objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of anatomy IDs, return the matching anatomy object", "tags": ["anatomy"]}}, "/anatomy/{anatomyid}": {"get": {"parameters": [{"description": "Retrieve anatomy objects based on UBERON anatomy ID  Supports JSONP and CORS as well.", "example": "UBERON:2002108", "in": "path", "name": "anatomyid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Phenotype"}}}, "description": "A matching anatomy object"}, "404": {"description": "A response indicating an unknown anatomy ID"}}, "summary": "Retrieve anatomy objects based on ID", "tags": ["anatomy"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "UBERON metadata object"}}, "summary": "Get metadata about the data available from UBERON", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "UBERON metadata fields object"}}, "summary": "Get metadata about the data fields available object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "parents:\"UBERON:2001995\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching anatomy hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" propert"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch anatomy queries and return matching anatomy hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}, {"$ref": "#/components/x-bte-kgs-operations/part_of"}, {"$ref": "#/components/x-bte-kgs-operations/has_part"}, {"$ref": "#/components/x-bte-kgs-operations/develops_from"}, {"$ref": "#/components/x-bte-kgs-operations/located_in"}, {"$ref": "#/components/x-bte-kgs-operations/location_of"}, {"$ref": "#/components/x-bte-kgs-operations/produced_by"}, {"$ref": "#/components/x-bte-kgs-operations/produces"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/uberon"}, {"description": "Production server", "url": "http://biothings.ncats.io/uberon"}], "tags": [{"name": "anatomy"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "5219cefb9d2b8d5df08c3a956fdd20f3", "_meta": {"date_created": "2021-02-11T00:04:22.638313+00:00", "last_updated": "2021-05-14T07:01:11.487783+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/tcga_mut_freq/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:11+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:52.478921"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"disease-gene": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"fields": "association.freq_by_sample,subject.SYMBOL", "q": "object.id:\"{inputs[0]}\" AND association.freq_by_sample:>0.1", "size": "1000", "sort": "-association.freq_by_sample"}, "predicate": "gene_has_variant_that_contributes_to_disease_association", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-gene"}, "source": "Multiomics Provider", "supportBatch": false}], "gene-disease": [{"inputs": [{"id": "SYMBOL", "semantic": "Gene"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "association.freq_by_sample,object.MONDO", "q": "subject.SYMBOL:{inputs[0]} AND association.freq_by_sample:>0.1", "size": "1000", "sort": "-association.freq_by_sample"}, "predicate": "gene_has_variant_that_contributes_to_disease_association", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-disease"}, "source": "Multiomics Provider", "supportBatch": false}]}, "x-bte-response-mapping": {"disease-gene": {"SYMBOL": "hits.subject.SYMBOL", "frequency": "hits.association.freq_by_sample"}, "gene-disease": {"MONDO": "hits.object.MONDO", "frequency": "hits.association.freq_by_sample"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the TCGA Mutation Frequency KP query web services.", "termsOfService": "https://biothings.io/about", "title": "TCGA Mutation Frequency KP API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Multiomics Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "NRAS-TCGA-LUAD", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "object.MONDO:\"MONDO:0005061\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-gene"}, {"$ref": "#/components/x-bte-kgs-operations/gene-disease"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/tcga_mut_freq_kp"}, {"description": "Production server", "url": "http://biothings.ncats.io/tcga_mut_freq_kp"}], "tags": [{"name": "gene"}, {"name": "disease"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "81955d376a10505c1c69cd06dbda3047", "_meta": {"date_created": "2020-12-07T23:01:45.135044+00:00", "last_updated": "2021-05-14T07:01:11.133430+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_gene.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:10+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:52.933305"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"Gene-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-affected_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affected_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-affects-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-affects-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupted_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupted_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-disrupts-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-disrupts-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-negatively_regulates-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-negatively_regulates-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-physically_interacts_with-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-physically_interacts_with-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-positively_regulates-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-positively_regulates-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-Cell"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "Gene-related_to-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-related_to-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Gene-treats-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Gene"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treats"}, "path": "/query", "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-treats-Disease"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"Gene-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Gene-affected_by-CellularComponent": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Gene-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Gene-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Gene-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Gene-affects-AnatomicalEntity": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-Cell": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-CellularComponent": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-ChemicalSubstance": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-Gene": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-affects-PhenotypicFeature": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Gene-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "Gene-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "Gene-disrupted_by-BiologicalProcess": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Gene-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Gene-disrupted_by-Disease": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Gene-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Gene-disrupts-AnatomicalEntity": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-BiologicalProcess": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-Cell": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-CellularComponent": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-ChemicalSubstance": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-Disease": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-Gene": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-disrupts-PhenotypicFeature": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Gene-negatively_regulated_by-AnatomicalEntity": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-BiologicalProcess": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-Cell": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-CellularComponent": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-Disease": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-Gene": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulated_by-PhenotypicFeature": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Gene-negatively_regulates-BiologicalProcess": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-negatively_regulates-CellularComponent": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-negatively_regulates-Disease": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-negatively_regulates-PhenotypicFeature": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Gene-physically_interacts_with-AnatomicalEntity": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-BiologicalProcess": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-Cell": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-CellularComponent": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-Disease": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-physically_interacts_with-PhenotypicFeature": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Gene-positively_regulated_by-AnatomicalEntity": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-BiologicalProcess": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-Cell": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-CellularComponent": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-Disease": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulated_by-PhenotypicFeature": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Gene-positively_regulates-AnatomicalEntity": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-BiologicalProcess": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-Cell": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-CellularComponent": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-Disease": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-positively_regulates-PhenotypicFeature": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Gene-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "Gene-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-Cell": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-related_to-PhenotypicFeature": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Gene-treats-Disease": {"pmid": "treats.pmid", "umls": "treats.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Gene API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/gene": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/gene/{geneid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "geneid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affected_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-affects-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-disrupts-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulated_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-negatively_regulates-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-physically_interacts_with-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulated_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-positively_regulates-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-treats-Disease"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmedgene"}], "tags": [{"name": "disease"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "7c481f0761132876e6b953547623f594", "_meta": {"date_created": "2021-01-26T00:03:04.513280+00:00", "last_updated": "2021-05-06T07:03:50.140678+00:00", "url": "https://automat.renci.org/pharos/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:17+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:42.803401"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [Pharos (pharos.nih.gov)](pharos.nih.gov).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Pharos&provider_long=RENCI", "title": "Automat Pharos", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/pharos"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "a7f784626a426d054885a5f33f17d3f8", "_meta": {"date_created": "2020-12-07T23:02:08.115894+00:00", "last_updated": "2021-05-14T07:00:57.673195+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/DISEASES/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:00:57+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:41.509311"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"disease-gene": [{"inputSeparator": ",", "inputs": [{"id": "DOID", "semantic": "Disease"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"fields": "DISEASES.associatedWith"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "DISEASES.doid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-gene"}, "source": "DISEASES", "supportBatch": true}], "gene-disease": [{"inputSeparator": ",", "inputs": [{"id": "SYMBOL", "semantic": "Gene"}], "outputs": [{"id": "DOID", "semantic": "Disease"}], "parameters": {"fields": "DISEASES.doid", "size": "250"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "DISEASES.associatedWith.symbol"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-disease"}, "source": "DISEASES", "supportBatch": true}]}, "x-bte-response-mapping": {"disease-gene": {"SYMBOL": "DISEASES.associatedWith.symbol", "category": "DISEASES.associatedWith.category"}, "gene-disease": {"DOID": "DISEASES.doid"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the DISEASES query web services.", "termsOfService": "https://biothings.io/about", "title": "DISEASES API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/disease": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple MONDO Disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["disease"]}}, "/disease/{diseaseid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on MONDO disease ID  Supports JSONP and CORS as well.", "example": "MONDO:0016537", "in": "path", "name": "diseaseid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "DISEASES metadata object"}}, "summary": "Get metadata about the data available from DISEASES", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "DISEASES metadata fields object"}}, "summary": "Get metadata about the data fields available from a DISEASES disease object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "DISEASES.doid:\"DOID:0110389\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/query-post"}}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-gene"}, {"$ref": "#/components/x-bte-kgs-operations/gene-disease"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/DISEASES"}, {"description": "Production server", "url": "http://biothings.ncats.io/DISEASES"}], "tags": [{"name": "gene"}, {"name": "disease"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "7c07eca4ef5ceb532d06c0180e86aedd", "_meta": {"date_created": "2020-12-07T22:59:11.235751+00:00", "last_updated": "2021-05-14T07:01:05.505987+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_chemical.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:04+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:41.929160"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"ChemicalSubstance-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-affects-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-affects-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-coexists_with-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-coexists_with-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-disrupts-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-disrupts-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-negatively_regulates-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-negatively_regulates-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-physically_interacts_with-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-physically_interacts_with-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-positively_regulates-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-positively_regulates-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produced_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "produced_by"}, "path": "/query", "predicate": "produced_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produced_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produces-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produces-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-Cell"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produces-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produces-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-produces-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "produces"}, "path": "/query", "predicate": "produces", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-produces-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-related_to-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-related_to-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "ChemicalSubstance-treats-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treats"}, "path": "/query", "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-treats-Disease"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"ChemicalSubstance-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "ChemicalSubstance-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "ChemicalSubstance-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "ChemicalSubstance-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "ChemicalSubstance-affects-AnatomicalEntity": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-Cell": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-CellularComponent": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-ChemicalSubstance": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-Gene": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-affects-PhenotypicFeature": {"pmid": "affects.pmid", "umls": "affects.umls"}, "ChemicalSubstance-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "ChemicalSubstance-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "ChemicalSubstance-coexists_with-AnatomicalEntity": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-BiologicalProcess": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-Cell": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-CellularComponent": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-ChemicalSubstance": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-Disease": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-Gene": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-coexists_with-PhenotypicFeature": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "ChemicalSubstance-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "ChemicalSubstance-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "ChemicalSubstance-disrupts-AnatomicalEntity": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-BiologicalProcess": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-Cell": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-CellularComponent": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-ChemicalSubstance": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-Disease": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-Gene": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-disrupts-PhenotypicFeature": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "ChemicalSubstance-negatively_regulated_by-AnatomicalEntity": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-BiologicalProcess": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-Cell": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-CellularComponent": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-Disease": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-Gene": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulated_by-PhenotypicFeature": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "ChemicalSubstance-negatively_regulates-AnatomicalEntity": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-BiologicalProcess": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-Cell": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-CellularComponent": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-Disease": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-negatively_regulates-PhenotypicFeature": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "ChemicalSubstance-physically_interacts_with-AnatomicalEntity": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-BiologicalProcess": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-Cell": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-CellularComponent": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-Disease": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-physically_interacts_with-PhenotypicFeature": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "ChemicalSubstance-positively_regulated_by-AnatomicalEntity": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-BiologicalProcess": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-Cell": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-CellularComponent": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-Disease": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulated_by-PhenotypicFeature": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "ChemicalSubstance-positively_regulates-AnatomicalEntity": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-BiologicalProcess": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-Cell": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-CellularComponent": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-Disease": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-positively_regulates-PhenotypicFeature": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "ChemicalSubstance-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "ChemicalSubstance-produced_by-AnatomicalEntity": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-BiologicalProcess": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-Cell": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-CellularComponent": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-ChemicalSubstance": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-Disease": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-Gene": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produced_by-PhenotypicFeature": {"pmid": "produced_by.pmid", "umls": "produced_by.umls"}, "ChemicalSubstance-produces-AnatomicalEntity": {"pmid": "produces.pmid", "umls": "produces.umls"}, "ChemicalSubstance-produces-Cell": {"pmid": "produces.pmid", "umls": "produces.umls"}, "ChemicalSubstance-produces-ChemicalSubstance": {"pmid": "produces.pmid", "umls": "produces.umls"}, "ChemicalSubstance-produces-Gene": {"pmid": "produces.pmid", "umls": "produces.umls"}, "ChemicalSubstance-produces-PhenotypicFeature": {"pmid": "produces.pmid", "umls": "produces.umls"}, "ChemicalSubstance-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-related_to-PhenotypicFeature": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "ChemicalSubstance-treats-Disease": {"pmid": "treats.pmid", "umls": "treats.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Chemical API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/chemical": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/chemical/{chemicalid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "chemicalid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-affects-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-coexists_with-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-disrupts-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulated_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-negatively_regulates-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-physically_interacts_with-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulated_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-positively_regulates-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produced_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-produces-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-treats-Disease"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmedchemical"}], "tags": [{"name": "chemical"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "eb28713e2e23160e80e88f3a5dabcca4", "_meta": {"date_created": "2020-03-12T16:20:11.288144+00:00", "last_updated": "2021-02-17T07:42:16.930988+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/RGD/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:07+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:38.020087"}, "components": {"x-bte-kgs-operations": {"hasHomolog": {"inputs": [{"id": "rgd", "semantic": "Gene"}], "outputs": [{"id": "symbol", "semantic": "Gene"}], "parameters": {"geneid": "{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-homolog"}, "supportBatch": false}}, "x-bte-response-mapping": {"gene-homolog": {"@context": "http://schema.org", "@type": "Gene", "bts:hasHomolog": {"$input": "bts:rgd", "$source": "RGD", "@type": "Gene", "bts:symbol": "ensemblGeneSymbol"}, "bts:rgd": "rgd"}}}, "info": {"contact": {"email": "help@rgd.org", "name": "rgd help desk", "x-role": "responsible developer"}, "description": "The RGD API", "termsOfService": "http://www.rgd.org", "title": "RGD API", "version": "1.0"}, "openapi": "3.0.0", "paths": {"/genes/{geneid}": {"get": {"parameters": [{"description": "RGD id", "example": "620465", "in": "path", "name": "geneid", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A RGD object", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-homolog"}}}, "summary": "retrieve rgd data", "x-bte-kgs-operations": {"associatedWith": {"$ref": "#/components/x-bte-kgs-operations/hasHomolog"}}}}}, "servers": [{"description": "Production server", "url": "https://rest.rgd.mcw.edu/rgdws"}], "tags": [{"name": "translator"}, {"name": "gene"}]}, {"_id": "1f277e1563fcfd124bfae2cc3c4bcdec", "_meta": {"date_created": "2021-02-11T00:06:11.157097+00:00", "last_updated": "2021-05-14T07:01:18.273372+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/quickgo/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:18+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:50.707746"}, "components": {"x-bte-kgs-operations": {"ma_has_subclass_ma": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"goid": "{inputs[0]}"}, "predicate": "superclass_of", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ma_has_subclass_ma"}, "source": "Gene Ontology", "supportBatch": false}]}, "x-bte-response-mapping": {"ma_has_subclass_ma": {"GO": "results.children.id", "name": "results.children.name", "relation": "results.children.relation"}}}, "info": {"contact": {"email": "help@pharmgkb.org", "name": "pharmgkb help desk", "x-role": "responsible developer"}, "description": "The QuickGO REST API provides access to key biological data from QuickGO and GOA. The services provide a unified interface to query information about ontology terms from GO (the Gene Ontology) and ECO (the Evidence & Conclusion Ontology), Gene Ontology annotations from the EBI's GOA database, and gene products (proteins from UniProt, RNA from RNAcentral and complexes from ComplexPortal). ", "termsOfService": "https://www.ebi.ac.uk/QuickGO/services", "title": "QuickGO API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/ontology/go/terms/{goid}/children": {"get": {"parameters": [{"description": "Put Gene Ontology ID here, e.g. GO:0000082", "example": "GO:0000082", "in": "path", "name": "goid", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A gene ontology annotation object"}}, "summary": "retrieve the children of specified ontology terms", "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/ma_has_subclass_ma"}]}}}, "servers": [{"description": "Production server", "url": "https://www.ebi.ac.uk/QuickGO/services"}], "tags": [{"name": "ontology"}, {"name": "translator"}]}, {"_id": "a680e39140826113c3c9f426dc0a7289", "_meta": {"date_created": "2021-01-26T00:00:44.070682+00:00", "last_updated": "2021-05-06T07:01:29.846171+00:00", "url": "https://automat.renci.org/cord19-scibite/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:08+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:07:51.152416"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A literature co-occurence graph based on the [scibite parsing (https://github.com/SciBiteLabs/CORD19)](https://github.com/SciBiteLabs/CORD19) of the CORD-19 paper set.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Cord19 Scibite&provider_long=RENCI", "title": "Automat Cord19 Scibite", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/cord19-scibite"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "a5b0ec6bfde5008984d4b6cde402d61f", "_meta": {"date_created": "2020-12-07T23:00:57.213020+00:00", "last_updated": "2021-05-14T07:01:56.621543+00:00", "slug": "hpontology", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/hpo/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:56+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:18.585275"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Phenotype": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Phenotype"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Phenotype"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "children"}, "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "Human Phenotype Ontology", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "parents"}, "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "Human Phenotype Ontology", "supportBatch": true}]}, "x-bte-response-mapping": {"has_subclass": {"HP": "children"}, "subclass_of": {"HP": "parents"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the HPO query web services.", "termsOfService": "https://biothings.io/about", "title": "Human Phenotype Ontology API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/phenotype": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple HPO phenotype IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Phenotype"}, "type": "array"}}}, "description": "A list of matching phenotype objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of phenotype IDs, return the matching phenotype object", "tags": ["phenotype"]}}, "/phenotype/{phenotypeid}": {"get": {"parameters": [{"description": "Retrieve phenotype objects based on HPO phenotype ID  Supports JSONP and CORS as well.", "example": "HP:0000791", "in": "path", "name": "phenotypeid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Phenotype"}}}, "description": "A matching phenotype object"}, "404": {"description": "A response indicating an unknown phenotype ID"}}, "summary": "Retrieve phenotype objects based on ID", "tags": ["phenotype"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "DISEASES metadata object"}}, "summary": "Get metadata about the data available from DISEASES", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "DISEASES metadata fields object"}}, "summary": "Get metadata about the data fields available object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "parents:\"HP:0000787\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching phenotype hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" propert"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch phenotype queries and return matching phenotype hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/hpo"}, {"description": "Production server", "url": "http://biothings.ncats.io/hpo"}], "tags": [{"name": "phenotype"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "49015a5444165956a9e45655dc1ea389", "_meta": {"date_created": "2021-01-26T00:04:34.149152+00:00", "last_updated": "2021-05-06T07:02:56.933159+00:00", "url": "https://automat.renci.org/human-goa/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:57+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:19.033725"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " Human Gene Ontology Annotations from the GO consortium.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Human GOA&provider_long=RENCI", "title": "Automat Human GOA", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/human-goa"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "671b45c0301c8624abbd26ae78449ca2", "_meta": {"date_created": "2021-02-10T05:26:25.703523+00:00", "last_updated": "2021-05-14T07:01:30.287530+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mydisease.info/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:30+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:13.604607"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"chemical-disease": [{"inputSeparator": ",", "inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "MESH", "semantic": "Disease"}], "parameters": {"fields": "ctd.mesh", "size": "1000"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ctd.chemical_related_to_disease.mesh_chemical_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ctd-mesh-disease"}, "source": "CTD", "supportBatch": true}], "chemical-disease2": [{"inputSeparator": ",", "inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "method": "post", "outputs": [{"id": "OMIM", "semantic": "Disease"}], "parameters": {"fields": "ctd.omim", "size": "1000"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ctd.chemical_related_to_disease.mesh_chemical_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ctd-omim-disease"}, "source": "CTD", "supportBatch": true}], "disease-chemical": [{"inputSeparator": ",", "inputs": [{"id": "MESH", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "ctd.chemical_related_to_disease"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ctd.mesh"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-chemical"}, "source": "CTD", "supportBatch": true}], "disease-chemical2": [{"inputSeparator": ",", "inputs": [{"id": "OMIM", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "ctd.chemical_related_to_disease"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "ctd.omim"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-chemical"}, "source": "CTD", "supportBatch": true}], "disease-gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "disgenet.genes_related_to_disease"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mondo.xrefs.umls, disgenet.xrefs.umls"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-gene"}, "source": "DisGeNET", "supportBatch": true}], "disease-phenotype": [{"inputSeparator": ",", "inputs": [{"id": "OMIM", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "hpo.phenotype_related_to_disease"}, "predicate": "has_phenotype", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "hpo.omim"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-phenotype"}, "source": "HPO Annotations", "supportBatch": true}], "disease-phenotype2": [{"inputSeparator": ",", "inputs": [{"id": "ORPHANET", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "hpo.phenotype_related_to_disease"}, "predicate": "has_phenotype", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "hpo.orphanet"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-phenotype"}, "source": "HPO Annotations", "supportBatch": true}], "disease-phenotype3": [{"inputSeparator": ",", "inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "covid_phenotypes.hp"}, "predicate": "has_phenotype", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mondo.mondo"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-phenotype2"}, "source": "Automat covid_phenotypes", "supportBatch": true}], "disease-variant": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "outputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "parameters": {"fields": "disgenet.variants_related_to_disease"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mondo.xrefs.umls, disgenet.xrefs.umls"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-variant"}, "source": "DisGeNET", "supportBatch": true}], "gene-disease": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disgenet.xrefs.umls", "size": "1000"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "disgenet.genes_related_to_disease.gene_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/umls"}, "source": "DisGeNET", "supportBatch": true}], "has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "MONDO", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "mondo.descendants", "size": "1000"}, "path": "/query", "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mondo.mondo"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "MONDO", "supportBatch": true}], "phenotype-disease": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "OMIM", "semantic": "Disease"}], "parameters": {"fields": "hpo.omim", "size": "1000"}, "path": "/query", "predicate": "phenotype_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "hpo.phenotype_related_to_disease.hpo_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/omim"}, "source": "HPO Annotations", "supportBatch": true}], "phenotype-disease2": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "ORPHANET", "semantic": "Disease"}], "parameters": {"fields": "hpo.orphanet", "size": "1000"}, "path": "/query", "predicate": "phenotype_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "hpo.phenotype_related_to_disease.hpo_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/orphanet"}, "source": "HPO Annotations", "supportBatch": true}], "phenotype-disease3": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "method": "post", "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "mondo.mondo"}, "path": "/query", "predicate": "phenotype_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "covid_phenotypes.hp"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/mondo"}, "source": "Automat covid_phenotypes", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "MONDO", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "mondo.parents", "size": "1000"}, "path": "/query", "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mondo.mondo"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "MONDO", "supportBatch": true}], "variant-disease": [{"inputSeparator": ",", "inputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disgenet.xrefs.umls", "size": "1000"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "disgenet.variants_related_to_disease.rsid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/umls"}, "source": "DisGeNET", "supportBatch": true}]}, "x-bte-response-mapping": {"ctd-mesh-disease": {"MESH": "ctd.mesh"}, "ctd-omim-disease": {"OMIM": "ctd.omim"}, "disease-chemical": {"MESH": "ctd.chemical_related_to_disease.mesh_chemical_id", "evidence": "ctd.chemical_related_to_disease.direct_evidence", "pubmed": "ctd.chemical_related_to_disease.pubmed"}, "disease-gene": {"NCBIGene": "disgenet.genes_related_to_disease.gene_id", "pubmed": "disgenet.genes_related_to_disease.pubmed"}, "disease-phenotype": {"HP": "hpo.phenotype_related_to_disease.hpo_id", "evidence": "hpo.phenotype_related_to_disease.evidence", "frequency": "hpo.phenotype_related_to_disease.numeric_freq", "pubmed": "hpo.phenotype_related_to_disease.pmid_refs"}, "disease-phenotype2": {"HP": "covid_phenotypes.hp"}, "disease-variant": {"DBSNP": "disgenet.variants_related_to_disease.rsid", "pubmed": "disgenet.variants_related_to_disease.pubmed"}, "has_subclass": {"MONDO": "mondo.descendants"}, "mondo": {"MONDO": "mondo.mondo"}, "omim": {"OMIM": "hpo.omim"}, "orphanet": {"ORPHANET": "hpo.orphanet"}, "subclass_of": {"MONDO": "mondo.parents"}, "umls": {"UMLS": "disgenet.xrefs.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the MyDisease.info disease query web services.  Learn more about [mydisease.info](http://mydisease.info/)", "termsOfService": "http://mydisease.info/terms", "title": "MyDisease.info API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/disease": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["disease"]}}, "/disease/{diseaseid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "MONDO:0016575", "in": "path", "name": "diseaseid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-gene"}, {"$ref": "#/components/x-bte-kgs-operations/disease-variant"}, {"$ref": "#/components/x-bte-kgs-operations/disease-phenotype"}, {"$ref": "#/components/x-bte-kgs-operations/disease-phenotype2"}, {"$ref": "#/components/x-bte-kgs-operations/disease-phenotype3"}, {"$ref": "#/components/x-bte-kgs-operations/disease-chemical"}, {"$ref": "#/components/x-bte-kgs-operations/disease-chemical2"}, {"$ref": "#/components/x-bte-kgs-operations/gene-disease"}, {"$ref": "#/components/x-bte-kgs-operations/variant-disease"}, {"$ref": "#/components/x-bte-kgs-operations/phenotype-disease"}, {"$ref": "#/components/x-bte-kgs-operations/phenotype-disease2"}, {"$ref": "#/components/x-bte-kgs-operations/phenotype-disease3"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-disease"}, {"$ref": "#/components/x-bte-kgs-operations/chemical-disease2"}, {"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}]}}}, "servers": [{"description": "Production server", "url": "http://mydisease.info/v1"}], "tags": [{"name": "disease"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "77ed27f111262d0289ed4f4071faa619", "_meta": {"date_created": "2020-12-07T23:05:24.514205+00:00", "last_updated": "2021-05-14T07:01:50.432761+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/MGIgene2phenotype/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:50+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:13.742948"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Gene": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Gene"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Chem"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"disease_related_to_gene": [{"inputSeparator": ",", "inputs": [{"id": "DOID", "semantic": "Disease"}], "outputs": [{"id": "MGI", "semantic": "Gene"}], "parameters": {"fields": "_id", "size": "300"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mgi.associated_with_disease.doid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/mgi"}, "source": "mgi_gene2phenotype", "supportBatch": true}], "gene_related_to_disease": [{"inputSeparator": ",", "inputs": [{"id": "MGI", "semantic": "Gene"}], "outputs": [{"id": "DOID", "semantic": "Disease"}], "parameters": {"fields": "mgi.associated_with_disease"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene_related_to_disease"}, "source": "mgi_gene2phenotype", "supportBatch": true}], "gene_related_to_phenotype": [{"inputSeparator": ",", "inputs": [{"id": "MGI", "semantic": "Gene"}], "outputs": [{"id": "MP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "mgi.associated_with_phenotype"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene_related_to_phenotype"}, "source": "mgi_gene2phenotype", "supportBatch": true}], "phenotype_related_to_gene": [{"inputSeparator": ",", "inputs": [{"id": "MP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MGI", "semantic": "Gene"}], "parameters": {"fields": "_id", "size": "300"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "mgi.associated_with_phenotype.mp"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/mgi"}, "source": "mgi_gene2phenotype", "supportBatch": true}]}, "x-bte-response-mapping": {"gene_related_to_disease": {"DOID": "mgi.associated_with_disease.doid", "name": "mgi.associated_with_disease.name"}, "gene_related_to_phenotype": {"MP": "mgi.associated_with_phenotype.mp", "pubmed": "mgi.associated_with_phenotype.pubmed"}, "mgi": {"MGI": "_id"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the MGIgene2phenotype query web services.", "termsOfService": "https://biothings.io/about", "title": "MGIgene2phenotype API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/gene": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple MGI Gene IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Gene"}, "type": "array"}}}, "description": "A list of matching gene objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of chemical IDs, return the matching gene object", "tags": ["gene"]}}, "/gene/{geneid}": {"get": {"parameters": [{"description": "Retrieve gene objects based on MGI Gene ID  Supports JSONP and CORS as well.", "example": "MGI:101864", "in": "path", "name": "geneid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Gene"}}}, "description": "A matching gene object"}, "404": {"description": "A response indicating an unknown gene ID"}}, "summary": "Retrieve gene objects based on ID", "tags": ["gene"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MGIgene2phenotype metadata object"}}, "summary": "Get metadata about the data available from MGIgene2phenotype", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "MGIgene2phenotype metadata fields object"}}, "summary": "Get metadata about the data fields available from a MGIgene2phenotype gene object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "mgi.associated_with_disease.doid:\"DOID:0110293\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching gene hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch gene queries and return matching gene hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene_related_to_phenotype"}, {"$ref": "#/components/x-bte-kgs-operations/gene_related_to_disease"}, {"$ref": "#/components/x-bte-kgs-operations/phenotype_related_to_gene"}, {"$ref": "#/components/x-bte-kgs-operations/disease_related_to_gene"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/mgigene2phenotype"}, {"description": "Production server", "url": "http://biothings.ncats.io/mgigene2phenotype"}], "tags": [{"name": "gene"}, {"name": "phenotype"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "cc857d5b7c8b7609b5bbb38ff990bfff", "_meta": {"date_created": "2020-12-07T23:07:17.431637+00:00", "last_updated": "2021-05-14T07:01:34.949209+00:00", "slug": "go_bp", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/go_bp/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:34+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:13.896209"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Geneset": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Geneset"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"has_part": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "_id"}, "predicate": "has_part", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "part_of.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_part"}, "source": "Gene Ontology", "supportBatch": true}], "has_subclass": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "children"}, "predicate": "superclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/has_subclass"}, "source": "Gene Ontology", "supportBatch": true}], "negatively_regulated_by": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "_id"}, "predicate": "process_negatively_regulated_by_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "negatively_regulates.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/negatively_regulated_by"}, "source": "Gene Ontology", "supportBatch": true}], "negatively_regulates": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates.go"}, "predicate": "process_negatively_regulates_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/negatively_regulates"}, "source": "Gene Ontology", "supportBatch": true}], "part_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "part_of.go"}, "predicate": "part_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/part_of"}, "source": "Gene Ontology", "supportBatch": true}], "positively_regulated_by": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "_id"}, "predicate": "process_positively_regulated_by_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "positively_regulates.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/positively_regulated_by"}, "source": "Gene Ontology", "supportBatch": true}], "positively_regulates": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulates.go"}, "predicate": "process_positively_regulates_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/positively_regulates"}, "source": "Gene Ontology", "supportBatch": true}], "regulated_by": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "_id"}, "predicate": "process_regulated_by_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "regulates.go"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/regulated_by"}, "source": "Gene Ontology", "supportBatch": true}], "regulates": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "regulates.go"}, "predicate": "process_regulates_process", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/regulates"}, "source": "Gene Ontology", "supportBatch": true}], "subclass_of": [{"inputSeparator": ",", "inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "parents"}, "predicate": "subclass_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/subclass_of"}, "source": "Gene Ontology", "supportBatch": true}]}, "x-bte-response-mapping": {"has_part": {"GO": "_id"}, "has_subclass": {"GO": "children"}, "negatively_regulated_by": {"GO": "_id"}, "negatively_regulates": {"GO": "negatively_regulates.go"}, "part_of": {"GO": "part_of.go"}, "positively_regulated_by": {"GO": "_id"}, "positively_regulates": {"GO": "positively_regulates.go"}, "regulated_by": {"GO": "_id"}, "regulates": {"GO": "regulates.go"}, "subclass_of": {"GO": "parents"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Gene Ontology Biological Process query web services.", "termsOfService": "https://biothings.io/about", "title": "Gene Ontology Biological Process API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/geneset": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple GO geneset IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Geneset"}, "type": "array"}}}, "description": "A list of matching geneset objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of geneset IDs, return the matching geneset object", "tags": ["geneset"]}}, "/geneset/{genesetid}": {"get": {"parameters": [{"description": "Retrieve geneset objects based on GO geneset ID.  Supports JSONP and CORS as well.", "example": "GO:0042121", "in": "path", "name": "genesetid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Geneset"}}}, "description": "A matching geneset object"}, "404": {"description": "A response indicating an unknown geneset ID"}}, "summary": "Retrieve geneset objects based on ID", "tags": ["geneset"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "DISEASES metadata object"}}, "summary": "Get metadata about the data available from DISEASES", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "DISEASES metadata fields object"}}, "summary": "Get metadata about the data fields available object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "parents:\"GO:0071704\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching geneset hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch geneset queries and return matching geneset hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/has_subclass"}, {"$ref": "#/components/x-bte-kgs-operations/subclass_of"}, {"$ref": "#/components/x-bte-kgs-operations/positively_regulates"}, {"$ref": "#/components/x-bte-kgs-operations/negatively_regulates"}, {"$ref": "#/components/x-bte-kgs-operations/positively_regulated_by"}, {"$ref": "#/components/x-bte-kgs-operations/negatively_regulated_by"}, {"$ref": "#/components/x-bte-kgs-operations/has_part"}, {"$ref": "#/components/x-bte-kgs-operations/part_of"}, {"$ref": "#/components/x-bte-kgs-operations/regulates"}, {"$ref": "#/components/x-bte-kgs-operations/regulated_by"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/go_bp"}, {"description": "Production server", "url": "http://biothings.ncats.io/go_bp"}], "tags": [{"name": "ontology"}, {"name": "biological process"}, {"name": "geneset"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "5be0f321a829792e934545998b9c6afe", "_meta": {"date_created": "2021-01-12T23:30:46.860511+00:00", "last_updated": "2021-05-14T07:01:53.880820+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/text_mining/cooccurrence.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:52+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:14.631553"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"AnatomicalEntity-AnatomicalEntity": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-AnatomicalEntity-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-BiologicalProcess": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-BiologicalProcess-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Cell": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Cell-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-CellularComponent": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-CellularComponent-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-ChemicalSubstance": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-ChemicalSubstance-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Disease": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Disease-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Gene": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Gene-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-MolecularActivity": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-MolecularActivity-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-OrganismTaxon": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-OrganismTaxon-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-PhenotypicFeature": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-PhenotypicFeature-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Protein": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-Protein-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-SequenceFeature": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.UBERON:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "AnatomicalEntity-SequenceFeature-reverse": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.UBERON:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-AnatomicalEntity": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-AnatomicalEntity-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-BiologicalProcess": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-BiologicalProcess-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Cell": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Cell-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-CellularComponent": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-CellularComponent-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-ChemicalSubstance": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-ChemicalSubstance-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Disease": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Disease-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Gene": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Gene-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-MolecularActivity": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-MolecularActivity-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-OrganismTaxon": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-OrganismTaxon-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-PhenotypicFeature": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-PhenotypicFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Protein": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-Protein-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-SequenceFeature": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "BiologicalProcess-SequenceFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-AnatomicalEntity": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-AnatomicalEntity-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-BiologicalProcess": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-BiologicalProcess-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Cell": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Cell-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-CellularComponent": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-CellularComponent-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-ChemicalSubstance": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-ChemicalSubstance-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Disease": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Disease-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Gene": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Gene-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-MolecularActivity": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-MolecularActivity-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-OrganismTaxon": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-OrganismTaxon-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-PhenotypicFeature": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-PhenotypicFeature-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Protein": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-Protein-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-SequenceFeature": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.CL:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Cell-SequenceFeature-reverse": [{"inputs": [{"id": "CL", "semantic": "Cell"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.CL:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-AnatomicalEntity": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-AnatomicalEntity-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-BiologicalProcess": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-BiologicalProcess-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Cell": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Cell-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-CellularComponent": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-CellularComponent-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-ChemicalSubstance": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-ChemicalSubstance-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Disease": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Disease-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Gene": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Gene-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-MolecularActivity": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-MolecularActivity-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-OrganismTaxon": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-OrganismTaxon-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-PhenotypicFeature": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-PhenotypicFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Protein": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-Protein-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-SequenceFeature": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "CellularComponent-SequenceFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "CellularComponent"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-AnatomicalEntity": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-AnatomicalEntity-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-BiologicalProcess": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-BiologicalProcess-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Cell": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Cell-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-CellularComponent": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-CellularComponent-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-ChemicalSubstance": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-ChemicalSubstance-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Disease": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Disease-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Gene": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Gene-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-MolecularActivity": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-MolecularActivity-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-OrganismTaxon": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-OrganismTaxon-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-PhenotypicFeature": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-PhenotypicFeature-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Protein": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-Protein-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-SequenceFeature": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.CHEBI:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "ChemicalSubstance-SequenceFeature-reverse": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.CHEBI:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-AnatomicalEntity": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-AnatomicalEntity-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-BiologicalProcess": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-BiologicalProcess-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Cell": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Cell-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-CellularComponent": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-CellularComponent-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-ChemicalSubstance": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-ChemicalSubstance-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Disease": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Disease-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Gene": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Gene-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-MolecularActivity": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-MolecularActivity-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-OrganismTaxon": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-OrganismTaxon-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-PhenotypicFeature": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-PhenotypicFeature-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Protein": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-Protein-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-SequenceFeature": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.MONDO:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Disease-SequenceFeature-reverse": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.MONDO:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-AnatomicalEntity": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-AnatomicalEntity-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-BiologicalProcess": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-BiologicalProcess-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Cell": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Cell-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-CellularComponent": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-CellularComponent-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-ChemicalSubstance": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-ChemicalSubstance-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Disease": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Disease-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Gene": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Gene-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-MolecularActivity": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-MolecularActivity-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-OrganismTaxon": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-OrganismTaxon-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-PhenotypicFeature": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-PhenotypicFeature-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Protein": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-Protein-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-SequenceFeature": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.NCBIGene:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Gene-SequenceFeature-reverse": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.NCBIGene:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-AnatomicalEntity": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-AnatomicalEntity-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-BiologicalProcess": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-BiologicalProcess-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Cell": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Cell-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-CellularComponent": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-CellularComponent-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-ChemicalSubstance": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-ChemicalSubstance-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Disease": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Disease-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Gene": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Gene-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-MolecularActivity": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-MolecularActivity-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-OrganismTaxon": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-OrganismTaxon-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-PhenotypicFeature": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-PhenotypicFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Protein": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-Protein-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-SequenceFeature": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.GO:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "MolecularActivity-SequenceFeature-reverse": [{"inputs": [{"id": "GO", "semantic": "MolecularActivity"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.GO:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-AnatomicalEntity": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-AnatomicalEntity-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-BiologicalProcess": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-BiologicalProcess-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Cell": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Cell-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-CellularComponent": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-CellularComponent-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-ChemicalSubstance": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-ChemicalSubstance-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Disease": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Disease-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Gene": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Gene-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-MolecularActivity": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-MolecularActivity-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-OrganismTaxon": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-OrganismTaxon-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-PhenotypicFeature": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-PhenotypicFeature-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Protein": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-Protein-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-SequenceFeature": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.NCBITaxon:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "OrganismTaxon-SequenceFeature-reverse": [{"inputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.NCBITaxon:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-AnatomicalEntity": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-AnatomicalEntity-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-BiologicalProcess": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-BiologicalProcess-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Cell": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Cell-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-CellularComponent": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-CellularComponent-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-ChemicalSubstance": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-ChemicalSubstance-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Disease": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Disease-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Gene": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Gene-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-MolecularActivity": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-MolecularActivity-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-OrganismTaxon": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-OrganismTaxon-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-PhenotypicFeature": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-PhenotypicFeature-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Protein": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-Protein-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-SequenceFeature": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.HP:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "PhenotypicFeature-SequenceFeature-reverse": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.HP:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-AnatomicalEntity": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-AnatomicalEntity-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-BiologicalProcess": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-BiologicalProcess-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Cell": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Cell-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-CellularComponent": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-CellularComponent-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-ChemicalSubstance": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-ChemicalSubstance-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Disease": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Disease-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Gene": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Gene-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-MolecularActivity": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-MolecularActivity-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-OrganismTaxon": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-OrganismTaxon-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-PhenotypicFeature": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-PhenotypicFeature-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Protein": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-Protein-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-SequenceFeature": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.PR:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "Protein-SequenceFeature-reverse": [{"inputs": [{"id": "PR", "semantic": "Protein"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.PR:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-AnatomicalEntity": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-AnatomicalEntity-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:AnatomicalEntity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-BiologicalProcess": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-BiologicalProcess-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "BiologicalProcess"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:BiologicalProcess", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Cell": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Cell-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "CL", "semantic": "Cell"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:Cell", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Cell-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-CellularComponent": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-CellularComponent-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "CellularComponent"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:CellularComponent", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/CellularComponent-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-ChemicalSubstance": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-ChemicalSubstance-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Disease": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Disease-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:Disease", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Gene": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Gene-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:Gene", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Gene-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-MolecularActivity": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-MolecularActivity-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "GO", "semantic": "MolecularActivity"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:MolecularActivity", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/MolecularActivity-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-OrganismTaxon": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-OrganismTaxon-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "NCBITaxon", "semantic": "OrganismTaxon"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:OrganismTaxon", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/OrganismTaxon-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-PhenotypicFeature": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-PhenotypicFeature-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:PhenotypicFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Protein": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-Protein-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "PR", "semantic": "Protein"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein-reverse"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-SequenceFeature": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "object,association", "q": "subject.SO:\"{inputs[0]}\" AND object.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature"}, "source": "Text Mining KP", "supportBatch": false}], "SequenceFeature-SequenceFeature-reverse": [{"inputs": [{"id": "SO", "semantic": "SequenceFeature"}], "outputs": [{"id": "SO", "semantic": "SequenceFeature"}], "parameters": {"fields": "subject,association", "q": "object.SO:\"{inputs[0]}\" AND subject.type:SequenceFeature", "size": 1000}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/SequenceFeature-reverse"}, "source": "Text Mining KP", "supportBatch": false}]}, "x-bte-response-mapping": {"AnatomicalEntity": {"UBERON": "hits.object.UBERON", "ngd": "hits.association.ngd"}, "AnatomicalEntity-reverse": {"UBERON": "hits.subject.UBERON", "ngd": "hits.association.ngd"}, "BiologicalProcess": {"GO": "hits.object.GO", "ngd": "hits.association.ngd"}, "BiologicalProcess-reverse": {"GO": "hits.subject.GO", "ngd": "hits.association.ngd"}, "Cell": {"CL": "hits.object.CL", "ngd": "hits.association.ngd"}, "Cell-reverse": {"CL": "hits.subject.CL", "ngd": "hits.association.ngd"}, "CellularComponent": {"GO": "hits.object.GO", "ngd": "hits.association.ngd"}, "CellularComponent-reverse": {"GO": "hits.subject.GO", "ngd": "hits.association.ngd"}, "ChemicalSubstance": {"CHEBI": "hits.object.CHEBI", "ngd": "hits.association.ngd"}, "ChemicalSubstance-reverse": {"CHEBI": "hits.subject.CHEBI", "ngd": "hits.association.ngd"}, "Disease": {"MONDO": "hits.object.MONDO", "ngd": "hits.association.ngd"}, "Disease-reverse": {"MONDO": "hits.subject.MONDO", "ngd": "hits.association.ngd"}, "Gene": {"NCBIGene": "hits.object.NCBIGene", "ngd": "hits.association.ngd"}, "Gene-reverse": {"NCBIGene": "hits.subject.NCBIGene", "ngd": "hits.association.ngd"}, "MolecularActivity": {"GO": "hits.object.GO", "ngd": "hits.association.ngd"}, "MolecularActivity-reverse": {"GO": "hits.subject.GO", "ngd": "hits.association.ngd"}, "OrganismTaxon": {"NCBITaxon": "hits.object.NCBITaxon", "ngd": "hits.association.ngd"}, "OrganismTaxon-reverse": {"NCBITaxon": "hits.subject.NCBITaxon", "ngd": "hits.association.ngd"}, "PhenotypicFeature": {"HP": "hits.object.HP", "ngd": "hits.association.ngd"}, "PhenotypicFeature-reverse": {"HP": "hits.subject.HP", "ngd": "hits.association.ngd"}, "Protein": {"PR": "hits.object.PR", "ngd": "hits.association.ngd"}, "Protein-reverse": {"PR": "hits.subject.PR", "ngd": "hits.association.ngd"}, "SequenceFeature": {"SO": "hits.object.SO", "ngd": "hits.association.ngd"}, "SequenceFeature-reverse": {"SO": "hits.subject.SO", "ngd": "hits.association.ngd"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Text Mining Targeted Association query web services.", "termsOfService": "https://biothings.io/about", "title": "Text Mining CO-OCCURRENCE API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Text Mining Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "275bfadd2b4c60c3", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "object.id:CHEBI\\:9590", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/Cell-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/CellularComponent-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/MolecularActivity-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/Gene-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/Protein-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/SequenceFeature-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-OrganismTaxon-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-ChemicalSubstance-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Cell-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-BiologicalProcess-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-CellularComponent-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-MolecularActivity"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-MolecularActivity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-PhenotypicFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Disease-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Gene-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Protein"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-Protein-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-SequenceFeature"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-SequenceFeature-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-AnatomicalEntity-reverse"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-OrganismTaxon"}, {"$ref": "#/components/x-bte-kgs-operations/OrganismTaxon-OrganismTaxon-reverse"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/text_mining_co_occurrence_kp"}, {"description": "Production server", "url": "http://biothings.ncats.io/text_mining_co_occurrence_kp/"}], "tags": [{"name": "gene"}, {"name": "chemical"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "0c9f1154a1986f1774057af4c1caa5b2", "_meta": {"date_created": "2020-12-07T23:01:40.279745+00:00", "last_updated": "2021-05-14T07:02:03.571674+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_anatomy.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:03+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:15.220422"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"AnatomicalEntity-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affected_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-disrupted_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-disrupted_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-manifestation_of-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "manifestation_of"}, "path": "/query", "predicate": "manifestation_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-manifestation_of-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-manifested_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "manifested_by"}, "path": "/query", "predicate": "manifested_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-manifested_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-preceded_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "preceded_by"}, "path": "/query", "predicate": "preceded_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-preceded_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-preceded_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "preceded_by"}, "path": "/query", "predicate": "preceded_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-preceded_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-precedes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "precedes"}, "path": "/query", "predicate": "precedes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-precedes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-precedes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "precedes"}, "path": "/query", "predicate": "precedes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-precedes-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-predisposes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "predisposes"}, "path": "/query", "predicate": "predisposes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-predisposes-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "AnatomicalEntity-related_to-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/AnatomicalEntity-related_to-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"AnatomicalEntity-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "AnatomicalEntity-affected_by-CellularComponent": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "AnatomicalEntity-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "AnatomicalEntity-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "AnatomicalEntity-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "AnatomicalEntity-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "AnatomicalEntity-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "AnatomicalEntity-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "AnatomicalEntity-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "AnatomicalEntity-disrupted_by-BiologicalProcess": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "AnatomicalEntity-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "AnatomicalEntity-disrupted_by-Disease": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "AnatomicalEntity-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "AnatomicalEntity-manifestation_of-BiologicalProcess": {"pmid": "manifestation_of.pmid", "umls": "manifestation_of.umls"}, "AnatomicalEntity-manifested_by-Disease": {"pmid": "manifested_by.pmid", "umls": "manifested_by.umls"}, "AnatomicalEntity-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "AnatomicalEntity-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "AnatomicalEntity-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "AnatomicalEntity-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "AnatomicalEntity-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "AnatomicalEntity-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "AnatomicalEntity-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "AnatomicalEntity-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "AnatomicalEntity-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "AnatomicalEntity-preceded_by-BiologicalProcess": {"pmid": "preceded_by.pmid", "umls": "preceded_by.umls"}, "AnatomicalEntity-preceded_by-Disease": {"pmid": "preceded_by.pmid", "umls": "preceded_by.umls"}, "AnatomicalEntity-precedes-BiologicalProcess": {"pmid": "precedes.pmid", "umls": "precedes.umls"}, "AnatomicalEntity-precedes-Disease": {"pmid": "precedes.pmid", "umls": "precedes.umls"}, "AnatomicalEntity-predisposes-Disease": {"pmid": "predisposes.pmid", "umls": "predisposes.umls"}, "AnatomicalEntity-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "AnatomicalEntity-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-CellularComponent": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "AnatomicalEntity-related_to-PhenotypicFeature": {"pmid": "related_to.pmid", "umls": "related_to.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Anatomy API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/anatomy": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/anatomy/{anatomyid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "anatomyid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affected_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-manifestation_of-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-manifested_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-preceded_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-preceded_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-precedes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-precedes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-predisposes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/AnatomicalEntity-related_to-CellularComponent"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmed_anatomy"}], "tags": [{"name": "anatomicalentity"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "542ba165e1b4227854cf7c0a8addcc79", "_meta": {"date_created": "2020-12-07T23:03:47.953540+00:00", "last_updated": "2021-05-14T07:02:25.928813+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/opentarget/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:25+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:25.783884"}, "components": {"x-bte-kgs-operations": {"gene_related_to_chemical": [{"inputs": [{"id": "ENSEMBL", "semantic": "Gene"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"datasource": "chembl", "fields": "drug", "size": 100, "target": "{inputs[0]}"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene_related_to_chemical"}, "source": "CHEMBL", "supportBatch": false}]}, "x-bte-response-mapping": {"gene_related_to_chemical": {"CHEMBL.COMPOUND": "data.drug.id", "moleculeType": "data.drug.molecule_type", "name": "data.drug.molecule_name"}}}, "info": {"contact": {"email": "help@opentarget.org", "name": "opentarget help desk", "x-role": "responsible developer"}, "description": "The Opentarget API", "termsOfService": "http://www.opentarget.org", "title": "OpenTarget API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/platform/public/evidence/filter": {"get": {"parameters": [{"description": "ensembl gene id", "example": "ENSG00000088832", "in": "query", "name": "target", "required": true, "schema": {"type": "string"}}, {"description": "size of the output", "example": 100, "in": "query", "name": "size", "schema": {"type": "integer"}}, {"description": "the output field", "example": "drug", "in": "query", "name": "fields", "schema": {"type": "string"}}, {"description": "the data source", "example": "chembl", "in": "query", "name": "datasource", "schema": {"type": "string"}}], "responses": {"200": {"description": "A biosample object"}}, "summary": "retrieve evidence", "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene_related_to_chemical"}]}}}, "servers": [{"description": "Production server", "url": "https://platform-api.opentargets.io/v3"}], "tags": [{"name": "translator"}, {"name": "opentarget"}]}, {"_id": "3f3c925151f42aac9a5aca7a7eabe814", "_meta": {"date_created": "2021-02-03T00:04:18.945970+00:00", "last_updated": "2021-05-06T07:04:05.788604+00:00", "url": "https://automat.renci.org/mychem/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:02:02+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:16.805920"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph integrating DrugBank, DrugCentral, and Aeolus data as provided by [mychem.info](mychem.info).", "termsOfService": "http://http://robokop.renci.org:7055/tos?service_long=Automat Mychem&provider_long=RENCI", "title": "Automat MyChem", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/mychem"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "1f47552dabd67351d4c625adb0a10d00", "_meta": {"date_created": "2020-12-07T23:04:37.029674+00:00", "last_updated": "2021-05-14T07:01:54.840419+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/EBIgene2phenotype/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:54+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:16.922238"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "Gene": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Gene"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Gene"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"gene_related_to_phenotype": [{"inputSeparator": ",", "inputs": [{"id": "HGNC", "semantic": "Gene"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "gene2phenotype"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene_related_to_phenotype"}, "source": "EBI", "supportBatch": true}], "phenotype_related_to_gene": [{"inputSeparator": ",", "inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HGNC", "semantic": "Gene"}], "parameters": {"fields": "_id", "size": "350"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "gene2phenotype.phenotypes"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype_related_to_gene"}, "source": "EBI", "supportBatch": true}]}, "x-bte-response-mapping": {"gene_related_to_phenotype": {"HP": "gene2phenotype.phenotypes", "probability": "gene2phenotype.DDD_category", "pubmed": "gene2phenotype.pmids"}, "phenotype_related_to_gene": {"HGNC": "_id"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the EBIgene2phenotype query web services.", "termsOfService": "https://biothings.io/about", "title": "EBIgene2phenotype API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/gene": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple HGNC Gene IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Gene"}, "type": "array"}}}, "description": "A list of matching gene objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of chemical IDs, return the matching gene object", "tags": ["gene"]}}, "/gene/{geneid}": {"get": {"parameters": [{"description": "Retrieve gene objects based on HGNC Gene ID  Supports JSONP and CORS as well.", "example": 851, "in": "path", "name": "geneid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Gene"}}}, "description": "A matching gene object"}, "404": {"description": "A response indicating an unknown gene ID"}}, "summary": "Retrieve gene objects based on ID", "tags": ["gene"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "EBIgene2phenotype metadata object"}}, "summary": "Get metadata about the data available from EBIgene2phenotype", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "EBIgene2phenotype metadata fields object"}}, "summary": "Get metadata about the data fields available from a EBIgene2phenotype gene object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "gene2phenotype.mutation_consequence:\"loss of function\"", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching gene hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch gene queries and return matching gene hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene_related_to_phenotype"}, {"$ref": "#/components/x-bte-kgs-operations/phenotype_related_to_gene"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/ebigene2phenotype"}, {"description": "Production server", "url": "http://biothings.ncats.io/ebigene2phenotype"}], "tags": [{"name": "gene"}, {"name": "phenotype"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "e3edd325c76f2992a111b43a907a4870", "_meta": {"date_created": "2021-01-27T00:01:56.625919+00:00", "last_updated": "2021-05-14T07:01:55.465212+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/dgidb/openapi.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:55+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:17.046722"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"chemical-gene": [{"inputSeparator": ",", "inputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "subject.NCBIGene,association.provided_by,association.pubmed", "size": 1000}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "object.CHEMBL_COMPOUND"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-gene"}, "source": "DGIdb", "supportBatch": true}], "gene-chemical": [{"inputSeparator": ",", "inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object.CHEMBL_COMPOUND,association.provided_by,association.pubmed", "size": 1000}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "subject.NCBIGene"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "source": "DGIdb", "supportBatch": true}]}, "x-bte-response-mapping": {"chemical-gene": {"NCBIGene": "subject.NCBIGene", "pubmed": "association.pubmed", "source": "association.provided_by"}, "gene-chemical": {"CHEMBL.COMPOUND": "object.CHEMBL_COMPOUND", "pubmed": "association.pubmed", "source": "association.provided_by"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the BioThings DGIdb query web services.", "termsOfService": "https://biothings.io/about", "title": "BioThings DGIdb API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "275bfadd2b4c60c3", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "object.id:CHEMBL.COMPOUND\\:CHEMBL26", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/chemical-gene"}, {"$ref": "#/components/x-bte-kgs-operations/gene-chemical"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/dgidb"}, {"description": "Production server", "url": "http://biothings.ncats.io/dgidb"}], "tags": [{"name": "gene"}, {"name": "chemical"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "4f7b6f661ac61ed64190d5b26d87aff5", "_meta": {"date_created": "2020-03-12T16:25:03.083494+00:00", "last_updated": "2021-02-17T07:42:23.333398+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/robokop_extend/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:33+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:12.847106"}, "components": {"x-bte-kgs-operations": {"associatedWith": {"inputs": [{"id": "hgnc", "semantic": "Gene"}], "outputs": [{"id": "chembl", "semantic": "ChemicalSubstance"}], "parameters": {"chemical_id": "HGNC:{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}, "supportBatch": false}, "contraindication": {"inputs": [{"id": "chembl", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "mondo", "semantic": "DiseaseOrPhenotypicFeature"}], "parameters": {"chemical_id": "CHEMBL:{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-disease"}, "supportBatch": false}, "partOf": {"inputs": [{"id": "hgnc", "semantic": "Gene"}], "outputs": [{"id": "panther", "semantic": "GeneFamily"}], "parameters": {"chemical_id": "HGNC:{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-genefamily"}, "supportBatch": false}, "treats": {"inputs": [{"id": "chembl", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "mondo", "semantic": "DiseaseOrPhenotypicFeature"}], "parameters": {"chemical_id": "CHEMBL:{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-disease"}, "supportBatch": false}}, "x-bte-response-mapping": {"chemical-disease": {"@context": "http://schema.org", "@type": "ChemicalSubstance", "bts:chembl": "treats.source_id", "bts:contraindication": {"$input": "bts:chembl", "$source": "robokop", "@type": "DiseaseOrPhenotypicFeature", "bts:mondo": "contraindicated_for.mondo", "bts:pubmed": "contraindicated_for.publications", "bts:source": "contraindicated_for.source_database"}, "bts:treats": {"$input": "bts:chembl", "$source": "robokop", "@type": "DiseaseOrPhenotypicFeature", "bts:mondo": "treats.mondo", "bts:pubmed": "treats.publications", "bts:source": "treats.source_database"}}, "gene-chemical": {"@context": "http://schema.org", "@type": "Gene", "bts:associatedWith": {"$input": "bts:hgnc", "$source": "robokop", "@type": "ChemicalSubstance", "bts:chembl": "literature_co-occurrence.chembl", "bts:source": "literature_co-occurrence.source_database"}, "bts:hgnc": "literature_co-occurrence.source_id"}, "gene-genefamily": {"@context": "http://schema.org", "@type": "Gene", "bts:hgnc": "part_of.source_id", "bts:partOf": {"$input": "bts:hgnc", "$source": "panther", "@type": "GeneFamily", "bts:panther": "part_of.panther", "bts:pubmed": "part_of.publications", "bts:source": "part_of.source_database"}}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "url": "robokop.renci.org"}, "description": "An API for answering biomedical questions", "termsOfService": "https://robokop.renci.org/termsofservice/", "title": "ROBOKOP", "version": "1.0"}, "openapi": "3.0.0", "paths": {"/simple/expand/chemical_substance/{chemical_id}/disease_or_phenotypic_feature/": {"get": {"parameters": [{"description": "chembl id", "example": "CHEMBL:CHEMBL744", "in": "path", "name": "chemical_id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A association object", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/chemical-disease"}}}, "summary": "retrieve diseases related to chemical", "x-bte-kgs-operations": {"contraindication": {"$ref": "#/components/x-bte-kgs-operations/contraindication"}, "treats": {"$ref": "#/components/x-bte-kgs-operations/treats"}}}}, "/simple/expand/gene/{gene_id}/gene_family/": {"get": {"parameters": [{"description": "hgnc id", "example": "HGNC:1771", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A association object", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-genefamily"}}}, "summary": "retrieve gene family related to gene", "x-bte-kgs-operations": {"partOf": {"$ref": "#/components/x-bte-kgs-operations/partOf"}}}}, "/simple/expand/gene/{gene_id}/chemical_substance/": {"get": {"parameters": [{"description": "hgnc id", "example": "HGNC:1771", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A association object", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/gene-chemical"}}}, "summary": "retrieve chemicals related to gene", "x-bte-kgs-operations": {"associatedWith": {"$ref": "#/components/x-bte-kgs-operations/associatedWith"}}}}}, "servers": [{"description": "Production server", "url": "https://robokop.renci.org/api"}], "tags": [{"name": "translator"}, {"name": "reasoner"}]}, {"_id": "f8f7142da2323703dfa32b8cc4cdff5f", "_meta": {"date_created": "2021-01-26T00:02:39.708234+00:00", "last_updated": "2021-05-06T07:03:03.122523+00:00", "url": "https://automat.renci.org/viral-proteome/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:01:34+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:13.282875"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph consisting of viral proteins from UniProt, connected by similarity edges from UniRef.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Viral Proteome&provider_long=RENCI", "title": "Automat Viral Proteome", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/viral-proteome"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "1c056ffc7ed0dd1229e71c4752239465", "_meta": {"date_created": "2020-12-07T23:02:21.623909+00:00", "last_updated": "2021-05-14T07:01:55.703682+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/ols/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:01:55+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:18.384101"}, "components": {"x-bte-kgs-operations": {"disease_has_subclass_disease": [{"inputs": [{"id": "DOID", "semantic": "Disease"}], "outputs": [{"id": "DOID", "semantic": "Disease"}], "parameters": {"id": "{inputs[0]}"}, "predicate": "superclass_of", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease_has_subclass_disease"}, "source": "DO", "supportBatch": false}]}, "x-bte-response-mapping": {"disease_has_subclass_disease": {"DOID": "_embedded.terms.obo_id", "description": "_embedded.terms.description", "name": "_embedded.terms.label"}}}, "info": {"contact": {"email": "help@pharmgkb.org", "name": "pharmgkb help desk", "x-role": "responsible developer"}, "description": "The OLS REST API provides access to key biological data from OLS. The services provide a unified interface to query information about ontology terms from GO (the Gene Ontology) and ECO (the Evidence & Conclusion Ontology), Gene Ontology annotations from the EBI's GOA database, and gene products (proteins from UniProt, RNA from RNAcentral and complexes from ComplexPortal). ", "termsOfService": "https://www.ebi.ac.uk/OLS/services", "title": "Ontology Lookup Service API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/ontologies/doid/children": {"get": {"parameters": [{"description": "Put Disease Ontology ID here, e.g. DOID:0050686", "example": "DOID:0050686", "in": "query", "name": "id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A DISEASE Ontology annotation object"}}, "summary": "retrieve the children of specified ontology terms", "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease_has_subclass_disease"}]}}}, "servers": [{"description": "Production server", "url": "https://www.ebi.ac.uk/ols/api"}], "tags": [{"name": "ontology"}, {"name": "translator"}]}, {"_id": "09c8782d9f4027712e65b95424adba79", "_meta": {"date_created": "2020-12-08T00:04:53.736889+00:00", "last_updated": "2021-05-14T07:02:54.948152+00:00", "slug": "myvariant", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/myvariant.info/openapi_full.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:54+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:27.005743"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned variant object. If \"true\" or \"1\", all fields will be collapsed into a single level deep structure (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated fields to limit the fields returned from the matching variant hits. The supported field names can be found from any variant object (e.g. http://myvariant.info/v1/variant/rs12190874). Note that it supports dot notation as well, e.g., you can pass \"dbsnp.rsid\". If \"fields=all\", all available fields will be returned. Default: \"all\".", "in": "query", "name": "fields", "schema": {"type": "string"}}, "from": {"description": "the number of matching variant hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "size": {"description": "the maximum number of matching variant hits to return (with a cap of 1000 at the moment). Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Variant"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Variant"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "Variant": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"conditionAssociatedWithVariant": [{"inputSeparator": ",", "inputs": [{"id": "OMIM", "semantic": "Disease"}], "outputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "parameters": {"fields": "dbsnp.rsid", "size": "250"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "clinvar.rcv.conditions.identifiers.omim"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/dbsnp"}, "source": "clinvar", "supportBatch": true}], "variantAffectDrugResponse": [{"inputSeparator": ",", "inputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "outputs": [{"id": "name", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "civic.evidence_items", "size": "1000"}, "predicate": "affects_response_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/variant_affect_drug_response"}, "source": "civic", "supportBatch": true}], "variantAssociatedWithCondition": [{"inputSeparator": ",", "inputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "outputs": [{"id": "OMIM", "semantic": "Disease"}], "parameters": {"fields": "clinvar.rcv"}, "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/variant-disease-omim"}, "source": "clinvar", "supportBatch": true}], "variantAssociatedWithGene": [{"inputSeparator": ",", "inputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"fields": "dbsnp.gene.geneid"}, "predicate": "located_in", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "dbsnp.rsid"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/variant-gene"}, "source": "dbsnp", "supportBatch": true}]}, "x-bte-response-mapping": {"dbsnp": {"DBSNP": "dbsnp.rsid"}, "variant-disease-omim": {"OMIM": "clinvar.rcv.conditions.identifiers.omim", "clinicalsignificance": "clinvar.rcv.clinical_significance", "name": "clinvar.rcv.conditions.name"}, "variant-gene": {"NCBIGene": "dbsnp.gene.geneid"}, "variant_affect_drug_response": {"clinical_significance": "civic.evidence_items.clinical_significance", "evidence_level": "civic.evidence_items.evidence_level", "evidence_type": "civic.evidence_items.evidence_type", "name": "civic.evidence_items.drugs.name", "pubmed": "civic.evidence_items.source.pubmed"}}}, "info": {"contact": {"email": "help@myvariant.info", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the MyVariant.info Variant Query web services. Learn more about [MyVariant.info](http://myvariant.info/)", "termsOfService": "http://myvariant.info/terms/", "title": "MyVariant.info API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MyVariant.info metadata object"}}, "summary": "Get metadata about the data available from MyVariant.info.", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"description": "Pass a search term to filter the available fields, e.g. \"search=clinvar\".", "in": "query", "name": "search", "schema": {"type": "string"}}, {"description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".", "in": "query", "name": "prefix", "schema": {"type": "string"}}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MyVariant.info metadata fields object"}}, "summary": "Get metadata about the data fields available from MyVariant.info.", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string. Examples \"rs752396467\", \"possibly_damaging\", \"CDK7\". The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).", "example": "CDK7", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/fields", "1": "query", "name": "fields"}, {"$ref": "#/components/parameters/size", "in": "query", "name": "size"}, {"$ref": "#/components/parameters/from", "in": "query", "name": "from"}, {"$ref": "#/components/parameters/sort", "in": "query", "name": "sort"}, {"description": "a single field or comma-separated fields to return facets, for example, \"facets=clinvar.gene.id\", \"facets=clinvar.gene.id,dbnsfp.uniprot.acc\".", "in": "query", "name": "facets", "schema": {"type": "string"}}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response object with \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make variant query and return matching variant list. Support JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=rs58991260,rs2500\" or \"q=rs58991260+rs2500\"", "type": "string"}, "scopes": {"description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=dbsnp.rsid\". The available \"fields\" that can be passed to \"scopes\" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields). Default: \"scopes=_id\" (HGVS id).", "type": "string"}}, "required": ["q"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make variant batch query and return matching variant hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithGene"}, {"$ref": "#/components/x-bte-kgs-operations/variantAssociatedWithCondition"}, {"$ref": "#/components/x-bte-kgs-operations/conditionAssociatedWithVariant"}, {"$ref": "#/components/x-bte-kgs-operations/variantAffectDrugResponse"}]}}, "/variant": {"post": {"parameters": [{"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple variant ids seperated by comma, e.g., \"ids=chr6:g.152708291G>A,chr1:g.35367G>A\" or \"ids=rs5882,rs12190874\". Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Variant"}, "type": "array"}}}, "description": "a list of matching variant objects"}}, "summary": "For a list of variant ids, return the matching variant objects", "tags": ["variant"]}}, "/variant/{variantid}": {"get": {"parameters": [{"description": "HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874", "example": "chr6:g.152708291G>A", "in": "path", "name": "variantid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/fields", "in": "query", "name": "fields"}, {"$ref": "#/components/parameters/dotfield", "in": "query", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}, {"$ref": "#/components/parameters/email", "in": "query", "name": "email"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Variant"}}}, "description": "A matching variant object"}, "404": {"description": "A response indicating an unknown variant id"}}, "summary": "Retrieve variant annotation object based on HGVS or rsid, support JSONP and CORS as well.", "tags": ["variant"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://myvariant.info/v1"}, {"description": "Production server", "url": "http://myvariant.info/v1"}], "tags": [{"name": "variant"}, {"name": "query"}, {"name": "metadata"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "523a1ce8b6d4fc9a1d0f9f22321f4c4c", "_meta": {"date_created": "2021-02-03T00:00:48.628394+00:00", "last_updated": "2021-05-06T07:03:11.902642+00:00", "url": "https://automat.renci.org/gtopdb/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:02:55+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:27.498092"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [IUPHAR Guide to Pharmacology (https://www.guidetopharmacology.org/)](https://www.guidetopharmacology.org/)", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Gtopdb&provider_long=RENCI", "title": "Automat Gtopdb", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/gtopdb"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "d9d71b3d55e767c37346d02b7d6bd0b3", "_meta": {"date_created": "2021-01-26T00:01:27.579000+00:00", "last_updated": "2021-05-06T07:01:31.208078+00:00", "url": "https://automat.renci.org/intact/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:02:53+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:31.905325"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Molecular (Gene-Gene) interactions from [EBI IntAct (https://www.ebi.ac.uk/intact/)](https://www.ebi.ac.uk/intact/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat IntAct&provider_long=RENCI", "title": "Automat IntAct", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/intact"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "786e41a17dbb75399f22e09858f828b7", "_meta": {"date_created": "2021-01-26T00:02:48.347118+00:00", "last_updated": "2021-05-06T07:04:03.664938+00:00", "url": "https://automat.renci.org/chembio/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:32+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:32.422494"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [chem2bio2rdf (http://cheminfov.informatics.indiana.edu:8080/c2b2r/)](http://cheminfov.informatics.indiana.edu:8080/c2b2r/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Chembio&provider_long=RENCI", "title": "Automat Chembio", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/chembio"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "a85f096bd4120ba065b2f25ffb68dcb0", "_meta": {"date_created": "2019-10-05T04:28:54.585739+00:00", "last_updated": "2021-02-17T07:42:19.595885+00:00", "slug": "robokop", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/robokop/openapi.yml", "username": "patrickkwang"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:02:55+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:28.836771"}, "components": {"schemas": {"BiolinkEntity": {"description": "A subclass of named_thing (snake_case)", "example": "disease", "externalDocs": {"description": "Biolink model entities", "url": "https://biolink.github.io/biolink-model/docs/NamedThing.html"}, "type": "string"}, "BiolinkRelation": {"description": "A relation, i.e. child of related_to (snake_case)", "example": "affects", "externalDocs": {"description": "Biolink model relations", "url": "https://biolink.github.io/biolink-model/docs/related_to.html"}, "type": "string"}, "Credentials": {"description": "Credentials needed for programmatic access to the remote knowledge graph", "properties": {"password": {"description": "Password needed for programmatic access to the remote knowledge graph", "type": "string"}, "username": {"description": "Username needed for programmatic access to the remote knowledge graph", "type": "string"}}, "required": ["username", "password"], "type": "object"}, "EdgeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "KEdge": {"description": "An edge in the thought subgraph linking two nodes", "properties": {"id": {"description": "Local identifier for this node which is unique within this KnowledgeGraph, and perhaps within the source reasoner's knowledge graph", "example": "553903", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "example": "https://omim.org/entry/603903", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "example": "https://www.uniprot.org/uniprot/P00738", "type": "string"}, "type": {"$ref": "#/components/schemas/BiolinkRelation"}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "KNode": {"description": "A node in the thought subgraph", "properties": {"id": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "type": "string"}, "name": {"description": "Formal name of the entity", "example": "Haptoglobin", "type": "string"}, "type": {"description": "Entity type of this node (e.g., protein, disease, etc.)", "example": ["protein"], "items": {"type": "string"}, "type": "array"}}, "required": ["id"], "type": "object"}, "KnowledgeGraph": {"description": "A thought graph associated with this result. This will commonly be a linear path subgraph from one concept to another, but related items aside of the path may be included.", "properties": {"edges": {"description": "List of edges in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the KnowledgeGraph", "items": {"$ref": "#/components/schemas/KNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "Message": {"properties": {"knowledge_graph": {"description": "KnowledgeGraph object that contains all the nodes and edges referenced in any of the possible answers to the query OR connection information for a remote knowledge graph", "oneOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}, {"$ref": "#/components/schemas/RemoteKnowledgeGraph"}], "type": "object"}, "query_graph": {"$ref": "#/components/schemas/QueryGraph", "description": "QueryGraph object that contains a serialization of a query in the form of a graph", "type": "object"}, "results": {"description": "List of all returned potential answers for the query posed", "items": {"$ref": "#/components/schemas/Result"}, "type": "array"}}, "type": "object"}, "NodeBinding": {"properties": {"kg_id": {"oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "qg_id": {"type": "string"}}, "required": ["qg_id", "kg_id"], "type": "object"}, "QEdge": {"description": "An edge in the QueryGraph", "properties": {"id": {"description": "QueryGraph internal identifier for this QEdge. Recommended form: e00, e01, e02, etc.", "example": "e00", "type": "string"}, "source_id": {"description": "Corresponds to the @id of source node of this edge", "type": "string"}, "target_id": {"description": "Corresponds to the @id of target node of this edge", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkRelation"}, {"items": {"$ref": "#/components/schemas/BiolinkRelation"}, "type": "array"}]}}, "required": ["id", "source_id", "target_id"], "type": "object"}, "QNode": {"description": "A node in the QueryGraph", "properties": {"curie": {"description": "CURIE identifier for this node", "example": "OMIM:603903", "oneOf": [{"type": "string"}, {"items": {"type": "string"}, "type": "array"}]}, "id": {"description": "QueryGraph internal identifier for this QNode. Recommended form: n00, n01, n02, etc.", "example": "n00", "type": "string"}, "type": {"oneOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"description": "Entity types of this node (e.g., protein, disease, etc.)", "example": ["disease", "genetic_condition"], "items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}]}}, "required": ["id"], "type": "object"}, "Query": {"properties": {"message": {"$ref": "#/components/schemas/Message"}}, "required": ["message"], "type": "object", "x-body-name": "request_body"}, "QueryGraph": {"description": "A graph intended to be the thought path to be followed by a reasoner to answer the question. This graph is a representation of a question.", "properties": {"edges": {"description": "List of edges in the QueryGraph", "items": {"$ref": "#/components/schemas/QEdge"}, "type": "array"}, "nodes": {"description": "List of nodes in the QueryGraph", "items": {"$ref": "#/components/schemas/QNode"}, "type": "array"}}, "required": ["nodes", "edges"], "type": "object"}, "RemoteKnowledgeGraph": {"description": "A thought graph associated with this result that is not repeated here, but stored elsewhere in a way that can be remotely accessed by the reader of this Message", "properties": {"credentials": {"$ref": "#/components/schemas/Credentials", "description": "Credentials needed for programmatic access to the remote knowledge graph", "type": "object"}, "url": {"description": "URL that provides programmatic access to the remote knowledge graph", "example": "http://robokop.renci.org/api/kg", "type": "string"}}, "required": ["url", "credentials"], "type": "object"}, "Result": {"description": "One of potentially several results or answers for a query", "properties": {"edge_bindings": {"description": "List of QEdge-KEdge bindings.", "items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "node_bindings": {"description": "List of QNode-KNode bindings.", "items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "score": {"description": "Any type of score associated with this result", "example": 163.233, "format": "float", "type": "number"}}, "required": ["node_bindings", "edge_bindings"], "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "url": "robokop.renci.org"}, "description": "An API for answering biomedical questions", "termsOfService": "https://robokop.renci.org/termsofservice/", "title": "ROBOKOP Ranker", "version": "0.0.1", "x-reasoner_standard_version": "0.9.1"}, "openapi": "3.0.1", "paths": {"/query/": {"post": {"parameters": [{"description": "Maximum number of results to return. Provide -1 to indicate no maximum.", "in": "query", "name": "max_results", "schema": {"default": -1, "type": "integer"}}, {"description": "Requested output format. DENSE, MESSAGE, CSV or ANSWERS", "in": "query", "name": "output_format", "schema": {"default": "MESSAGE", "type": "string"}}, {"description": "Max connectivity of nodes considered in the answers, Use -1 for no restriction", "in": "query", "name": "max_connectivity", "schema": {"default": -1, "type": "integer"}}], "requestBody": {"content": {"application/json": {"example": {"message": {"query_graph": {"edges": [{"id": "e00", "source_id": "n00", "target_id": "n01"}, {"id": "e01", "source_id": "n01", "target_id": "n02"}], "nodes": [{"curie": "MONDO:0005737", "id": "n00", "type": "disease"}, {"id": "n01", "set": true, "type": "gene"}, {"id": "n02", "type": "genetic_condition"}]}}}, "schema": {"$ref": "#/components/schemas/Query"}}}, "description": "A message with question graph.", "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "A message with knowledge graph and answers."}}, "summary": "Get answers to a question", "tags": ["0.9.2"]}}}, "servers": [{"url": "https://robokop.renci.org/ranker/api/"}], "tags": [{"name": "0.9.2"}, {"name": "translator"}, {"name": "reasoner"}]}, {"_id": "5a7d625d50fc518d33db48cf39ce9b30", "_meta": {"date_created": "2020-12-07T23:04:41.049935+00:00", "last_updated": "2021-05-14T07:02:52.375353+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_biological_process.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:51+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:29.147745"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"BiologicalProcess-affected_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affected_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affected_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Cell"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-affects-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-affects-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-caused_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-caused_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupted_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupted_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Cell"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-disrupts-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-disrupts-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-physically_interacts_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-physically_interacts_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-related_to-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-related_to-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "BiologicalProcess-treats-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treats"}, "path": "/query", "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/BiologicalProcess-treats-Disease"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"BiologicalProcess-affected_by-AnatomicalEntity": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-CellularComponent": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affected_by-PhenotypicFeature": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "BiologicalProcess-affects-AnatomicalEntity": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-Cell": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-CellularComponent": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-ChemicalSubstance": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-Gene": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-affects-PhenotypicFeature": {"pmid": "affects.pmid", "umls": "affects.umls"}, "BiologicalProcess-caused_by-AnatomicalEntity": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-BiologicalProcess": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-Cell": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-CellularComponent": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-ChemicalSubstance": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-Disease": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-Gene": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-caused_by-PhenotypicFeature": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "BiologicalProcess-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "BiologicalProcess-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "BiologicalProcess-disrupted_by-BiologicalProcess": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-Cell": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-CellularComponent": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-Disease": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupted_by-PhenotypicFeature": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "BiologicalProcess-disrupts-AnatomicalEntity": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-disrupts-BiologicalProcess": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-disrupts-Cell": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-disrupts-CellularComponent": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-disrupts-Disease": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-disrupts-Gene": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "BiologicalProcess-negatively_regulated_by-BiologicalProcess": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "BiologicalProcess-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "BiologicalProcess-negatively_regulated_by-Disease": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "BiologicalProcess-negatively_regulated_by-Gene": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "BiologicalProcess-negatively_regulated_by-PhenotypicFeature": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "BiologicalProcess-negatively_regulates-BiologicalProcess": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "BiologicalProcess-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "BiologicalProcess-negatively_regulates-Disease": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "BiologicalProcess-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "BiologicalProcess-physically_interacts_with-BiologicalProcess": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "BiologicalProcess-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "BiologicalProcess-physically_interacts_with-Disease": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "BiologicalProcess-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "BiologicalProcess-positively_regulated_by-BiologicalProcess": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "BiologicalProcess-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "BiologicalProcess-positively_regulated_by-Disease": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "BiologicalProcess-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "BiologicalProcess-positively_regulates-BiologicalProcess": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "BiologicalProcess-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "BiologicalProcess-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "BiologicalProcess-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "BiologicalProcess-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-CellularComponent": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-related_to-PhenotypicFeature": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "BiologicalProcess-treats-Disease": {"pmid": "treats.pmid", "umls": "treats.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [mydisease.info](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Biological Process API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/geneset": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/geneset/{genesetid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "genesetid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affected_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-affects-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-caused_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupted_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-disrupts-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-related_to-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/BiologicalProcess-treats-Disease"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmedbp"}], "tags": [{"name": "chemical"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "8f08d1446e0bb9c2b323713ce83e2bd3", "_meta": {"date_created": "2021-02-02T00:00:20.885951+00:00", "last_updated": "2021-05-14T07:02:52.804600+00:00", "slug": "mychem", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:02:52+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:29.449876"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Chem": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Chem"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Chem"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"contraindicatedBy": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "chembl.molecule_chembl_id", "size": "1000"}, "predicate": "is_contraindication_for", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugcentral.drug_use.contraindication.umls_cui"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chembl"}, "source": "drugcentral", "supportBatch": true}], "contraindication": [{"inputSeparator": ",", "inputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "drugcentral.drug_use.contraindication"}, "predicate": "contraindicated_for", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "chembl.molecule_chembl_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/contraindication"}, "source": "drugcentral", "supportBatch": true}], "metabolize": [{"inputSeparator": ",", "inputs": [{"id": "SYMBOL", "semantic": "Gene"}], "outputs": [{"id": "DRUGBANK", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "drugbank.id", "size": "1000"}, "predicate": "affects_metabolic_processing_of", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugbank.enzymes.gene_name"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/drugbank"}, "source": "drugbank", "supportBatch": true}], "metabolizedBy": [{"inputSeparator": ",", "inputs": [{"id": "DRUGBANK", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"fields": "drugbank.enzymes"}, "predicate": "metabolic_processing_affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugbank.id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/metabolizedBy"}, "source": "drugbank", "supportBatch": true}], "target": [{"inputSeparator": ",", "inputs": [{"id": "DRUGBANK", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"fields": "drugbank.targets"}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugbank.id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/target-drugbank"}, "source": "drugbank", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SYMBOL", "semantic": "Gene"}], "parameters": {"fields": "drugcentral.bioactivity"}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "chembl.molecule_chembl_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/target-drugcentral"}, "source": "drugcentral", "supportBatch": true}], "targetedBy": [{"inputSeparator": ",", "inputs": [{"id": "SYMBOL", "semantic": "Gene"}], "outputs": [{"id": "DRUGBANK", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "drugbank.id", "size": "1000"}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugbank.targets.gene_name"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/drugbank"}, "source": "drugbank", "supportBatch": true}, {"inputSeparator": ",", "inputs": [{"id": "SYMBOL", "semantic": "Gene"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "chembl.molecule_chembl_id", "size": "1000"}, "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugcentral.bioactivity.uniprot.gene_symbol"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chembl"}, "source": "drugcentral", "supportBatch": true}], "treatedBy": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "chembl.molecule_chembl_id", "size": "1000"}, "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "drugcentral.drug_use.indication.umls_cui"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chembl"}, "source": "drugcentral", "supportBatch": true}], "treated_by2": [{"inputSeparator": ",", "inputs": [{"id": "MESH", "semantic": "Disease"}], "outputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "chembl.molecule_chembl_id", "size": "1000"}, "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "chembl.drug_indications.mesh_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chembl"}, "source": "chembl", "supportBatch": true}], "treats": [{"inputSeparator": ",", "inputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "drugcentral.drug_use.indication"}, "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "chembl.molecule_chembl_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/treats"}, "source": "drugcentral", "supportBatch": true}], "treats2": [{"inputSeparator": ",", "inputs": [{"id": "CHEMBL.COMPOUND", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MESH", "semantic": "Disease"}], "parameters": {"fields": "chembl.drug_indications", "size": "1000"}, "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "chembl.molecule_chembl_id"}, "header": "application/x-www-form-urlencoded"}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/chembl-treats"}, "source": "chembl", "supportBatch": true}]}, "x-bte-response-mapping": {"chembl": {"CHEMBL.COMPOUND": "chembl.molecule_chembl_id"}, "chembl-treats": {"MESH": "chembl.drug_indications.mesh_id", "first_approval": "chembl.drug_indications.first_approval", "max_phase": "chembl.drug_indications.max_phase_for_ind"}, "contraindication": {"SNOMED": "drugcentral.drug_use.contraindication.snomed_concept_id", "UMLS": "drugcentral.drug_use.contraindication.umls_cui", "name": "drugcentral.drug_use.contraindication.concept_name"}, "drugbank": {"DRUGBANK": "drugbank.id"}, "metabolizedBy": {"SYMBOL": "drugbank.enzymes.gene_name", "action": "drugbank.enzymes.actions", "function": "drugbank.enzymes.general_function", "name": "drugbank.enzymes.name", "pubmed": "drugbank.enzymes.pmids"}, "target-drugbank": {"SYMBOL": "drugbank.targets.gene_name", "action": "drugbank.targets.actions", "function": "drugbank.targets.general_function", "name": "drugbank.targets.name", "pubmed": "drugbank.targets.pmids"}, "target-drugcentral": {"SYMBOL": "drugcentral.bioactivity.uniprot.gene_symbol", "action": "drugcentral.bioactivity.action_type", "name": "drugcentral.bioactivity.target_name"}, "treats": {"SNOMED": "drugcentral.drug_use.indication.snomed_concept_id", "UMLS": "drugcentral.drug_use.indication.umls_cui", "name": "drugcentral.drug_use.indication.concept_name"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the MyChem.info chem query web services.  Learn more about [MyChem.info](http://MyChem.info/)", "termsOfService": "http://MyChem.info/terms", "title": "MyChem.info API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/chem": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple chemical IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Chem"}, "type": "array"}}}, "description": "A list of matching chemical objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of chemical IDs, return the matching chemical object", "tags": ["chemical"]}}, "/chem/{chemid}": {"get": {"parameters": [{"description": "Retrieve chemical objects based on ID - currently one of: [InChiKey](https://en.wikipedia.org/wiki/International_Chemical_Identifier#InChIKey), [DrugBank accession number](https://www.drugbank.ca/documentation), [ChEMBLID](https://www.ebi.ac.uk/chembl/faq#faq40), [ChEBI identifier](http://www.ebi.ac.uk/chebi/aboutChebiForward.do), [PubChem CID](https://pubchem.ncbi.nlm.nih.gov/search/help_search.html#Cid), [UNII](https://www.fda.gov/ForIndustry/DataStandards/SubstanceRegistrationSystem-UniqueIngredientIdentifierUNII/).  Supports JSONP and CORS as well.", "example": "USNINKBPBVKHHZ-CYUUQNCZSA-L", "in": "path", "name": "chemid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Chem"}}}, "description": "A matching chemical object"}, "404": {"description": "A response indicating an unknown chemical ID"}}, "summary": "Retrieve chemical objects based on ID", "tags": ["chemical"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "MyChem.info metadata object"}}, "summary": "Get metadata about the data available from MyChem.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "MyChem.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a MyChem.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://MyChem.info).  Examples: \"Fludara\", \"CHEMBI:63599\", \"DB01073\".", "example": "Fludara", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make chemical queries and return matching chemical hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch chemical queries and return matching chemical hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/metabolizedBy"}, {"$ref": "#/components/x-bte-kgs-operations/target"}, {"$ref": "#/components/x-bte-kgs-operations/treats"}, {"$ref": "#/components/x-bte-kgs-operations/treats2"}, {"$ref": "#/components/x-bte-kgs-operations/treated_by2"}, {"$ref": "#/components/x-bte-kgs-operations/contraindication"}, {"$ref": "#/components/x-bte-kgs-operations/metabolize"}, {"$ref": "#/components/x-bte-kgs-operations/targetedBy"}, {"$ref": "#/components/x-bte-kgs-operations/treatedBy"}, {"$ref": "#/components/x-bte-kgs-operations/contraindicatedBy"}]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://mychem.info/v1"}, {"description": "Production server", "url": "http://mychem.info/v1"}], "tags": [{"name": "chemical"}, {"name": "drug"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}]}, {"_id": "51742c9f6ca40d46bdeb6facd76257ff", "_meta": {"date_created": "2021-02-03T00:02:35.479989+00:00", "last_updated": "2021-05-06T07:04:03.086777+00:00", "url": "https://automat.renci.org/hmdb/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:33+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:32.847544"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Human Metabolome DataBase (hmdb.org)](hmdb.org).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat HMDB&provider_long=RENCI", "title": "Automat HMDB", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hmdb"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "e4594ac1218186891fb2e48c63e182a3", "_meta": {"date_created": "2021-02-04T00:00:28.887481+00:00", "last_updated": "2021-05-06T07:03:14.220442+00:00", "url": "https://automat.renci.org/uberongraph/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:49+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:33.355226"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph representation of Uberongraph, an integration of ontologies including GO, CHEBI, Uberon, and HPO.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Uberongraph&provider_long=RENCI", "title": "Automat Uberongraph", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/uberongraph"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "0d3cb44c7d519f06c8a6a8dec43dbf05", "_meta": {"date_created": "2021-01-26T00:02:38.407228+00:00", "last_updated": "2021-05-06T07:03:07.161775+00:00", "url": "https://automat.renci.org/covid-phenotypes/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:33+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:33.772173"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A hand-curated graph of phenotypes of covid-19.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Covid Phenotypes&provider_long=RENCI", "title": "Automat Covid Phenotypes", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/covid-phenotypes"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "b0b36734630fdeb93252ebab7939535e", "_meta": {"date_created": "2021-05-08T16:50:14.839875+00:00", "last_updated": "2021-05-14T07:03:59.562455+00:00", "url": "https://automat.renci.org/chemical-normalization/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:03:59+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:08:48.564874"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph  linking together similar compounds.  Two compounds are linked by an edge in the graph if they are equivalent when charge, salts, and stereochemistry are ignored.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Chemical Normalization&provider_long=RENCI", "title": "Automat Chemical normalization (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/chemical-normalization"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "9ee398a738916a98b612068cc022454f", "_meta": {"date_created": "2020-12-11T23:57:12.070157+00:00", "last_updated": "2021-05-14T07:04:14.703453+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/LINCS/smartapi.yml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:14+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:19.468737"}, "components": {"x-bte-kgs-operations": {"drug-indication": [{"inputs": [{"id": "LINCS", "semantic": "ChemicalSubstance"}], "method": "get", "outputs": [{"id": "MESH", "semantic": "Disease"}], "parameters": {"id": "{inputs[0]}"}, "path": "/query", "predicate": "treats", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/drug-indication"}, "source": "LINCS", "supportBatch": false}]}, "x-bte-response-mapping": {"drug-indication": {"MESH": "documents.mesh_id", "name": "documents.mesh_heading"}}}, "info": {"contact": {"email": "akoleti@med.miami.edu", "name": "UM BD2K-LINCS DCIC", "x-id": "http://lincsportal.ccs.miami.edu/", "x-role": "responsible organization"}, "description": "Documentation of the LINCS Data Portal web services. Learn more about [LINCS Data Portal](http://lincsportal.ccs.miami.edu/dcic-portal/)", "termsOfService": "http://lincsportal.ccs.miami.edu/dcic-portal/#/terms", "title": "LINCS Data Portal API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/fetchmolecules": {"get": {"parameters": [{"description": "Parameter used for searching small molecule metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; Name:\"Imatinib\", lincsidentifier:\"LSM-1028\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.", "in": "query", "name": "searchTerm", "required": true, "schema": {"type": "string"}, "x-valueType": ["http://identifiers.org/lincs.smallmolecule"]}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a small molecule that matched the query criteria.", "x-responseValueType": [{"path": "lincs.smallmolecule", "valueType": " http://identifiers.org/"}]}}, "summary": "Get LINCS small molecule records, which contain both LINCS-based and general metadata about the small molecules tested in the NIH LINCS program. Parameter 'searchTerm' allows querying by specific metadata fields within small molecule records.", "tags": ["small molecule", "query", "LINCS", "SchuererLab"]}}, "/fetchcells": {"get": {"parameters": [{"description": "Parameter used for searching cell line metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; Name:\"MCF7\", lincsidentifier:\"LSM-1028\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.", "in": "query", "name": "searchTerm", "required": true, "schema": {"type": "string"}, "x-valueType": [" http://identifiers.org/lincs.cell"]}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a cell line that matched the query criteria.", "x-responseValueType": [{"path": "lincs.cell", "valueType": "http://identifiers.org/'"}]}}, "summary": "Get LINCS cell lines records, which contain both LINCS-based and general metadata about the cell lines tested in the NIH LINCS program. Parameter 'searchTerm' allows querying by specific metadata fields within the cell line records.", "tags": ["diseases", "cells", "query", "LINCS", "SchuererLab"]}}, "/fetchdata": {"get": {"parameters": [{"description": "Parameter used for searching data set metadata fields. Syntax is \"field name:\"value\"\" Do Not include outer quotes. Example; centerfullname:\"HMS LINCS (Harvard Medical School)\", technologies:\"Fluorescence imaging\", etc. Setting search term equal to the wildcard charachter, \"*\", will query for all fields of all records up to the specified limit.", "in": "query", "name": "searchTerm", "required": true, "schema": {"type": "string"}, "x-valueType": ["http://identifiers.org/lincs.data"]}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a dataset that matched the query criteria.", "x-responseValueType": [{"path": "lincs.data", "valueType": "http://identifiers.org/"}]}}, "summary": "Get metadata for LINCS assay data sets (DOES NOT RETURN ASSAY ENDPOINT DATA). Parameter 'searchTerm' allows querying by specific metadata fields within the assay metadata records.", "tags": ["signature", "query", "LINCS", "SchuererLab"]}}, "/mechanismOfAction": {"get": {"parameters": [{"description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.", "in": "query", "name": "id", "required": false, "schema": {"type": "string"}, "x-valueType": ["http://identifiers.org/lincs.smallmolecule"]}, {"description": "Parameter used to search by the full name of the mechanism of action. Syntax is \"moa=Mechanism name\" Do Not use quotes. Example; moa=Stem cell growth factor receptor inhibitor.", "in": "query", "name": "moa", "required": false, "schema": {"type": "string"}}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a mechanism of action that matched the query criteria.", "x-responseValueType": [{"path": "lincs.smallmolecule", "valueType": "http://identifiers.org/"}]}}, "summary": "Get known mechanisms of action for LINCS small molecules.", "tags": ["query", "LINCS", "SchuererLab", "small molecule"]}}, "/bioactivity": {"get": {"parameters": [{"description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.", "in": "query", "name": "id", "required": false, "schema": {"type": "string"}, "x-valueType": ["http://identifiers.org/lincs.smallmolecule"]}, {"description": "Parameter used to search by the biochemical assay target using the target's preferred gene symbol from UniProt. Syntax is \"target=GENE SYMBOL\" Do Not use quotes. Examples; target=BRAF; target=MAPK13; etc..", "in": "query", "name": "target", "required": false, "schema": {"type": "string"}}, {"description": "Parameter used to search by the biochemical assay target using the target's UniProt accession number. Syntax is \"uniprot=accession number\" Do Not use quotes. Examples; uniprto=O15264; uniprot=P15056; etc..", "in": "query", "name": "uniprot", "required": false, "schema": {"type": "string"}}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a bioactivity that matched the query criteria.", "x-responseValueType": [{"path": "lincs.smallmolecule", "valueType": "http://identifiers.org/"}]}}, "summary": "Get known bioactivities for LINCS small molecules, these data are aggregated values resourced from the ChEMBL ver 23 database <https://www.ebi.ac.uk/chembl/>. The ChEMBL values were mined from numerous sources.", "tags": ["signature", "query", "LINCS", "SchuererLab", "small molecule"]}}, "/drugindication": {"get": {"parameters": [{"description": "Parameter used to search by LINCS small molecule identifier. Syntax is \"id=LSM-#\" Do Not use quotes. Example; id=LSM-1008.", "in": "query", "name": "id", "required": false, "schema": {"type": "string"}, "x-valueType": ["http://identifiers.org/lincs.smallmolecule"]}, {"description": "Parameter used to search by the EFO drug indication. Syntax is \"efo=Drug Indication\" Do Not use quotes. Example; efo=renal carcinoma", "in": "query", "name": "efo", "required": false, "schema": {"type": "string"}}, {"description": "Parameter used to search by the MeSH drug indication. Syntax is \"efo=Drug Indication\" Do Not use quotes. Example; mesh=carcinoma, renal cell", "in": "query", "name": "mesh", "required": false, "schema": {"type": "string"}}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a drug indication that matched the query criteria.", "x-responseValueType": [{"path": "lincs.smallmolecule", "valueType": "http://identifiers.org/"}]}}, "summary": "Get known drug indications for LINCS small molecules, the indications are captured from both the Experimental Factor Ontology (EFO) and the Medical Subject Headings (MeSH) vocabularies.", "tags": ["signature", "query", "LINCS", "SchuererLab", "small molecule"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/drug-indication"}]}}, "/disease": {"get": {"parameters": [{"description": "Parameter used to search by the DO disease name. Syntax is \"disease=disease name\" Do Not use quotes. Example; disease=breast carcinoma", "in": "query", "name": "disease", "required": false, "schema": {"type": "string"}}, {"description": "Parameter used to search by the DO identifier. Syntax is \"doid=DOID:#\" Do Not use quotes. Example; doid=DOID:3459", "in": "query", "name": "doid", "required": false, "schema": {"type": "string"}}, {"description": "limit the number of records returned, default is 10", "in": "query", "name": "limit", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A query response object with 'documents' property, each document corresponds to a disease that matched the query criteria.", "x-responseValueType": [{"path": "lincs.cell", "valueType": "http://identifiers.org/"}]}}, "summary": "Query for LINCS cell line identifiers by disease, the diseases are captured from the Disease Ontology (DO) vocabulary.", "tags": ["diseases", "query", "LINCS", "SchuererLab", "cells"]}}}, "servers": [{"description": "Production server", "url": "http://lincsportal.ccs.miami.edu/dcic/api/"}], "tags": [{"name": "small molecule"}, {"name": "query"}, {"name": "cells"}, {"name": "gene"}, {"name": "diseases"}, {"name": "LINCS"}, {"name": "SchuererLab"}, {"name": "signature"}, {"name": "translator"}]}, {"_id": "9d7ab69df070c2c1b9ce89e750569b5b", "_meta": {"date_created": "2021-01-26T00:00:59.341300+00:00", "last_updated": "2021-05-06T07:05:02.088051+00:00", "url": "https://automat.renci.org/chemical-normalization/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:04:10+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:19.909773"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph  linking together similar compounds.  Two compounds are linked by an edge in the graph if they are equivalent when charge, salts, and stereochemistry are ignored.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Chemical Normalization&provider_long=RENCI", "title": "Automat Chemical normalization", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/chemical-normalization"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "27a5b60716c3a401f2c021a5b718c5b1", "_meta": {"date_created": "2021-03-02T21:16:25.421365+00:00", "last_updated": "2021-05-14T07:03:51.608752+00:00", "slug": "api", "url": "https://raw.githubusercontent.com/SmartAPI/smartapi_registry/master/SmartAPI/smartapi_openapi.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:03:51+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:07.015998"}, "externalDocs": {"description": "Find more info here", "url": "https://smart-api.info"}, "info": {"contact": {"email": "cwu@scripps.edu", "name": "Chunlei Wu", "url": "https://github.com/newgene", "x-id": "https://orcid.org/0000-0002-2629-6124", "x-role": "responsible developer"}, "description": "This is the API provided from [SmartAPI](https://smart-api.info) application.", "termsOfService": "https://creativecommons.org/licenses/by/4.0/", "title": "SmartAPI API", "version": "1.0", "x-implementationLanguage": "Python", "x-maturity": "production", "x-translator": {"component": "Utility", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/metadata/{api_id}": {"get": {"description": "Return matching API metadata", "operationId": "", "parameters": [{"description": "The value can be either the API id (e.g. \"27a5b60716c3a401f2c021a5b718c5b1\")\n or the slug name (e.g. \"mygene\"). You can also pass \"all\" to get a list of\n all API metadata (using \"from\" and \"size\" for pagination).", "in": "path", "name": "api_id", "required": true, "schema": {"type": "string"}}, {"description": "include \"_meta\" and \"_id\" fields in the response if passed \"1\" or \"true\". Default is \"false\".", "in": "query", "name": "meta", "schema": {"type": "string"}}, {"description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".", "in": "query", "name": "raw", "schema": {"type": "string"}}, {"description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.", "in": "query", "name": "fields", "schema": {"type": "string"}}, {"description": "Output format for the return API metadata. The value can be \"json\" or \"yaml\". Default is \"json\".", "in": "query", "name": "format", "schema": {"type": "string"}}, {"description": "Number of items to be skipped. Combining with \"size\" parameter, this can be used for the pagination of the long result.", "in": "query", "name": "from", "schema": {"type": "string"}}, {"description": "The number of items returned in one request. Combining with \"from\" parameter, this can be used for the pagination of the long result.", "in": "query", "name": "size", "schema": {"type": "string"}}], "responses": {"200": {"description": "successful response"}}, "summary": "Return matching API metadata", "tags": ["metadata"]}}, "/query/": {"get": {"description": "Query metadata for matching APIs.", "parameters": [{"description": "Can pass any string as the query term to match any field, e.g. \"mygene.info\", or pass a fielded query term like \"info.contact.name:wu\".", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"description": "You can use this parameter to filter the fields returned from the raw metadata document. Only effective when \"raw=1\" is passed. E.g. \"info.contact.name,servers\". Nested fields are supported via dot notation, and multiple fields can be passed as a comma-separated string.", "in": "query", "name": "fields", "schema": {"type": "string"}}, {"description": "return raw metadata document if passed \"1\" or \"true\". Default is \"false\".", "in": "query", "name": "raw", "schema": {"type": "string"}}, {"description": "Number of items to be skipped. Combining with \"size\" parameter, this can be used for the pagination of the long result.", "in": "query", "name": "from", "schema": {"type": "string"}}, {"description": "The number of items returned in one request. Combining with \"from\" parameter, this can be used for the pagination of the long result.", "in": "query", "name": "size", "schema": {"type": "string"}}], "responses": {"200": {"description": "default response"}}, "summary": "Query metadata for matching APIs."}}, "/validate": {"get": {"description": "Validate input SmartAPI metadata", "operationId": "", "parameters": [{"description": "The full URL of an input SmartAPI metadata to validate. The file format can be either JSON or YAML.", "in": "query", "name": "url", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "default response"}}, "summary": "Validate input SmartAPI metadata"}}, "/suggestion": {"get": {"description": "Return suggested values from the existing APIs in the registry for a given field.", "operationId": "", "parameters": [{"description": "An input field to return the suggested values and their occurrence numbers.", "in": "query", "name": "field", "schema": {"type": "string"}}, {"description": "The maximum number of suggested values to return", "in": "query", "name": "size", "schema": {"type": "string"}}], "responses": {"default": {"description": "Default response"}}, "summary": "Return suggested values for a give field."}}, "/metakg": {"get": {"parameters": [{"description": "The subject type of the association, e.g. Gene", "example": "Gene", "in": "query", "name": "subject", "schema": {"type": "string"}}, {"description": "The object type of the association, e.g. ChemicalSubstance", "example": "ChemicalSubstance", "in": "query", "name": "object", "schema": {"type": "string"}}, {"description": "The predicate of the association, e.g. Gene", "example": "physically_interacts_with", "in": "query", "name": "predicate", "schema": {"type": "string"}}, {"description": "The API providing the association, e.g. MyChem.info API", "example": "MyChem.info API", "in": "query", "name": "api", "schema": {"type": "string"}}, {"description": "The data source providing the association, e.g. drugbank", "example": "drugbank", "in": "query", "name": "provided_by", "schema": {"type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"description": "Array of all associations", "items": {"properties": {"api": {"description": "The api providing the association, e.g. MyChem.info", "properties": {"name": {"description": "The api providing the association, e.g. MyChem.info", "example": "MyChem.info API", "type": "string"}, "smartapi": {"description": "smartapi related data", "properties": {"id": {"description": "unique smartapi id for the api", "example": "8f08d1446e0bb9c2b323713ce83e2bd3", "type": "string"}, "metadata": {"description": "the url for smartapi specification", "example": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml", "type": "string"}, "ui": {"description": "the web UI url for the API", "example": "https://smart-api.info/ui/8f08d1446e0bb9c2b323713ce83e2bd3", "type": "string"}}, "type": "object"}}, "type": "object"}, "object": {"description": "The object type of the association, e.g. ChemicalSubstance", "example": "ChemicalSubstance", "type": "string"}, "predicate": {"description": "The predicate of the association, e.g. physically_interacts_with", "example": "physically_interacts_with", "type": "string"}, "provided_by": {"description": "The data source providing the association, e.g. ChEMBL", "example": "ChEMBL", "type": "string"}, "subject": {"description": "The subject type of the association, e.g. Gene", "example": "Gene", "type": "string"}}, "type": "object"}, "type": "array"}}}, "description": "Association information including subject, object, predicate, api, provided_by and smartapi info."}}, "summary": "retrieve associations within smartapi, if no parameters provided, will return all associations"}}}, "servers": [{"description": "Production server", "url": "https://smart-api.info/api"}, {"description": "Development server", "url": "http://dev.smart-api.info/api"}], "tags": [{"name": "api"}, {"name": "metadata"}, {"name": "openapi"}, {"name": "translator"}], "x-externalResources": [{"x-type": "api documentation", "x-url": "http://example.org/api/docs"}, {"x-description": "BioGPS and MyGene.info: organizing online, gene-centric information", "x-type": "publication", "x-url": "https://doi.org/10.1093/nar/gks1114"}, {"x-type": "social media", "x-url": "http://twitter.com/mygeneinfo"}]}, {"_id": "4f94c54ada189ecfe08491f662986fd6", "_meta": {"date_created": "2021-05-08T16:51:52.687982+00:00", "last_updated": "2021-05-14T07:04:02.010339+00:00", "url": "https://automat.renci.org/robokopkg/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:01+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:07.887433"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Biomedical Knowledge graph build by constructing relationships from federated data sets.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Robokop KG&provider_long=RENCI", "title": "Automat Robokop KG (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/robokopkg"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "3e74f67bd571c74f1832829a5b5a40eb", "_meta": {"date_created": "2021-02-01T00:07:19.265482+00:00", "last_updated": "2021-05-06T07:04:06.738843+00:00", "url": "https://automat.renci.org/ctd/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:51+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:44.777565"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Comparative Toxicogenomics Database (ctdbase.org)](ctdbase.org).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat CTD&provider_long=RENCI", "title": "Automat CTD", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/ctd"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "d22b657426375a5295e7da8a303b9893", "_meta": {"date_created": "2021-01-27T00:02:35.434735+00:00", "last_updated": "2021-05-14T07:04:16.010296+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/biolink/openapi.yml", "username": "newgene"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:15+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:15.212102"}, "components": {"x-bte-kgs-operations": {"anatomy-gene": [{"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "HGNC", "semantic": "Gene"}], "parameters": {"anatomy_id": "{inputs[0]}", "direct": true, "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/anatomy-gene-hgnc"}, "source": "Monarch Initiative", "supportBatch": false}, {"inputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"anatomy_id": "{inputs[0]}", "direct": true, "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/anatomy-gene-ncbigene"}, "source": "Monarch Initiative", "supportBatch": false}], "disease-gene": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HGNC", "semantic": "Gene"}], "parameters": {"direct": true, "disease_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-gene-hgnc"}, "source": "Monarch Initiative", "supportBatch": false}, {"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"direct": true, "disease_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-gene-ncbigene"}, "source": "Monarch Initiative", "supportBatch": false}], "disease-pathway": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "REACT", "semantic": "Pathway"}], "parameters": {"direct": true, "disease_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-pathway"}, "source": "Monarch Initiative", "supportBatch": false}], "disease-phenotype": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"direct": true, "disease_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "has_phenotype", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/disease-phenotype"}, "source": "Monarch Initiative", "supportBatch": false}], "gene-anatomy": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "UBERON", "semantic": "AnatomicalEntity"}], "parameters": {"direct": true, "gene_id": "NCBIGene:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-anatomy"}, "source": "Monarch Initiative", "supportBatch": false}], "gene-disease": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"direct": true, "gene_id": "NCBIGene:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-disease"}, "source": "Monarch Initiative", "supportBatch": false}], "gene-interaction": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "HGNC", "semantic": "Gene"}], "parameters": {"direct": true, "gene_id": "NCBIGene:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "physically_interacts_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-interaction-hgnc"}, "source": "Monarch Initiative", "supportBatch": false}, {"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "NCBIGENE", "semantic": "Gene"}], "parameters": {"direct": true, "gene_id": "NCBIGene:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-interaction-ncbigene"}, "source": "Monarch Initiative", "supportBatch": false}], "gene-phenotype": [{"inputs": [{"id": "NCBIGene", "semantic": "Gene"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"direct": true, "gene_id": "NCBIGene:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/gene-phenotype"}, "source": "Monarch Initiative", "supportBatch": false}], "pathway-disease": [{"inputs": [{"id": "REACT", "semantic": "Pathway"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"direct": true, "pathway_id": "REACT:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/pathway-disease"}, "source": "Monarch Initiative", "supportBatch": false}], "pathway-phenotype": [{"inputs": [{"id": "REACT", "semantic": "Pathway"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"direct": true, "gene_id": "REACT:{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/pathway-phenotype"}, "source": "Monarch Initiative", "supportBatch": false}], "phenotype-disease": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"direct": true, "phenotype_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype-disease"}, "source": "Monarch Initiative", "supportBatch": false}], "phenotype-gene": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HGNC", "semantic": "Gene"}], "parameters": {"direct": true, "phenotype_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype-gene-hgnc"}, "source": "Monarch Initiative", "supportBatch": false}, {"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCBIGene", "semantic": "Gene"}], "parameters": {"direct": true, "phenotype_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype-gene-ncbigene"}, "source": "Monarch Initiative", "supportBatch": false}], "phenotype-pathway": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "REACT", "semantic": "Pathway"}], "parameters": {"direct": true, "phenotype_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype-pathway"}, "source": "Monarch Initiative", "supportBatch": false}], "phenotype-variant": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "DBSNP", "semantic": "SequenceVariant"}], "parameters": {"direct": true, "phenotype_id": "{inputs[0]}", "rows": 200, "unselect_evidence": true}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/phenotype-variant"}, "source": "Monarch Initiative", "supportBatch": false}]}, "x-bte-response-mapping": {"anatomy-gene-hgnc": {"HGNC": "associations.object.HGNC", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "anatomy-gene-ncbigene": {"NCBIGene": "associations.object.NCBIGene", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "disease-gene-hgnc": {"HGNC": "associations.object.HGNC", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by", "taxid": "associations.object.taxon.id"}, "disease-gene-ncbigene": {"NCBIGene": "associations.object.NCBIGene", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by", "taxid": "associations.object.taxon.id"}, "disease-pathway": {"REACT": "associations.object.REACT", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "disease-phenotype": {"HP": "associations.object.HP", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "gene-anatomy": {"UBERON": "associations.object.UBERON", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "gene-disease": {"MONDO": "associations.object.MONDO", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "gene-interaction-hgnc": {"HGNC": "associations.object.HGNC", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by", "taxid": "associations.object.taxon.id"}, "gene-interaction-ncbigene": {"NCBIGene": "associations.object.NCBIGene", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by", "taxid": "associations.object.taxon.id"}, "gene-phenotype": {"HP": "associations.object.HP", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "pathway-disease": {"MONDO": "associations.object.MONDO", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "pathway-phenotype": {"HP": "associations.object.HP", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "phenotype-disease": {"MONDO": "associations.object.MONDO", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "phenotype-gene-hgnc": {"HGNC": "associations.object.HGNC", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "phenotype-gene-ncbigene": {"NCBIGene": "associations.object.NCBIGene", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "phenotype-pathway": {"REACT": "associations.object.REACT", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}, "phenotype-variant": {"DBSNP": "associations.object.DBSNP", "name": "associations.object.label", "pubmed": "associations.publications.id", "relation": "associations.relation.label", "source": "associations.provided_by"}}}, "info": {"contact": {"email": "cjm@berkeleybop.org", "name": "Chris Mungall", "x-id": "https://github.com/cmungall", "x-role": "responsible developer"}, "description": "API integration layer for linked biological objects.", "termsOfService": "https://github.com/monarch-initiative/biolink-api/", "title": "BioLink API", "version": "0.1.1", "x-translator": {"component": "KP", "team": ["Standards Reference Implementation Team"]}}, "openapi": "3.0.0", "paths": {"/bioentity/anatomy/{anatomy_id}/genes": {"get": {"parameters": [{"description": "CURIE identifier of anatomy IDs can be used with same results", "example": "UBERON:0002037", "in": "path", "name": "anatomy_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns genes associated with an anatomy", "tags": ["anatomy"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/anatomy-gene"}]}}, "/bioentity/disease/{disease_id}/genes": {"get": {"parameters": [{"description": "CURIE identifier of disease IDs can be used with same results", "example": "MONDO:0016575", "in": "path", "name": "disease_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns genes associated with a disease", "tags": ["disease"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-gene"}]}}, "/bioentity/disease/{disease_id}/pathways": {"get": {"parameters": [{"description": "CURIE identifier of disease IDs can be used with same results", "example": "MONDO:0016575", "in": "path", "name": "disease_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns pathways associated with a disease", "tags": ["disease"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-pathway"}]}}, "/bioentity/disease/{disease_id}/phenotypes": {"get": {"parameters": [{"description": "CURIE identifier of disease IDs can be used with same results", "example": "MONDO:0016575", "in": "path", "name": "disease_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns phenotypes associated with a disease", "tags": ["disease"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/disease-phenotype"}]}}, "/bioentity/gene/{gene_id}/anatomy": {"get": {"parameters": [{"description": "CURIE identifier of gene IDs can be used with same results", "example": "NCBIGENE:1017", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns anatomies associated with a gene", "tags": ["gene"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene-anatomy"}]}}, "/bioentity/gene/{gene_id}/diseases": {"get": {"parameters": [{"description": "CURIE identifier of gene IDs can be used with same results", "example": "NCBIGENE:1017", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns diseases associated with a gene", "tags": ["gene"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene-disease"}]}}, "/bioentity/gene/{gene_id}/interactions": {"get": {"parameters": [{"description": "CURIE identifier of gene IDs can be used with same results", "example": "NCBIGENE:1017", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns gene interaction", "tags": ["gene"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene-interaction"}]}}, "/bioentity/gene/{gene_id}/phenotypes": {"get": {"parameters": [{"description": "CURIE identifier of gene IDs can be used with same results", "example": "NCBIGENE:1017", "in": "path", "name": "gene_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns phenotypes associated with a gene", "tags": ["gene"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/gene-phenotype"}]}}, "/bioentity/pathway/{pathway_id}/diseases": {"get": {"parameters": [{"description": "CURIE identifier of REACT pathway IDs can be used with same results", "example": "REACT:R-HSA-5387390", "in": "path", "name": "pathway_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns diseases associated with a pathway", "tags": ["pathway"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/pathway-disease"}]}}, "/bioentity/pathway/{pathway_id}/phenotypes": {"get": {"parameters": [{"description": "CURIE identifier of REACT pathway IDs can be used with same results", "example": "REACT:R-HSA-5387390", "in": "path", "name": "pathway_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns phenotypes associated with a pathway", "tags": ["pathway"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/pathway-phenotype"}]}}, "/bioentity/phenotype/{phenotype_id}/genes": {"get": {"parameters": [{"description": "CURIE identifier of phenotype IDs can be used with same results", "example": "HP:0012265", "in": "path", "name": "phenotype_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns genes associated with a phenotype", "tags": ["phenotype"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/phenotype-gene"}]}}, "/bioentity/phenotype/{phenotype_id}/pathways": {"get": {"parameters": [{"description": "CURIE identifier of phenotype IDs can be used with same results", "example": "HP:0012265", "in": "path", "name": "phenotype_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns pathways associated with a phenotype", "tags": ["phenotype"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/phenotype-pathway"}]}}, "/bioentity/phenotype/{phenotype_id}/variants": {"get": {"parameters": [{"description": "CURIE identifier of phenotype IDs can be used with same results", "example": "HP:0012265", "in": "path", "name": "phenotype_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns pathways associated with a phenotype", "tags": ["phenotype"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/phenotype-variant"}]}}, "/bioentity/phenotype/{phenotype_id}/diseases": {"get": {"parameters": [{"description": "CURIE identifier of phenotype IDs can be used with same results", "example": "HP:0012265", "in": "path", "name": "phenotype_id", "required": true, "schema": {"type": "string"}}, {"description": "number of rows", "example": 100, "in": "query", "name": "rows", "required": false, "schema": {"type": "integer"}}], "responses": {"200": {"description": "A distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"}}, "summary": "Returns diseases associated with a phenotype", "tags": ["phenotype"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/phenotype-disease"}]}}}, "servers": [{"description": "Production server", "url": "https://api.monarchinitiative.org/api"}], "tags": [{"name": "anatomy"}, {"name": "disease"}, {"name": "gene"}, {"name": "phenotype"}, {"name": "pathway"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biolink"}]}, {"_id": "ed0ee52921c7cbce24033ffd1369922e", "_meta": {"date_created": "2020-12-07T23:03:08.522992+00:00", "last_updated": "2021-05-14T07:04:14.362287+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/semmed/semmed_disease.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:13+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:15.909113"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned disease object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching disease hit(s). The supported field names can be found from any disease object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching disease hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching disease hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Disease": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Disease"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"Disease-affected_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-affected_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affected_by"}, "path": "/query", "predicate": "affected_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affected_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-affects-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "affects"}, "path": "/query", "predicate": "affects", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-affects-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-caused_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "caused_by"}, "path": "/query", "predicate": "caused_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-caused_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-causes-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-causes-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-causes-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "causes"}, "path": "/query", "predicate": "causes", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-causes-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-coexists_with-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "coexists_with"}, "path": "/query", "predicate": "coexists_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-coexists_with-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-derives_from-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "derives_from"}, "path": "/query", "predicate": "derives_from", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-derives_from-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-derives_from-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "derives_from"}, "path": "/query", "predicate": "derives_from", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-derives_from-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-derives_into-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "derives_into"}, "path": "/query", "predicate": "derives_into", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-derives_into-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupted_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "disrupted_by"}, "path": "/query", "predicate": "disrupted_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupted_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-disrupts-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "disrupts"}, "path": "/query", "predicate": "disrupts", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-disrupts-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "negatively_regulated_by"}, "path": "/query", "predicate": "entity_negatively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-negatively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "negatively_regulates"}, "path": "/query", "predicate": "entity_negatively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-negatively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-physically_interacts_with-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "physically_interacts_with"}, "path": "/query", "predicate": "physically_interacts_with", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-physically_interacts_with-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulated_by"}, "path": "/query", "predicate": "entity_positively_regulated_by_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulates-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulates-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulates-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-positively_regulates-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "positively_regulates"}, "path": "/query", "predicate": "entity_positively_regulates_entity", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-positively_regulates-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevented_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "prevented_by"}, "path": "/query", "predicate": "prevented_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevented_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-prevents-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "prevents"}, "path": "/query", "predicate": "prevents", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-prevents-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-related_to-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "related_to"}, "path": "/query", "predicate": "related_to", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-related_to-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-AnatomicalEntity": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "AnatomicalEntity"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-AnatomicalEntity"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-BiologicalProcess": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "BiologicalProcess"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-BiologicalProcess"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-Cell": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Cell"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Cell"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-CellularComponent": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "CellularComponent"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-CellularComponent"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-ChemicalSubstance": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-ChemicalSubstance"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Disease"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-Gene": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Gene"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-Gene"}, "source": "SEMMED", "supportBatch": true}], "Disease-treated_by-PhenotypicFeature": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "treated_by"}, "path": "/query", "predicate": "treated_by", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treated_by-PhenotypicFeature"}, "source": "SEMMED", "supportBatch": true}], "Disease-treats-Disease": [{"inputSeparator": ",", "inputs": [{"id": "UMLS", "semantic": "Disease"}], "method": "post", "outputs": [{"id": "UMLS", "semantic": "Disease"}], "parameters": {"fields": "treats"}, "path": "/query", "predicate": "treats", "requestBody": {"body": {"q": "{inputs[0]}", "scopes": "umls"}}, "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease-treats-Disease"}, "source": "SEMMED", "supportBatch": true}]}, "x-bte-response-mapping": {"Disease-affected_by-AnatomicalEntity": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-BiologicalProcess": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-Cell": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-CellularComponent": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-ChemicalSubstance": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-Disease": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-Gene": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affected_by-PhenotypicFeature": {"pmid": "affected_by.pmid", "umls": "affected_by.umls"}, "Disease-affects-AnatomicalEntity": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-BiologicalProcess": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-Cell": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-CellularComponent": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-ChemicalSubstance": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-Disease": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-Gene": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-affects-PhenotypicFeature": {"pmid": "affects.pmid", "umls": "affects.umls"}, "Disease-caused_by-AnatomicalEntity": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-BiologicalProcess": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-Cell": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-CellularComponent": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-ChemicalSubstance": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-Disease": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-Gene": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-caused_by-PhenotypicFeature": {"pmid": "caused_by.pmid", "umls": "caused_by.umls"}, "Disease-causes-BiologicalProcess": {"pmid": "causes.pmid", "umls": "causes.umls"}, "Disease-causes-Disease": {"pmid": "causes.pmid", "umls": "causes.umls"}, "Disease-coexists_with-AnatomicalEntity": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-BiologicalProcess": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-Cell": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-CellularComponent": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-ChemicalSubstance": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-Disease": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-Gene": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-coexists_with-PhenotypicFeature": {"pmid": "coexists_with.pmid", "umls": "coexists_with.umls"}, "Disease-derives_from-ChemicalSubstance": {"pmid": "derives_from.pmid", "umls": "derives_from.umls"}, "Disease-derives_from-Gene": {"pmid": "derives_from.pmid", "umls": "derives_from.umls"}, "Disease-derives_into-ChemicalSubstance": {"pmid": "derives_into.pmid", "umls": "derives_into.umls"}, "Disease-disrupted_by-BiologicalProcess": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupted_by-CellularComponent": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupted_by-ChemicalSubstance": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupted_by-Disease": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupted_by-Gene": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupted_by-PhenotypicFeature": {"pmid": "disrupted_by.pmid", "umls": "disrupted_by.umls"}, "Disease-disrupts-AnatomicalEntity": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-BiologicalProcess": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-Cell": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-CellularComponent": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-Disease": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-Gene": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-disrupts-PhenotypicFeature": {"pmid": "disrupts.pmid", "umls": "disrupts.umls"}, "Disease-negatively_regulated_by-BiologicalProcess": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Disease-negatively_regulated_by-ChemicalSubstance": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Disease-negatively_regulated_by-Disease": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Disease-negatively_regulated_by-Gene": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Disease-negatively_regulated_by-PhenotypicFeature": {"pmid": "negatively_regulated_by.pmid", "umls": "negatively_regulated_by.umls"}, "Disease-negatively_regulates-BiologicalProcess": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Disease-negatively_regulates-ChemicalSubstance": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Disease-negatively_regulates-Disease": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Disease-negatively_regulates-Gene": {"pmid": "negatively_regulates.pmid", "umls": "negatively_regulates.umls"}, "Disease-physically_interacts_with-BiologicalProcess": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-physically_interacts_with-CellularComponent": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-physically_interacts_with-ChemicalSubstance": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-physically_interacts_with-Disease": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-physically_interacts_with-Gene": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-physically_interacts_with-PhenotypicFeature": {"pmid": "physically_interacts_with.pmid", "umls": "physically_interacts_with.umls"}, "Disease-positively_regulated_by-ChemicalSubstance": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Disease-positively_regulated_by-Disease": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Disease-positively_regulated_by-Gene": {"pmid": "positively_regulated_by.pmid", "umls": "positively_regulated_by.umls"}, "Disease-positively_regulates-BiologicalProcess": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Disease-positively_regulates-ChemicalSubstance": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Disease-positively_regulates-Disease": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Disease-positively_regulates-Gene": {"pmid": "positively_regulates.pmid", "umls": "positively_regulates.umls"}, "Disease-prevented_by-AnatomicalEntity": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevented_by-BiologicalProcess": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevented_by-ChemicalSubstance": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevented_by-Disease": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevented_by-Gene": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevented_by-PhenotypicFeature": {"pmid": "prevented_by.pmid", "umls": "prevented_by.umls"}, "Disease-prevents-Disease": {"pmid": "prevents.pmid", "umls": "prevents.umls"}, "Disease-related_to-AnatomicalEntity": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-BiologicalProcess": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-Cell": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-CellularComponent": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-ChemicalSubstance": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-Disease": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-Gene": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-related_to-PhenotypicFeature": {"pmid": "related_to.pmid", "umls": "related_to.umls"}, "Disease-treated_by-AnatomicalEntity": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-BiologicalProcess": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-Cell": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-CellularComponent": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-ChemicalSubstance": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-Disease": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-Gene": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treated_by-PhenotypicFeature": {"pmid": "treated_by.pmid", "umls": "treated_by.umls"}, "Disease-treats-Disease": {"pmid": "treats.pmid", "umls": "treats.umls"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "Chunlei Wu", "x-id": "https://github.com/newgene", "x-role": "responsible developer"}, "description": "Documentation of the SEMMED disease query web services.  Learn more about [semmed disease](http://pending.biothings.io/semmed)", "termsOfService": "http://biothings.ncats.io", "title": "SEMMED Disease API", "version": "1.0", "x-translator": {"component": "KP", "team": ["Service Provider"]}}, "openapi": "3.0.0", "paths": {"/disease": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple disease IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Disease"}, "type": "array"}}}, "description": "A list of matching disease objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of disease IDs, return the matching disease object", "tags": ["gene"]}}, "/disease/{diseaseid}": {"get": {"parameters": [{"description": "Retrieve disease objects based on ID", "example": "C0004096", "in": "path", "name": "diseaseid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Disease"}}}, "description": "A matching disease object"}, "404": {"description": "A response indicating an unknown disease ID"}}, "summary": "Retrieve disease objects based on ID", "tags": ["disease"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "mydisease.info metadata object"}}, "summary": "Get metadata about the data available from mydisease.info", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "mydisease.info metadata fields object"}}, "summary": "Get metadata about the data fields available from a mydisease.info chem object", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.  The detailed query syntax can be found from our [docs](http://mydisease.info).  Examples: \"cancer\", \"primary ciliary dyskinesia\", \"DOID:9562\"", "example": "cancer", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make disease queries and return matching disease hits. Supports JSONP and CORS as well.", "tags": ["query"]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affected_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-affects-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-caused_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-causes-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-causes-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-coexists_with-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-derives_from-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-derives_from-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-derives_into-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupted_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-disrupts-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-negatively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-physically_interacts_with-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-positively_regulates-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevented_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-prevents-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-related_to-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-AnatomicalEntity"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Cell"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-ChemicalSubstance"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-BiologicalProcess"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Disease"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-PhenotypicFeature"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-Gene"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treated_by-CellularComponent"}, {"$ref": "#/components/x-bte-kgs-operations/Disease-treats-Disease"}]}}}, "servers": [{"description": "Production server", "url": "https://biothings.ncats.io/semmed"}], "tags": [{"name": "chemical"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "semmed"}]}, {"_id": "132da307d445fac70a403a5e623107d5", "_meta": {"date_created": "2021-02-04T00:00:37.939131+00:00", "last_updated": "2021-05-06T07:03:13.621217+00:00", "url": "https://automat.renci.org/hetio/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:03:49+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:08:45.229147"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [hetionet (het.io)](het.io).", "termsOfService": "http://linkmissing", "title": "Automat Hetio", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hetio"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "a192b537c4113cc585088511574dbe64", "_meta": {"date_created": "2021-05-08T16:52:10.889942+00:00", "last_updated": "2021-05-14T07:04:02.870794+00:00", "url": "https://automat.renci.org/covidkopkg/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:02+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:07.956062"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Knowledge graph constructed from Robokop KG by incorporating Cord-19 dataset and other covid related knowledge sources.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Covidkop KG&provider_long=RENCI", "title": "Automat Covidkop KG (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/covidkopkg"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "fb11d7646f98762360d2832d0f06578b", "_meta": {"date_created": "2021-05-08T19:09:24.091655+00:00", "last_updated": "2021-05-14T07:04:26.679369+00:00", "url": "https://answercoalesce.renci.org/1.1/openapi.json", "username": "PhillipsOwen"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:26+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:23.249774"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "Level"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MethodName": {"description": "An enumeration.", "enum": ["all", "property", "graph", "ontology"], "title": "MethodName", "type": "string"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"$ref": "#/components/schemas/Operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "Answer coalesce: This serivce accepts a TRAPI 1.1 object containing answers and returns answers that have been coalesced by property, graph or ontology analysis.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Answer coalesce&provider_long=RENCI", "title": "Answer coalesce", "version": "0.1.3", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/coalesce/{method}": {"post": {"description": "Answer coalesce operations. You may choose all, property, graph or ontology analysis. ", "operationId": "coalesce_handler_coalesce__method__post", "parameters": [{"in": "path", "name": "method", "required": true, "schema": {"$ref": "#/components/schemas/MethodName"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Coalesce Handler", "tags": ["Answer coalesce"]}}}, "servers": [{"description": "Default server", "url": "https://answercoalesce.renci.org/1.1"}], "tags": [{"name": "translator"}, {"name": "ARAGORN"}, {"name": "ARA"}]}, {"_id": "3437ede0d451c90f67097c56b230e022", "_meta": {"date_created": "2021-05-08T16:49:53.616297+00:00", "last_updated": "2021-05-14T07:04:37.301180+00:00", "url": "https://automat.renci.org/viral-proteome/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:37+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:23.373291"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph consisting of viral proteins from UniProt, connected by similarity edges from UniRef.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Viral Proteome&provider_long=RENCI", "title": "Automat Viral Proteome (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/viral-proteome"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "c3e55e3a28cf14e147b55e6e09b32b9b", "_meta": {"date_created": "2021-05-08T16:50:33.222336+00:00", "last_updated": "2021-05-14T07:04:11.674638+00:00", "url": "https://automat.renci.org/hmdb/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:11+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.104364"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Human Metabolome DataBase (hmdb.org)](hmdb.org).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat HMDB&provider_long=RENCI", "title": "Automat HMDB (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hmdb"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "4e03414ea4b39e92ffb97690f8620286", "_meta": {"date_created": "2021-02-04T00:01:09.326724+00:00", "last_updated": "2021-05-06T07:05:07.364553+00:00", "url": "https://automat.renci.org/kegg/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:04:13+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:21.517865"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Kyoto Encyclopedia of Genes and Genomes (https://www.genome.jp/kegg/)](https://www.genome.jp/kegg/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat KEGG&provider_long=RENCI", "title": "Automat KEGG", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/kegg"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "540a176f25d912a1c2a066ee2e2428fc", "_meta": {"date_created": "2021-05-08T16:52:18.455809+00:00", "last_updated": "2021-05-14T07:04:04.110833+00:00", "url": "https://automat.renci.org/panther/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:03+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.570079"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " A graph of gene families and pathways from [Panther (pantherdb.org)](pantherdb.org)", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Panther&provider_long=RENCI", "title": "Automat Panther (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/panther"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "1fd2f4cc6b3b6b1f7cda594b00607270", "_meta": {"date_created": "2021-05-08T16:50:03.049025+00:00", "last_updated": "2021-05-14T07:04:04.598171+00:00", "url": "https://automat.renci.org/foodb/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:04+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.620256"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph of the food/chemical relationships in [foodb.ca](foodb.ca).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Foodb&provider_long=RENCI", "title": "Automat Foodb (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/foodb"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "bd612e18f86d9097b02c0d83344b46b7", "_meta": {"date_created": "2021-05-08T16:51:29.095032+00:00", "last_updated": "2021-05-14T07:04:00.769072+00:00", "url": "https://automat.renci.org/ctd/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:00+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.702258"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Comparative Toxicogenomics Database (ctdbase.org)](ctdbase.org).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat CTD&provider_long=RENCI", "title": "Automat CTD (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/ctd"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "2c9fff2f09c71302659faeb515bbb2b8", "_meta": {"date_created": "2021-05-08T16:53:01.455457+00:00", "last_updated": "2021-05-14T07:04:03.556727+00:00", "url": "https://automat.renci.org/human-goa/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:03+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.752741"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": " Human Gene Ontology Annotations from the GO consortium.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Human GOA&provider_long=RENCI", "title": "Automat Human GOA (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/human-goa"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "3a8ad755bbd6f4fdfc0a18c8020d6d58", "_meta": {"date_created": "2021-05-08T16:51:11.055182+00:00", "last_updated": "2021-05-14T07:04:05.113495+00:00", "url": "https://automat.renci.org/hetio/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:04+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.802257"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [hetionet (het.io)](het.io).", "termsOfService": "http://linkmissing", "title": "Automat Hetio (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hetio"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "e0031784afd7cb4e97e266d11df3a9e4", "_meta": {"date_created": "2021-05-08T16:52:25.942456+00:00", "last_updated": "2021-05-14T07:04:20.318659+00:00", "url": "https://automat.renci.org/pharos/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:20+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.851463"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [Pharos (pharos.nih.gov)](pharos.nih.gov).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Pharos&provider_long=RENCI", "title": "Automat Pharos (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/pharos"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "05a5f5d18b4f2c532367561778571c9a", "_meta": {"date_created": "2021-05-08T16:47:20.228851+00:00", "last_updated": "2021-05-14T07:04:17.195957+00:00", "url": "https://automat.renci.org/biolink/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:17+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:21.962178"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Monarch API (https://api.monarchinitiative.org/)](https://api.monarchinitiative.org/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Biolink&provider_long=RENCI", "title": "Automat Biolink (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/biolink"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "4d242ec3f86786729f109b0e9088a0d7", "_meta": {"date_created": "2021-05-08T16:50:55.788416+00:00", "last_updated": "2021-05-14T07:04:17.678180+00:00", "url": "https://automat.renci.org/cord19-scigraph/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:17+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:22.011416"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A literature co-occurence graph based on scigraph parsing of the CORD-19 paper set. All triples contain covid-19 as either subject or object.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Cord19 Scigraph&provider_long=RENCI", "title": "Automat Cord19 Scigraph (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/cord19-scigraph"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "62811dab25864feb191aad0b23503813", "_meta": {"date_created": "2021-05-08T16:51:58.217882+00:00", "last_updated": "2021-05-14T07:04:18.156901+00:00", "url": "https://automat.renci.org/gtex/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:18+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:22.061399"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph containing eqtl and sqtl information from [GTEx Portal (https://gtexportal.org/home/)](https://gtexportal.org/home/). Also includes genes that the variants lie within or near.", "termsOfService": "https://http://robokop.renci.org:7055/tos?service_long=Automat GTEx&provider_long=RENCI", "title": "Automat GTEx (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/gtex"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "b4b45614a935a575292aad3bb726d1f3", "_meta": {"date_created": "2021-02-04T00:01:49.121558+00:00", "last_updated": "2021-05-06T07:03:11.093379+00:00", "url": "https://automat.renci.org/hgnc/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:04:12+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:20.343724"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Gene families from [HGNC (genenames.org)](genenames.org).", "termsOfService": "http://linkmissing", "title": "Automat HGNC", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hgnc"}], "tags": [{"name": "translator"}, {"name": "automat"}]}, {"_id": "ed85eff6809e354002cbf17231918a89", "_meta": {"date_created": "2021-02-03T00:01:02.336283+00:00", "last_updated": "2021-05-06T07:04:07.975373+00:00", "url": "https://automat.renci.org/biolink/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:04:12+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:20.962036"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "CypherDatum": {"properties": {"meta": {"items": {}, "title": "Meta", "type": "array"}, "row": {"items": {}, "title": "Row", "type": "array"}}, "required": ["row", "meta"], "title": "CypherDatum", "type": "object"}, "CypherError": {"properties": {"code": {"title": "Code", "type": "string"}, "message": {"title": "Message", "type": "string"}}, "required": ["code", "message"], "title": "CypherError", "type": "object"}, "CypherRequest": {"properties": {"query": {"title": "Query", "type": "string"}}, "required": ["query"], "title": "CypherRequest", "type": "object"}, "CypherResponse": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/CypherError"}, "title": "Errors", "type": "array"}, "results": {"items": {"$ref": "#/components/schemas/CypherResult"}, "title": "Results", "type": "array"}}, "required": ["results", "errors"], "title": "CypherResponse", "type": "object"}, "CypherResult": {"properties": {"columns": {"items": {"type": "string"}, "title": "Columns", "type": "array"}, "data": {"items": {"$ref": "#/components/schemas/CypherDatum"}, "title": "Data", "type": "array"}}, "required": ["columns", "data"], "title": "CypherResult", "type": "object"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "SimpleSpecElement": {"properties": {"edge_type": {"title": "Edge Type", "type": "string"}, "source_type": {"title": "Source Type", "type": "string"}, "target_type": {"title": "Target Type", "type": "string"}}, "required": ["source_type", "target_type", "edge_type"], "title": "SimpleSpecElement", "type": "object"}, "TypeSummary": {"properties": {"nodes_count": {"title": "Nodes Count", "type": "integer"}}, "required": ["nodes_count"], "title": "TypeSummary", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Monarch API (https://api.monarchinitiative.org/)](https://api.monarchinitiative.org/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Biolink&provider_long=RENCI", "title": "Automat Biolink", "version": "1.0.0", "x-translator": {"component": "KP", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Given a question graph return question graph plus answers.", "operationId": "reasoner_api_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Reasoner API", "tags": ["translator"]}}, "/reasonerapi": {"get": {"description": "Returns a list of question templates that can be used to query this plater instance.", "operationId": "get_reasoner_api_reasonerapi_get", "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Message"}, "title": "Response Get Reasoner Api Reasonerapi Get", "type": "array"}}}, "description": "Successful Response"}}, "summary": "Get question templates"}, "post": {"deprecated": true, "description": "Handle TRAPI request.", "operationId": "reasoner_api_reasonerapi_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {}, "nodes": {"n0": {"category": "biolink:Gene", "id": "NCBIGene:15"}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Reasoner Api"}}, "/cypher": {"post": {"description": "Runs cypher query against the Neo4j instance, and returns an equivalent response expected from a Neo4j HTTP endpoint (https://neo4j.com/docs/rest-docs/current/).", "operationId": "cypher_cypher_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/CypherRequest"}], "example": {"query": "MATCH (n) RETURN count(n)"}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CypherResponse"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Run cypher query"}}, "/predicates": {"get": {"description": "Returns an object where outer keys represent source types with second level keys as targets. And the values of the second level keys is the type of possible edge typesthat connect these concepts.", "operationId": "predicates_predicates_get", "responses": {"200": {"content": {"application/json": {"schema": {"additionalProperties": {"additionalProperties": {"items": {"type": "string"}, "type": "array"}, "type": "object"}, "title": "Response Predicates Predicates Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types", "tags": ["translator"]}}, "/graph/schema": {"get": {"deprecated": true, "description": "Get one-hop connection types", "operationId": "predicates_graph_schema_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Predicates Graph Schema Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get one-hop connection types"}}, "/simple_spec": {"get": {"description": "Returns a list of available predicates when choosing a single source or target curie. Calling this endpoint with no query parameters will return all possible hops for all types.", "operationId": "simple_spec_simple_spec_get", "parameters": [{"in": "query", "name": "source", "required": false, "schema": {"title": "Source", "type": "string"}}, {"in": "query", "name": "target", "required": false, "schema": {"title": "Target", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/SimpleSpecElement"}, "title": "Response Simple Spec Simple Spec Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one-hop connection schema"}}, "/graph/summary": {"get": {"description": "Returns a summary of the graph.", "operationId": "graph_summary_graph_summary_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response Graph Summary Graph Summary Get", "type": "object"}}}, "description": "Successful Response"}}, "summary": "Get graph summary"}}, "/overlay": {"post": {"description": "Given a ReasonerAPI graph, add support edges for any nodes linked in result bindings.", "operationId": "overlay_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"knowledge_graph": {"edges": {"9f7f9d86cb57e7190aafa57f7564eb05": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1610437123.7988985, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_family_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "PANTHER.FAMILY:PTHR12015:SF170", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "PANTHER.FAMILY:PTHR12015:SF170"}, "dd8ef7a4606c4f8e405e6a5b1b095993": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"ctime": 1584932086.0009434, "predicate": "biolink:part_of", "provided_by": "panther.get_gene_by_gene_family", "publications": [], "relation": "BFO:0000050", "relation_label": "part of", "source_database": "panther", "source_id": "NCBIGene:6352", "target_id": "PANTHER.FAMILY:PTHR12015"}}], "object": "PANTHER.FAMILY:PTHR12015", "predicate": "biolink:part_of", "subject": "NCBIGene:6352"}}, "nodes": {"NCBIGene:6352": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Gene"], "chromosome": "17", "equivalent_identifiers": ["ENSEMBL:ENSG00000271503", "NCBIGene:6352", "NCBIGene:6352", "HGNC:10632", "UniProtKB:P13501"], "gene_family": ["Chemokine ligands"], "gene_family_id": [483], "location": "17q12", "locus_group": "protein-coding gene", "synonyms": [], "taxon": 9606}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:MolecularEntity", "biolink:GenomicEntity", "biolink:GeneOrGeneProduct", "biolink:MacromolecularMachine", "biolink:Gene"], "name": "CCL5"}, "PANTHER.FAMILY:PTHR12015": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "SMALL INDUCIBLE CYTOKINE A"}, "PANTHER.FAMILY:PTHR12015:SF170": {"attributes": [{"type": "WIKIDATA:Q80585", "value": {"category": ["biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:NamedThing", "biolink:MolecularEntity", "biolink:Entity"], "equivalent_identifiers": ["PANTHER.FAMILY:PTHR12015:SF170"], "synonyms": []}}], "category": ["biolink:NamedThing", "biolink:BiologicalEntity", "biolink:GeneFamily", "biolink:MolecularEntity", "biolink:Entity"], "name": "C-C MOTIF CHEMOKINE 5"}}}, "query_graph": {"edges": {"e12": {"object": "n2", "predicate": "biolink:part_of", "subject": "n1"}, "e23": {"object": "n2", "predicate": "biolink:part_of", "subject": "n3"}}, "nodes": {"n1": {"category": "biolink:Gene", "id": "NCBIGene:6352", "is_set": false}, "n2": {"category": "biolink:GeneFamily", "is_set": false}, "n3": {"category": "biolink:GeneFamily", "is_set": false}}}, "results": [{"edge_bindings": {"e12": [{"id": "dd8ef7a4606c4f8e405e6a5b1b095993"}], "e23": [{"id": "9f7f9d86cb57e7190aafa57f7564eb05"}]}, "node_bindings": {"n1": [{"id": "NCBIGene:6352"}], "n2": [{"id": "PANTHER.FAMILY:PTHR12015"}], "n3": [{"id": "PANTHER.FAMILY:PTHR12015:SF170"}]}}]}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Overlay results with available connections between each node.", "tags": ["translator"]}}, "/about": {"get": {"description": "Returns a JSON describing dataset.", "operationId": "about_about_get", "responses": {"200": {"content": {"application/json": {"schema": {"title": "Response About About Get"}}}, "description": "Successful Response"}}, "summary": "JSON about dataset"}}, "/{source_type}/{target_type}/{curie}": {"get": {"description": "Returns one hop paths from `source_node_type`  with `curie` to `target_node_type`.", "operationId": "one_hop__source_type___target_type___curie__get", "parameters": [{"in": "path", "name": "source_type", "required": true, "schema": {"title": "Source Type", "type": "string"}}, {"in": "path", "name": "target_type", "required": true, "schema": {"title": "Target Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response One Hop  Source Type   Target Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Get one hop results from source type to target type. Note: Please GET /predicates to determine what target goes with a source"}}, "/{node_type}/{curie}": {"get": {"description": "Returns `node` matching `curie`.", "operationId": "node__node_type___curie__get", "parameters": [{"in": "path", "name": "node_type", "required": true, "schema": {"title": "Node Type", "type": "string"}}, {"in": "path", "name": "curie", "required": true, "schema": {"title": "Curie", "type": "string"}}], "responses": {"200": {"content": {"application/json": {"schema": {"items": {}, "title": "Response Node  Node Type   Curie  Get", "type": "array"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Find `node` by `curie`"}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/biolink"}], "tags": [{"name": "translator"}, {"name": "Automat"}]}, {"_id": "2bb65b7ea0cd1d40f4e9147836b750e2", "_meta": {"date_created": "2021-05-08T16:52:44.440846+00:00", "last_updated": "2021-05-14T07:04:42.157269+00:00", "url": "https://automat.renci.org/ontological-hierarchy/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:42+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:38.874786"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph for ontological hierarchy extracted from Uberongraph.", "termsOfService": "http://linkmissing", "title": "Automat Ontological Hierarchy (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/ontological-hierarchy"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "76cd06cca954663972cffd4f74b179bd", "_meta": {"date_created": "2021-05-08T16:50:24.483718+00:00", "last_updated": "2021-05-14T07:04:18.662254+00:00", "url": "https://automat.renci.org/chembio/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:18+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:22.119897"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on [chem2bio2rdf (http://cheminfov.informatics.indiana.edu:8080/c2b2r/)](http://cheminfov.informatics.indiana.edu:8080/c2b2r/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Chembio&provider_long=RENCI", "title": "Automat Chembio (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/chembio"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "4d2dfc41e256dc6e652e648eee7829a9", "_meta": {"date_created": "2021-05-08T16:50:46.672886+00:00", "last_updated": "2021-05-14T07:04:19.149853+00:00", "url": "https://automat.renci.org/cord19-scibite/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:19+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:22.175238"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A literature co-occurence graph based on the [scibite parsing (https://github.com/SciBiteLabs/CORD19)](https://github.com/SciBiteLabs/CORD19) of the CORD-19 paper set.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Cord19 Scibite&provider_long=RENCI", "title": "Automat Cord19 Scibite (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/cord19-scibite"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "145ac08ec8e572f25b977b39dcf9ebe6", "_meta": {"date_created": "2021-05-08T18:42:32.164778+00:00", "last_updated": "2021-05-14T07:04:16.670746+00:00", "url": "https://aragorn-ranker.renci.org/1.1/openapi.json", "username": "PhillipsOwen"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:16+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:22.872243"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "Level"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ARAGORN Ranker: The ranker used by the ARAGORN ARA, which takes a TRAPI 1.1 message containing answers, and calculates numerical scores for each answer.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN Ranker&provider_long=RENCI", "title": "ARAGORN Ranker", "version": "2.3.3", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/score": {"post": {"description": "Score answers.\n\nThis is mostly glue around the heavy lifting in ranker_obj.Ranker", "operationId": "query_score_post", "parameters": [{"in": "query", "name": "jaccard_like", "required": false, "schema": {"default": false, "title": "Jaccard Like", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}, "/omnicorp_overlay": {"post": {"description": "Add support to message.\n\nAdd support edges to knowledge_graph and bindings to results.", "operationId": "query_omnicorp_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}, "/weight_correctness": {"post": {"description": "Weight kgraph edges based on metadata.\n\n\"19 pubs from CTD is a 1, and 2 should at least be 0.5\"\n    - cbizon", "operationId": "query_weight_correctness_post", "parameters": [{"description": "Portion of cooccurrence publications relevant to a question", "in": "query", "name": "relevance", "required": false, "schema": {"default": 0.0025, "description": "Portion of cooccurrence publications relevant to a question", "title": "Relevance", "type": "number"}}, {"description": "Minimum weight (at 0 publications)", "in": "query", "name": "wt_min", "required": false, "schema": {"default": 0.0, "description": "Minimum weight (at 0 publications)", "title": "Wt Min", "type": "number"}}, {"description": "Maximum weight (at inf publications)", "in": "query", "name": "wt_max", "required": false, "schema": {"default": 1.0, "description": "Maximum weight (at inf publications)", "title": "Wt Max", "type": "number"}}, {"description": "Publications at 50% of wt_max", "in": "query", "name": "p50", "required": false, "schema": {"default": 2.0, "description": "Publications at 50% of wt_max", "title": "P50", "type": "number"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}}, "servers": [{"description": "Default server", "url": "https://aragorn-ranker.renci.org/1.1"}], "tags": [{"name": "translator"}, {"name": "ARAGORN"}, {"name": "ARA"}]}, {"_id": "994a667dafe2e2c1d42a5390a6fba9aa", "_meta": {"date_created": "2021-05-08T16:51:21.906265+00:00", "last_updated": "2021-05-14T07:04:42.958479+00:00", "url": "https://automat.renci.org/uberongraph/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:42+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:26.085368"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph representation of Uberongraph, an integration of ontologies including GO, CHEBI, Uberon, and HPO.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Uberongraph&provider_long=RENCI", "title": "Automat Uberongraph (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/uberongraph"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "83dc344b290744ab1554dd7411288e33", "_meta": {"date_created": "2021-05-08T18:41:38.098634+00:00", "last_updated": "2021-05-14T07:04:39.136402+00:00", "url": "https://aragorn.renci.org/1.1/openapi.json", "username": "PhillipsOwen"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:38+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:40.903390"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "Level"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MethodName": {"description": "An enumeration.", "enum": ["all", "none", "graph", "ontology", "property"], "title": "MethodName", "type": "string"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ARAGORN: Performs a query operation which compiles data from numerous ARAGORN ranking agent services.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN&provider_long=RENCI", "title": "ARAGORN", "version": "0.1.3", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Performs a query operation which compiles data from numerous ARAGORN ranking agent services.\nThe services are called in the following order, each passing their output to the next service as an input:\n\nStrider -> (optional) Answer Coalesce -> ARAGORN-Ranker:omnicorp overlay -> ARAGORN-Ranker:weight correctness -> ARAGORN-Ranker:score", "operationId": "query_handler_query_post", "parameters": [{"in": "query", "name": "answer_coalesce_type", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MethodName"}], "default": "all"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Response"}], "default": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicate": "biolink:correlated_with", "subject": "n0"}}, "nodes": {"n0": {"category": "biolink:Disease", "id": "MONDO:0004979"}, "n1": {"category": "biolink:ChemicalSubstance"}}}}}, "title": "Response"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Handler", "tags": ["ARAGORN"]}}}, "servers": [{"description": "Default server", "url": "https://aragorn.renci.org/1.1"}], "tags": [{"name": "translator"}, {"name": "ARA"}]}, {"_id": "305a2909830b776df7a02b7207e4acc5", "_meta": {"date_created": "2021-05-08T16:51:45.253476+00:00", "last_updated": "2021-05-14T07:04:43.753278+00:00", "url": "https://automat.renci.org/kegg/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:43+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:09:40.955403"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [Kyoto Encyclopedia of Genes and Genomes (https://www.genome.jp/kegg/)](https://www.genome.jp/kegg/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat KEGG&provider_long=RENCI", "title": "Automat KEGG (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/kegg"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "ddd4fdce05c3e1b7b4499c80b8e3fb00", "_meta": {"date_created": "2021-02-03T00:02:04.073044+00:00", "last_updated": "2021-05-14T07:04:45.507836+00:00", "url": "https://aragorn.renci.org/openapi.json", "username": "PhillipsOwen"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:04:45+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:09:42.435748"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "title": "Level", "type": "string"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MethodName": {"description": "An enumeration.", "enum": ["all", "none", "graph", "ontology", "property"], "title": "MethodName", "type": "string"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ARAGORN: Performs a query operation which compiles data from numerous ARAGORN ranking agent services.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN&provider_long=RENCI", "title": "ARAGORN", "version": "0.0.2", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/query": {"post": {"description": "Performs a query operation which compiles data from numerous ARAGORN ranking agent services.\nThe services are called in the following order, each passing their output to the next service as an input:\n\nStrider -> (optional) Answer Coalesce -> ARAGORN-Ranker:omnicorp overlay -> ARAGORN-Ranker:weight correctness -> ARAGORN-Ranker:score", "operationId": "query_handler_query_post", "parameters": [{"in": "query", "name": "answer_coalesce_type", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/MethodName"}], "default": "all"}}], "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Response"}], "default": {"message": {"query_graph": {"edges": {"e01": {"object": "n1", "predicate": "biolink:correlated_with", "subject": "n0"}}, "nodes": {"n0": {"category": "biolink:Disease", "id": "MONDO:0004979"}, "n1": {"category": "biolink:ChemicalSubstance"}}}}}, "title": "Response"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query Handler", "tags": ["ARAGORN"]}}}, "servers": [{"description": "Default server", "url": "https://aragorn.renci.org"}], "tags": [{"name": "translator"}, {"name": "ARA"}]}, {"_id": "d86a24f6027ffe778f84ba10a7a1861a", "_meta": {"date_created": "2021-05-10T09:19:50.170321+00:00", "last_updated": "2021-05-14T07:05:40.479379+00:00", "url": "https://raw.githubusercontent.com/Hadlock-Lab/clinical_risk_kp/master/ehr_risk_kp.yaml", "username": "rtroper"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:37+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:11:34.591790"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"ChemicalSubstance0-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease2Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease3Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Disease4Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance0-Procedure3Rev-related_to": [{"inputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease2Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease3Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Disease4Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UNII\\:{inputs[0]} AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "ChemicalSubstance5-Procedure3Rev-related_to": [{"inputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UNII\\:{inputs[0]} AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease2Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease3Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Disease4Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease2-Procedure3Rev-related_to": [{"inputs": [{"id": "MONDO", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease2Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Disease4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease3-Procedure3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease2Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Disease4Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Disease4-Procedure3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease2Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease3Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Disease4Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature1-Procedure3Rev-related_to": [{"inputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease2Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Disease4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature3-Procedure3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease2Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Disease4Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "PhenotypicFeature4-Procedure3Rev-related_to": [{"inputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance0Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "CHEBI", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance0Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-ChemicalSubstance5Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "UNII", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance5Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease2Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "MONDO", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease2Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Disease4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "Disease"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Disease AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Disease4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature1Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "HP", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature1Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-PhenotypicFeature4Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "SNOMEDCT", "semantic": "PhenotypicFeature"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:PhenotypicFeature AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/PhenotypicFeature4Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3Rev-associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:associated_with_risk_for", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3Rev-negatively_associated_with_risk_for": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_associated_with_risk_for", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_associated_with_risk_for", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3Rev-negatively_correlated_with": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:negatively_correlated_with", "size": 1000, "sort": "predicate.feature_coefficient"}, "predicate": "negatively_correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}], "Procedure3-Procedure3Rev-related_to": [{"inputs": [{"id": "NCIT", "semantic": "Procedure"}], "outputs": [{"id": "NCIT", "semantic": "Procedure"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Procedure AND predicate.type:related_to", "size": 1000, "sort": "-predicate.feature_coefficient"}, "predicate": "related_to", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Procedure3Rev"}, "source": "EHR Risk Provider (Multiomics)", "supportBatch": false}]}, "x-bte-response-mapping": {"ChemicalSubstance0": {"CHEBI": "hits.object.CHEBI", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "ChemicalSubstance0Rev": {"CHEBI": "hits.subject.CHEBI", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "ChemicalSubstance5": {"UNII": "hits.object.UNII", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "ChemicalSubstance5Rev": {"UNII": "hits.subject.UNII", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease2": {"MONDO": "hits.object.MONDO", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease2Rev": {"MONDO": "hits.subject.MONDO", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease3": {"NCIT": "hits.object.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease3Rev": {"NCIT": "hits.subject.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease4": {"SNOMEDCT": "hits.object.SNOMEDCT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Disease4Rev": {"SNOMEDCT": "hits.subject.SNOMEDCT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature1": {"HP": "hits.object.HP", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature1Rev": {"HP": "hits.subject.HP", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature3": {"NCIT": "hits.object.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature3Rev": {"NCIT": "hits.subject.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature4": {"SNOMEDCT": "hits.object.SNOMEDCT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "PhenotypicFeature4Rev": {"SNOMEDCT": "hits.subject.SNOMEDCT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Procedure3": {"NCIT": "hits.object.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}, "Procedure3Rev": {"NCIT": "hits.subject.NCIT", "auc_roc": "hits.predicate.auc_roc", "classifier": "hits.predicate.classifier", "feature_coefficient": "hits.predicate.feature_coefficient", "negative_cohort_order_of_magnitude": "hits.predicate.negative_cohort_order_of_magnitude", "positive_cohort_order_of_magnitude": "hits.predicate.positive_cohort_order_of_magnitude", "provenance": "hits.predicate.provenance", "provided_by": "hits.predicate.provided_by", "type": "hits.predicate.type"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the EHR Clinical Risk KP query web services.", "termsOfService": "https://biothings.io/about", "title": "Clinical Risk KP API", "version": "1.1", "x-translator": {"component": "KP", "team": ["Multiomics Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "CHEBI:9671-biolink:associated_with_risk_for-MONDO:0007972-Logistic Regression-0.8751-NA-2.4890", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "object.id:MONDO\\:0007972", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance0-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance5-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease2-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease3-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Disease4-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature1-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature3-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/PhenotypicFeature4-Procedure3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance0Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-ChemicalSubstance5Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease2Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Disease4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature1Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature3Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-PhenotypicFeature4Rev-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3Rev-related_to"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3Rev-associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3Rev-negatively_correlated_with"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3-negatively_associated_with_risk_for"}, {"$ref": "#/components/x-bte-kgs-operations/Procedure3-Procedure3Rev-negatively_associated_with_risk_for"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/clinical_risk_kp"}, {"description": "Production server", "url": "https://biothings.ncats.io/clinical_risk_kp"}], "tags": [{"name": "disease"}, {"name": "drug"}, {"name": "chemical_substance"}, {"name": "phenotypic_feature"}, {"name": "procedure"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}, {"_id": "255ea57924924b721919b9ee17a07894", "_meta": {"date_created": "2021-05-08T16:51:03.209130+00:00", "last_updated": "2021-05-14T07:05:27.230374+00:00", "url": "https://automat.renci.org/hgnc/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:26+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:34.822309"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Gene families from [HGNC (genenames.org)](genenames.org).", "termsOfService": "http://linkmissing", "title": "Automat HGNC (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/hgnc"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "c8b1619535bd598406049f4dc51e1702", "_meta": {"date_created": "2021-05-08T16:51:37.397712+00:00", "last_updated": "2021-05-14T07:05:27.836949+00:00", "url": "https://automat.renci.org/gtopdb/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:27+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:34.872457"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph based on the [IUPHAR Guide to Pharmacology (https://www.guidetopharmacology.org/)](https://www.guidetopharmacology.org/)", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat Gtopdb&provider_long=RENCI", "title": "Automat Gtopdb (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/gtopdb"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "9497b5a8f4f07f504599a72692d14083", "_meta": {"date_created": "2021-05-08T16:49:17.814516+00:00", "last_updated": "2021-05-14T07:05:28.317796+00:00", "url": "https://automat.renci.org/mychem/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:28+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:34.922800"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "A graph integrating DrugBank, DrugCentral, and Aeolus data as provided by [mychem.info](mychem.info).", "termsOfService": "http://http://robokop.renci.org:7055/tos?service_long=Automat Mychem&provider_long=RENCI", "title": "Automat MyChem (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/mychem"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "bee0cc86f86d88b83f613b674e2bd92e", "_meta": {"date_created": "2021-05-08T16:49:25.000027+00:00", "last_updated": "2021-05-14T07:05:28.837346+00:00", "url": "https://automat.renci.org/intact/1.1/openapi.json", "username": "YaphetKG"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:28+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:34.973667"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"attribute_source": {"nullable": true, "title": "Attribute Source", "type": "string"}, "attribute_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "original_attribute_name": {"nullable": true, "title": "Original Attribute Name", "type": "string"}, "value": {"title": "value"}, "value_type_id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "value_type_id"}, "value_url": {"nullable": true, "title": "Value Url", "type": "string"}}, "required": ["attribute_type_id", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogLevel": {"$ref": "#/components/schemas/LogLevelEnum", "description": "Log level.", "title": "LogLevel"}, "LogLevelEnum": {"description": "Log level.", "enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "title": "LogLevelEnum", "type": "string"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "MetaEdge": {"additionalProperties": false, "properties": {"object": {"$ref": "#/components/schemas/BiolinkEntity"}, "predicate": {"$ref": "#/components/schemas/BiolinkPredicate"}, "relations": {"items": {"type": "string"}, "title": "Relations", "type": "array"}, "subject": {"$ref": "#/components/schemas/BiolinkEntity"}}, "required": ["subject", "predicate", "object"], "title": "MetaEdge", "type": "object"}, "MetaKnowledgeGraph": {"properties": {"edges": {"items": {"$ref": "#/components/schemas/MetaEdge"}, "minItems": 1, "title": "Edges", "type": "array"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/MetaNode"}, "title": "Nodes", "type": "object"}}, "title": "MetaKnowledgeGraph", "type": "object"}, "MetaNode": {"additionalProperties": false, "properties": {"id_prefixes": {"items": {"type": "string"}, "minItems": 1, "title": "Id Prefixes", "type": "array"}}, "required": ["id_prefixes"], "title": "MetaNode", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "nullable": true, "title": "category", "type": "array"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "Operator": {"description": "Operator.", "enum": ["==", ">", "<", "matches"], "title": "Operator", "type": "string"}, "QEdge": {"description": "Query edge.", "properties": {"constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "object": {"title": "object node id", "type": "string"}, "predicates": {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "minItems": 1, "nullable": true, "title": "predicate", "type": "array"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"categories": {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "minItems": 1, "nullable": true, "title": "category", "type": "array"}, "constraints": {"items": {"$ref": "#/components/schemas/QueryConstraint"}, "nullable": true, "title": "constraints", "type": "array"}, "ids": {"items": {"$ref": "#/components/schemas/CURIE"}, "minItems": 1, "nullable": true, "title": "id", "type": "array"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "Query": {"description": "Request.", "properties": {"log_level": {"allOf": [{"$ref": "#/components/schemas/LogLevel"}], "nullable": true, "title": "log_level"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}}, "required": ["message"], "title": "query", "type": "object"}, "QueryConstraint": {"additionalProperties": false, "description": "QNode or QEdge constraint.", "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "nullable": false, "title": "id"}, "name": {"nullable": false, "title": "name", "type": "string"}, "not": {"default": false, "title": "not", "type": "boolean"}, "operator": {"allOf": [{"$ref": "#/components/schemas/Operator"}], "title": "operator"}, "unit_id": {"title": "unit_id"}, "unit_name": {"title": "unit_name"}, "value": {"title": "value"}}, "required": ["name", "id", "operator", "value"], "title": "QueryConstraint", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "kebedey@renci.org", "name": "Yaphet Kebede", "x-id": "https://github.com/yaphetkg", "x-role": "contributor"}, "description": "Molecular (Gene-Gene) interactions from [EBI IntAct (https://www.ebi.ac.uk/intact/)](https://www.ebi.ac.uk/intact/).", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=Automat IntAct&provider_long=RENCI", "title": "Automat IntAct (trapi v-1.1.0)", "version": "1.0.0", "x-translator": {"biolink-version": "1.4.0", "component": "KP", "team": ["Ranking Agent"]}, "x-trapi": {"version": "1.1.0"}}, "openapi": "3.0.2", "paths": {"/1.1/meta_knowledge_graph": {"get": {"description": "Returns meta knowledge graph representation of this TRAPI web service.", "operationId": "get_meta_knowledge_graph_1_1_meta_knowledge_graph_get", "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MetaKnowledgeGraph"}}}, "description": "Successful Response"}}, "summary": "Meta knowledge graph representation of this TRAPI web service.", "tags": ["trapi"]}}, "/1.1/query": {"post": {"description": "Handle TRAPI request.", "operationId": "reasoner_api_1_1_query_post", "requestBody": {"content": {"application/json": {"schema": {"allOf": [{"$ref": "#/components/schemas/Query"}], "example": {"message": {"query_graph": {"edges": {"e0": {"object": "n1", "predicates": "biolink:related_to", "subject": "n0"}}, "nodes": {"n0": {"categories": ["biolink:Gene"]}, "n1": {"categories": ["biolink:Disease"], "ids": ["MONDO:0004969"]}}}}}, "title": "Request"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Query"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query reasoner via one of several inputs.", "tags": ["trapi"]}}}, "servers": [{"description": "Default server", "url": "https://automat.renci.org/intact"}], "tags": [{"name": "translator"}, {"name": "automat"}, {"name": "trapi"}]}, {"_id": "0a29abdf1b63a762ee93d29f29a8db67", "_meta": {"date_created": "2021-01-22T18:08:13.583794+00:00", "last_updated": "2021-05-14T07:05:34.837078+00:00", "url": "https://aragorn-ranker.renci.org/openapi.json", "username": "PhillipsOwen"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:34+00:00", "uptime_status": "unknown", "uptime_ts": "2021-05-14T07:11:35.728499"}, "components": {"schemas": {"Attribute": {"additionalProperties": false, "description": "Node/edge attribute.", "properties": {"name": {"nullable": true, "title": "Name", "type": "string"}, "source": {"nullable": true, "title": "Source", "type": "string"}, "type": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "type"}, "url": {"nullable": true, "title": "Url", "type": "string"}, "value": {"title": "value"}}, "required": ["type", "value"], "title": "Attribute", "type": "object"}, "BiolinkEntity": {"description": "Biolink entity.", "pattern": "^biolink:[A-Z][a-zA-Z]*$", "title": "biolink entity", "type": "string"}, "BiolinkPredicate": {"description": "Biolink predicate.", "pattern": "^biolink:[a-z][a-z_]*$", "title": "biolink predicate", "type": "string"}, "CURIE": {"description": "Compact URI.", "title": "CURIE", "type": "string"}, "Edge": {"additionalProperties": false, "description": "Knowledge graph edge.", "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "object": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "object node id"}, "predicate": {"allOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}], "nullable": true, "title": "Predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "subject node id"}}, "required": ["subject", "object"], "title": "knowledge-graph edge", "type": "object"}, "EdgeBinding": {"description": "Edge binding.", "example": {"id": "string"}, "properties": {"id": {"title": "knowledge graph id", "type": "string"}}, "required": ["id"], "title": "edge binding", "type": "object"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "title": "Detail", "type": "array"}}, "title": "HTTPValidationError", "type": "object"}, "KnowledgeGraph": {"description": "Knowledge graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/Edge"}, "title": "edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/Node"}, "title": "nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "knowledge graph", "type": "object"}, "LogEntry": {"description": "Log entry.", "properties": {"code": {"nullable": true, "title": "Code", "type": "string"}, "level": {"enum": ["ERROR", "WARNING", "INFO", "DEBUG"], "nullable": true, "title": "Level", "type": "string"}, "message": {"nullable": true, "title": "Message", "type": "string"}, "timestamp": {"format": "date-time", "nullable": true, "title": "Timestamp", "type": "string"}}, "title": "LogEntry", "type": "object"}, "Message": {"additionalProperties": false, "description": "Message.", "properties": {"knowledge_graph": {"allOf": [{"$ref": "#/components/schemas/KnowledgeGraph"}], "nullable": true, "title": "knowledge graph"}, "query_graph": {"allOf": [{"$ref": "#/components/schemas/QueryGraph"}], "nullable": true, "title": "query graph"}, "results": {"items": {"$ref": "#/components/schemas/Result"}, "nullable": true, "title": "list of results", "type": "array"}}, "title": "message", "type": "object"}, "Node": {"additionalProperties": false, "description": "Knowledge graph node.", "example": {"category": "string"}, "properties": {"attributes": {"items": {"$ref": "#/components/schemas/Attribute"}, "nullable": true, "title": "Attributes", "type": "array"}, "category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "name": {"nullable": true, "title": "Name", "type": "string"}}, "title": "knowledge-graph node", "type": "object"}, "NodeBinding": {"description": "Node binding.", "example": {"id": "x:string"}, "properties": {"id": {"allOf": [{"$ref": "#/components/schemas/CURIE"}], "title": "knowledge graph id"}}, "required": ["id"], "title": "node binding", "type": "object"}, "QEdge": {"description": "Query edge.", "properties": {"object": {"title": "object node id", "type": "string"}, "predicate": {"anyOf": [{"$ref": "#/components/schemas/BiolinkPredicate"}, {"items": {"$ref": "#/components/schemas/BiolinkPredicate"}, "type": "array"}], "nullable": true, "title": "predicate"}, "relation": {"nullable": true, "title": "Relation", "type": "string"}, "subject": {"title": "subject node id", "type": "string"}}, "required": ["subject", "object"], "title": "query-graph edge", "type": "object"}, "QNode": {"description": "Query node.", "properties": {"category": {"anyOf": [{"$ref": "#/components/schemas/BiolinkEntity"}, {"items": {"$ref": "#/components/schemas/BiolinkEntity"}, "type": "array"}], "nullable": true, "title": "category"}, "id": {"anyOf": [{"$ref": "#/components/schemas/CURIE"}, {"items": {"$ref": "#/components/schemas/CURIE"}, "type": "array"}], "nullable": true, "title": "id"}, "is_set": {"default": false, "title": "Is Set", "type": "boolean"}}, "title": "query-graph node", "type": "object"}, "QueryGraph": {"description": "Query graph.", "properties": {"edges": {"additionalProperties": {"$ref": "#/components/schemas/QEdge"}, "title": "dict of edges", "type": "object"}, "nodes": {"additionalProperties": {"$ref": "#/components/schemas/QNode"}, "title": "dict of nodes", "type": "object"}}, "required": ["nodes", "edges"], "title": "simple query graph", "type": "object"}, "Response": {"description": "Response.", "properties": {"logs": {"items": {"$ref": "#/components/schemas/LogEntry"}, "nullable": true, "title": "Logs", "type": "array"}, "message": {"allOf": [{"$ref": "#/components/schemas/Message"}], "title": "message"}, "status": {"nullable": true, "title": "Status", "type": "string"}}, "required": ["message"], "title": "response", "type": "object"}, "Result": {"description": "Result.", "properties": {"edge_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/EdgeBinding"}, "type": "array"}, "title": "list of edge bindings", "type": "object"}, "node_bindings": {"additionalProperties": {"items": {"$ref": "#/components/schemas/NodeBinding"}, "type": "array"}, "title": "list of node bindings", "type": "object"}}, "required": ["node_bindings", "edge_bindings"], "title": "result", "type": "object"}, "ValidationError": {"properties": {"loc": {"items": {"type": "string"}, "title": "Location", "type": "array"}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}, "required": ["loc", "msg", "type"], "title": "ValidationError", "type": "object"}}}, "info": {"contact": {"email": "patrick@covar.com", "name": "Patrick Wang", "x-id": "https://github.com/patrickkwang", "x-role": "responsible developer"}, "description": "ARAGORN Ranker: The ranker used by the ARAGORN ARA, which takes a TRAPI 1.0 message containing answers, and calculates numerical scores for each answer.", "termsOfService": "http://robokop.renci.org:7055/tos?service_long=ARAGORN Ranker&provider_long=RENCI", "title": "ARAGORN Ranker", "version": "2.2.2", "x-translator": {"component": "ARA", "team": ["Ranking Agent"]}}, "openapi": "3.0.2", "paths": {"/omnicorp_overlay": {"post": {"description": "Add support to message.\n\nAdd support edges to knowledge_graph and bindings to results.", "operationId": "query_omnicorp_overlay_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}, "/score": {"post": {"description": "Score answers.\n\nThis is mostly glue around the heavy lifting in ranker_obj.Ranker", "operationId": "query_score_post", "parameters": [{"in": "query", "name": "jaccard_like", "required": false, "schema": {"default": false, "title": "Jaccard Like", "type": "boolean"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}, "/weight_correctness": {"post": {"description": "Weight kgraph edges based on metadata.\n\n\"19 pubs from CTD is a 1, and 2 should at least be 0.5\"\n    - cbizon", "operationId": "query_weight_correctness_post", "parameters": [{"description": "Portion of cooccurrence publications relevant to a question", "in": "query", "name": "relevance", "required": false, "schema": {"default": 0.0025, "description": "Portion of cooccurrence publications relevant to a question", "title": "Relevance", "type": "number"}}, {"description": "Minimum weight (at 0 publications)", "in": "query", "name": "wt_min", "required": false, "schema": {"default": 0.0, "description": "Minimum weight (at 0 publications)", "title": "Wt Min", "type": "number"}}, {"description": "Maximum weight (at inf publications)", "in": "query", "name": "wt_max", "required": false, "schema": {"default": 1.0, "description": "Maximum weight (at inf publications)", "title": "Wt Max", "type": "number"}}, {"description": "Publications at 50% of wt_max", "in": "query", "name": "p50", "required": false, "schema": {"default": 2.0, "description": "Publications at 50% of wt_max", "title": "P50", "type": "number"}}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "required": true}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Response"}}}, "description": "Successful Response"}, "422": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}, "description": "Validation Error"}}, "summary": "Query", "tags": ["ARAGORN-Ranker"]}}}, "servers": [{"description": "Default server", "url": "https://aragorn-ranker.renci.org"}], "tags": [{"name": "translator"}, {"name": "ARAGORN"}, {"name": "ARA"}]}, {"_id": "71add13e7c8b26b0046cfb8cf5092395", "_meta": {"date_created": "2020-03-12T16:20:50.656877+00:00", "last_updated": "2021-02-17T07:42:20.416659+00:00", "url": "https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/chembl/smartapi.yaml", "username": "kevinxin90"}, "_score": 0.5251593, "_status": {"refresh_status": 499, "refresh_ts": "2021-05-14T07:05:21+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:11:36.984864"}, "components": {"x-bte-kgs-operations": {"target": {"inputs": [{"id": "chembl", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "chembl", "semantic": "Gene"}], "parameters": {"molecule_chembl_id": "{input1}"}, "response-mapping": {"$ref": "#/components/x-bte-response-mapping/drug-mechanism"}, "supportBatch": false}}, "x-bte-response-mapping": {"drug-mechanism": {"@context": "http://schema.org", "@type": "ChemicalSubstance", "bts:chembl": "chembl", "bts:target": {"$input": "bts:chembl", "$source": "chembl", "@type": "Gene", "bts:action": "mechanisms.action_type", "bts:chembl": "mechanisms.target_chembl_id", "bts:mechanism": "mechanisms.mechanism_of_action"}}}}, "info": {"contact": {"email": "help@chembl.org", "name": "chembl help desk", "x-role": "responsible developer"}, "description": "The ChEMBL API", "termsOfService": "http://www.ebi.ac.uk/chembl", "title": "ChEMBL API", "version": "1.0"}, "openapi": "3.0.0", "paths": {"/data/mechanism.json": {"get": {"parameters": [{"description": "chembl id", "example": "CHEMBL744", "in": "query", "name": "molecule_chembl_id", "required": true, "schema": {"type": "string"}}], "responses": {"200": {"description": "A drug mechanism object", "x-bte-response-mapping": {"$ref": "#/components/x-bte-response-mapping/drug-mechanism"}}}, "summary": "retrieve drug mechanism", "x-bte-kgs-operations": {"treats": {"$ref": "#/components/x-bte-kgs-operations/target"}}}}}, "servers": [{"description": "Production server", "url": "http://www.ebi.ac.uk/chembl/api"}], "tags": [{"name": "publication"}, {"name": "translator"}]}, {"_id": "02af7d098ab304e80d6f4806c3527027", "_meta": {"date_created": "2021-04-29T18:24:48.040951+00:00", "last_updated": "2021-05-14T07:05:43.177303+00:00", "url": "https://raw.githubusercontent.com/Hadlock-Lab/multiomics_wellness_kp/main/multiomics_wellness.yaml", "username": "rtroper"}, "_score": 0.5251593, "_status": {"refresh_status": 200, "refresh_ts": "2021-05-14T07:05:42+00:00", "uptime_status": "good", "uptime_ts": "2021-05-14T07:11:41.667127"}, "components": {"parameters": {"callback": {"description": "you can pass a \"callback\" parameter to make a JSONP call. Type: string.", "in": "query", "name": "callback", "schema": {"type": "string"}}, "dotfield": {"description": "control the format of the returned chem object. If \"true\" or \"1\", all fields will be collapsed into a single level deep object (all nested objects will be a single level deep, using dotfield notation to signify the nested structure) Type: boolean. Default: false.", "in": "query", "name": "dotfield", "schema": {"type": "boolean"}}, "email": {"description": "If you are regular users of our services, we encourage you to provide us with an email, so that we can better track the usage or follow up with you.", "in": "query", "name": "email", "schema": {"type": "string"}}, "facet_size": {"description": "the number of facet buckets to return in the response. Type: integer. Default: 10. Max: 1000.", "in": "query", "name": "facet_size", "schema": {"type": "integer"}}, "facets": {"description": "a comma-separated list of fields to return facets on.  In addition to query hits, the fields notated in \"facets\" will be aggregated by value and bucklet counts will be displayed in the \"facets\" field of the response object. Type: string (list). Default: None. Max: 1000.", "in": "query", "name": "facets", "schema": {"type": "string"}}, "fields": {"description": "a comma-separated list of fields (in dotfield notation) used to limit the fields returned from the matching chem hit(s). The supported field names can be found from any chem object or from the /metadata/fields endpoint. If \"fields=all\", all available fields will be returned. Type: string (list). Default: all. Max: 1000.", "in": "query", "name": "fields", "schema": {"type": "string"}}, "format": {"description": "controls output format of server response, currently supports: \"json\", \"jsonld\", \"html\". Type: string. Default: json.", "in": "query", "name": "format", "schema": {"type": "string"}}, "from": {"description": "the number of matching chem hits to skip, starting from 0.  This can be useful for paging in combination with the \"size\" parameter. Type: integer. Default: None.", "in": "query", "name": "from", "schema": {"type": "integer"}}, "prefix": {"description": "Pass a prefix string to filter the available fields. Type: string. Default: None.", "in": "query", "name": "prefix", "schema": {"type": "string"}}, "search": {"description": "Pass a search term to filter the available fields. Type: string. Default: None.", "in": "query", "name": "search", "schema": {"type": "string"}}, "size": {"description": "the maximum number of matching chem hits to return per batch. Type: integer. Default: 10.", "in": "query", "name": "size", "schema": {"type": "integer"}}, "sort": {"description": "the comma-separated list of fields to sort on. Prefix each with \"-\" for descending order, otherwise in ascending order. Default: sort by descending score.", "in": "query", "name": "sort", "schema": {"type": "string"}}}, "schemas": {"Association": {"properties": {"_id": {"type": "string"}}, "required": ["_id"], "type": "object"}, "ErrorResult": {"properties": {"message": {"type": "string"}, "success": {"type": "boolean"}}, "type": "object"}, "QueryPOSTResult": {"items": {"allOf": [{"$ref": "#/components/schemas/Association"}, {"properties": {"_score": {"format": "float", "type": "number"}, "query": {"type": "string"}}, "type": "object"}]}, "type": "array"}, "QueryResult": {"properties": {"hits": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}, "max_score": {"format": "float", "type": "number"}, "took": {"type": "integer"}, "total": {"type": "integer"}}, "type": "object"}, "int64_or_array": {"oneOf": [{"items": {"format": "int64", "type": "integer"}, "type": "array"}, {"format": "int64", "type": "integer"}]}, "string_or_array": {"oneOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "string"}]}}, "x-bte-kgs-operations": {"ChemicalSubstance6-ChemicalSubstance6": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-ChemicalSubstance6Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-ClinicalFinding1": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-ClinicalFinding1Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-ClinicalFinding5": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-ClinicalFinding5Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite0": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite0Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite2": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite2Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite3": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite3Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite4": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite4Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite7": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Metabolite7Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Protein8": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:MESH\\:{inputs[0]} AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ChemicalSubstance6-Protein8Rev": [{"inputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:MESH\\:{inputs[0]} AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ChemicalSubstance6": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ChemicalSubstance6Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ClinicalFinding1": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ClinicalFinding1Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ClinicalFinding5": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-ClinicalFinding5Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite0": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite0Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite2": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite2Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite3": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite3Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite4": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite4Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite7": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Metabolite7Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Protein8": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding1-Protein8Rev": [{"inputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ChemicalSubstance6": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ChemicalSubstance6Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ClinicalFinding1": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ClinicalFinding1Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ClinicalFinding5": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-ClinicalFinding5Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite0": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite0Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite2": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite2Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite3": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite3Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite4": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite4Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite7": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Metabolite7Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Protein8": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "ClinicalFinding5-Protein8Rev": [{"inputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ChemicalSubstance6": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ChemicalSubstance6Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ClinicalFinding1": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ClinicalFinding1Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ClinicalFinding5": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-ClinicalFinding5Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite0": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite0Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite2": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite2Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite3": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite3Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite4": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite4Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite7": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Metabolite7Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Protein8": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite0-Protein8Rev": [{"inputs": [{"id": "CAS", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ChemicalSubstance6": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ChemicalSubstance6Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ClinicalFinding1": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ClinicalFinding1Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ClinicalFinding5": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-ClinicalFinding5Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite0": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite0Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite2": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite2Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite3": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite3Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite4": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite4Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite7": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Metabolite7Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Protein8": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite2-Protein8Rev": [{"inputs": [{"id": "HMDB", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ChemicalSubstance6": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ChemicalSubstance6Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ClinicalFinding1": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ClinicalFinding1Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ClinicalFinding5": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-ClinicalFinding5Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite0": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite0Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite2": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite2Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite3": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite3Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite4": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite4Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite7": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Metabolite7Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Protein8": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite3-Protein8Rev": [{"inputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ChemicalSubstance6": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ChemicalSubstance6Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ClinicalFinding1": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ClinicalFinding1Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ClinicalFinding5": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-ClinicalFinding5Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite0": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite0Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite2": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite2Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite3": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite3Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite4": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite4Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite7": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Metabolite7Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Protein8": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite4-Protein8Rev": [{"inputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ChemicalSubstance6": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ChemicalSubstance6Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ClinicalFinding1": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ClinicalFinding1Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ClinicalFinding5": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-ClinicalFinding5Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite0": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite0Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite2": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite2Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite3": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite3Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite4": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite4Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite7": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Metabolite7Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Protein8": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:\"{inputs[0]}\" AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Metabolite7-Protein8Rev": [{"inputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:\"{inputs[0]}\" AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ChemicalSubstance6": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ChemicalSubstance6Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "MESH", "semantic": "ChemicalSubstance"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:ChemicalSubstance", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ChemicalSubstance6Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ClinicalFinding1": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ClinicalFinding1Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "CHEBI", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding1Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ClinicalFinding5": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-ClinicalFinding5Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "LOINC", "semantic": "ClinicalFinding"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:ClinicalFinding", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/ClinicalFinding5Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite0": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite0Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "CAS", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite0Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite2": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite2Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "HMDB", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite2Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite3": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite3Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "KEGG.COMPOUND", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite3Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite4": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite4Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "KEGG.DRUG", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite4Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite7": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Metabolite7Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "PUBCHEM", "semantic": "Metabolite"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Metabolite", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Metabolite7Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Protein8": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "object,predicate", "q": "subject.id:UniProtKB\\:{inputs[0]} AND object.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}], "Protein8-Protein8Rev": [{"inputs": [{"id": "UniProtKB", "semantic": "Protein"}], "outputs": [{"id": "UniProtKB", "semantic": "Protein"}], "parameters": {"fields": "subject,predicate", "q": "object.id:UniProtKB\\:{inputs[0]} AND subject.type:Protein", "size": 1000, "sort": "predicate.Bonferroni_pval"}, "predicate": "correlated_with", "response_mapping": {"$ref": "#/components/x-bte-response-mapping/Protein8Rev"}, "source": "Multiomics Provider: Wellness", "supportBatch": false}]}, "x-bte-response-mapping": {"ChemicalSubstance6": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "MESH": "hits.object.MESH", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "ChemicalSubstance6Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "MESH": "hits.subject.MESH", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "ClinicalFinding1": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "CHEBI": "hits.object.CHEBI", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "ClinicalFinding1Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "CHEBI": "hits.subject.CHEBI", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "ClinicalFinding5": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "LOINC": "hits.object.LOINC", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "ClinicalFinding5Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "LOINC": "hits.subject.LOINC", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite0": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "CAS": "hits.object.CAS", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite0Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "CAS": "hits.subject.CAS", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite2": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "HMDB": "hits.object.HMDB", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite2Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "HMDB": "hits.subject.HMDB", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite3": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "KEGG_COMPOUND": "hits.object.KEGG_COMPOUND", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite3Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "KEGG_COMPOUND": "hits.subject.KEGG_COMPOUND", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite4": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "KEGG_DRUG": "hits.object.KEGG_DRUG", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite4Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "KEGG_DRUG": "hits.subject.KEGG_DRUG", "N": "hits.predicate.N", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite7": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "N": "hits.predicate.N", "PUBCHEM": "hits.object.PUBCHEM", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Metabolite7Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "N": "hits.predicate.N", "PUBCHEM": "hits.subject.PUBCHEM", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Protein8": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "N": "hits.predicate.N", "UniProtKB": "hits.object.UniProtKB", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}, "Protein8Rev": {"Bonferroni_pval": "hits.predicate.Bonferroni_pval", "N": "hits.predicate.N", "UniProtKB": "hits.subject.UniProtKB", "provenance": "hits.predicate.provenance", "rho": "hits.predicate.rho"}}}, "info": {"contact": {"email": "help@biothings.io", "name": "JIWEN XIN", "x-id": "https://github.com/kevinxin90", "x-role": "responsible developer"}, "description": "Documentation of the Multiomics Wellness KP query web services.", "termsOfService": "https://biothings.io/about", "title": "Multiomics Wellness KP API", "version": "1.1", "x-translator": {"component": "KP", "team": ["Multiomics Provider", "Service Provider"]}}, "openapi": "3.0.0", "paths": {"/association": {"post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"ids": {"description": "multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.", "type": "string"}}, "required": ["ids"]}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/Association"}, "type": "array"}}}, "description": "A list of matching association objects"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "For a list of association IDs, return the matching disease object", "tags": ["association"]}}, "/association/{associationid}": {"get": {"parameters": [{"description": "Retrieve association objects based on Association ID  Supports JSONP and CORS as well.", "example": "HMDB:HMDB60038-biolink:correlated_with-KEGG.COMPOUND:C03045", "in": "path", "name": "associationid", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Association"}}}, "description": "A matching association object"}, "404": {"description": "A response indicating an unknown association ID"}}, "summary": "Retrieve association objects based on ID", "tags": ["association"]}}, "/metadata": {"get": {"parameters": [{"$ref": "#/components/parameters/callback", "in": "query", "name": "callback"}], "responses": {"200": {"description": "KP metadata object"}}, "summary": "Get metadata about the data available from the API", "tags": ["metadata"]}}, "/metadata/fields": {"get": {"parameters": [{"$ref": "#/components/parameters/search", "name": "search"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/prefix", "name": "prefix"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"description": "metadata fields object"}}, "summary": "Get metadata about the data fields available", "tags": ["metadata"]}}, "/query": {"get": {"parameters": [{"description": "Query string.", "example": "subject.id:UniProtKB\\:O96013", "in": "query", "name": "q", "required": true, "schema": {"type": "string"}}, {"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/facet_size", "name": "facet_size"}, {"$ref": "#/components/parameters/sort", "name": "sort"}, {"$ref": "#/components/parameters/callback", "name": "callback"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/facets", "name": "facets"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/from", "name": "from"}, {"$ref": "#/components/parameters/format", "name": "format"}], "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryResult"}}}, "description": "A query response with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make queries and return matching association hits. Supports JSONP and CORS as well.", "tags": ["query"], "x-bte-kgs-operations": [{"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/ChemicalSubstance6-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding1-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/ClinicalFinding5-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite0-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite2-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite3-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite4-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Metabolite7-Protein8Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ChemicalSubstance6"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ChemicalSubstance6Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ClinicalFinding1"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ClinicalFinding1Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ClinicalFinding5"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-ClinicalFinding5Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite0"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite0Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite2"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite2Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite3"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite3Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite4"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite4Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite7"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Metabolite7Rev"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Protein8"}, {"$ref": "#/components/x-bte-kgs-operations/Protein8-Protein8Rev"}]}, "post": {"parameters": [{"$ref": "#/components/parameters/dotfield", "name": "dotfield"}, {"$ref": "#/components/parameters/email", "name": "email"}, {"$ref": "#/components/parameters/fields", "name": "fields"}, {"$ref": "#/components/parameters/size", "name": "size"}, {"$ref": "#/components/parameters/format", "name": "format"}], "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"properties": {"q": {"description": "multiple query terms separated by comma (also \"+\" or whitespace).  Does not support wildcard queries", "type": "string"}, "scopes": {"description": "a comma-separated list of fields as the search \"scopes\" (fields to search through for query term). The available \"fields\" that can be passed to the \"scopes\" parameter are listed in the **/metadata/fields** endpoint.string Default: \"scopes=_id\".", "type": "string"}}}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/QueryPOSTResult"}}}, "description": "Query response objects with the \"hits\" property"}, "400": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ErrorResult"}}}, "description": "A response indicating an improperly formatted query"}}, "summary": "Make batch disease queries and return matching disease hits", "tags": ["query"]}}}, "servers": [{"description": "Encrypted Production server", "url": "https://biothings.ncats.io/multiomics_wellness_kp"}, {"description": "Production server", "url": "https://biothings.ncats.io/multiomics_wellness_kp"}], "tags": [{"name": "protein"}, {"name": "chemical_substance"}, {"name": "association"}, {"name": "annotation"}, {"name": "query"}, {"name": "translator"}, {"name": "biothings"}, {"name": "biothings_graph"}]}]}